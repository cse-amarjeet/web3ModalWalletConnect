{"ast":null,"code":"var _jsxFileName = \"/home/amarjeet/Amarjeet/realwareWeb3/metamask_sign/Dapp-Starter code/client/src/App.js\";\nimport { EthereumClient, w3mConnectors, w3mProvider } from \"@web3modal/ethereum\";\nimport { Web3Modal, Web3Button } from \"@web3modal/react\";\nimport { configureChains, createConfig, WagmiConfig } from \"wagmi\";\nimport { arbitrum, mainnet, polygon, sepolia } from \"wagmi/chains\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chains = [arbitrum, mainnet, polygon, sepolia];\nconst projectId = \"bd8a51f1348a25cc2c457fbc509bb628\";\nconst {\n  publicClient\n} = configureChains(chains, [w3mProvider({\n  projectId\n})]);\nconst wagmiConfig = createConfig({\n  autoConnect: true,\n  connectors: w3mConnectors({\n    projectId,\n    chains\n  }),\n  publicClient\n});\nconst ethereumClient = new EthereumClient(wagmiConfig, chains);\nfunction App() {\n  // console.log(state);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(WagmiConfig, {\n        config: wagmiConfig,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"connect web3Model with Node Server\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Web3Button, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Web3Modal, {\n        projectId: projectId,\n        ethereumClient: ethereumClient\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["EthereumClient","w3mConnectors","w3mProvider","Web3Modal","Web3Button","configureChains","createConfig","WagmiConfig","arbitrum","mainnet","polygon","sepolia","jsxDEV","_jsxDEV","chains","projectId","publicClient","wagmiConfig","autoConnect","connectors","ethereumClient","App","className","children","config","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/amarjeet/Amarjeet/realwareWeb3/metamask_sign/Dapp-Starter code/client/src/App.js"],"sourcesContent":["import {\n  EthereumClient,\n  w3mConnectors,\n  w3mProvider,\n} from \"@web3modal/ethereum\";\nimport { Web3Modal, Web3Button } from \"@web3modal/react\";\nimport { configureChains, createConfig, WagmiConfig } from \"wagmi\";\nimport { arbitrum, mainnet, polygon , sepolia} from \"wagmi/chains\";\nimport './App.css';\n\n\nconst chains = [arbitrum, mainnet, polygon, sepolia];\nconst projectId = \"bd8a51f1348a25cc2c457fbc509bb628\";\n\nconst { publicClient } = configureChains(chains, [w3mProvider({ projectId })]);\nconst wagmiConfig = createConfig({\n  autoConnect: true,\n  connectors: w3mConnectors({ projectId, chains }),\n  publicClient,\n});\nconst ethereumClient = new EthereumClient(wagmiConfig, chains);\n\nfunction App() {\n  // console.log(state);\n\n  return (\n    <div className=\"App\">\n       <header className=\"App-header\">\n      <WagmiConfig config={wagmiConfig}>\n        <h1>connect web3Model with Node Server</h1>\n        <Web3Button />\n      </WagmiConfig>\n\n      <Web3Modal projectId={projectId} ethereumClient={ethereumClient} />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,SACEA,cAAc,EACdC,aAAa,EACbC,WAAW,QACN,qBAAqB;AAC5B,SAASC,SAAS,EAAEC,UAAU,QAAQ,kBAAkB;AACxD,SAASC,eAAe,EAAEC,YAAY,EAAEC,WAAW,QAAQ,OAAO;AAClE,SAASC,QAAQ,EAAEC,OAAO,EAAEC,OAAO,EAAGC,OAAO,QAAO,cAAc;AAClE,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnB,MAAMC,MAAM,GAAG,CAACN,QAAQ,EAAEC,OAAO,EAAEC,OAAO,EAAEC,OAAO,CAAC;AACpD,MAAMI,SAAS,GAAG,kCAAkC;AAEpD,MAAM;EAAEC;AAAa,CAAC,GAAGX,eAAe,CAACS,MAAM,EAAE,CAACZ,WAAW,CAAC;EAAEa;AAAU,CAAC,CAAC,CAAC,CAAC;AAC9E,MAAME,WAAW,GAAGX,YAAY,CAAC;EAC/BY,WAAW,EAAE,IAAI;EACjBC,UAAU,EAAElB,aAAa,CAAC;IAAEc,SAAS;IAAED;EAAO,CAAC,CAAC;EAChDE;AACF,CAAC,CAAC;AACF,MAAMI,cAAc,GAAG,IAAIpB,cAAc,CAACiB,WAAW,EAAEH,MAAM,CAAC;AAE9D,SAASO,GAAGA,CAAA,EAAG;EACb;;EAEA,oBACER,OAAA;IAAKS,SAAS,EAAC,KAAK;IAAAC,QAAA,eACjBV,OAAA;MAAQS,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC/BV,OAAA,CAACN,WAAW;QAACiB,MAAM,EAAEP,WAAY;QAAAM,QAAA,gBAC/BV,OAAA;UAAAU,QAAA,EAAI;QAAkC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eAC3Cf,OAAA,CAACT,UAAU;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACF,eAEdf,OAAA,CAACV,SAAS;QAACY,SAAS,EAAEA,SAAU;QAACK,cAAc,EAAEA;MAAe;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAC1D;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEV;AAACC,EAAA,GAfQR,GAAG;AAiBZ,eAAeA,GAAG;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
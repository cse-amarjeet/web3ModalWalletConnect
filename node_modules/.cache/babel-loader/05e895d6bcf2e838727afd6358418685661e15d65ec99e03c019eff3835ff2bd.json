{"ast":null,"code":"import { proxy as g, subscribe as f, snapshot as R } from \"valtio/vanilla\";\nconst o = g({\n    history: [\"ConnectWallet\"],\n    view: \"ConnectWallet\",\n    data: void 0\n  }),\n  W = {\n    state: o,\n    subscribe(e) {\n      return f(o, () => e(o));\n    },\n    push(e, t) {\n      e !== o.view && (o.view = e, t && (o.data = t), o.history.push(e));\n    },\n    reset(e) {\n      o.view = e, o.history = [e];\n    },\n    replace(e) {\n      o.history.length > 1 && (o.history[o.history.length - 1] = e, o.view = e);\n    },\n    goBack() {\n      if (o.history.length > 1) {\n        o.history.pop();\n        const [e] = o.history.slice(-1);\n        o.view = e;\n      }\n    },\n    setData(e) {\n      o.data = e;\n    }\n  },\n  i = {\n    WALLETCONNECT_DEEPLINK_CHOICE: \"WALLETCONNECT_DEEPLINK_CHOICE\",\n    W3M_VERSION: \"W3M_VERSION\",\n    W3M_PREFER_INJECTED_URL_FLAG: \"w3mPreferInjected\",\n    RECOMMENDED_WALLET_AMOUNT: 9,\n    isMobile() {\n      return typeof window < \"u\" ? Boolean(window.matchMedia(\"(pointer:coarse)\").matches || /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(navigator.userAgent)) : !1;\n    },\n    isAndroid() {\n      return i.isMobile() && navigator.userAgent.toLowerCase().includes(\"android\");\n    },\n    isIos() {\n      const e = navigator.userAgent.toLowerCase();\n      return i.isMobile() && (e.includes(\"iphone\") || e.includes(\"ipad\"));\n    },\n    isHttpUrl(e) {\n      return e.startsWith(\"http://\") || e.startsWith(\"https://\");\n    },\n    isArray(e) {\n      return Array.isArray(e) && e.length > 0;\n    },\n    formatNativeUrl(e, t, n) {\n      if (i.isHttpUrl(e)) return this.formatUniversalUrl(e, t, n);\n      let s = e;\n      s.includes(\"://\") || (s = e.replaceAll(\"/\", \"\").replaceAll(\":\", \"\"), s = `${s}://`), s.endsWith(\"/\") || (s = `${s}/`), this.setWalletConnectDeepLink(s, n);\n      const r = encodeURIComponent(t);\n      return `${s}wc?uri=${r}`;\n    },\n    formatUniversalUrl(e, t, n) {\n      if (!i.isHttpUrl(e)) return this.formatNativeUrl(e, t, n);\n      let s = e;\n      s.endsWith(\"/\") || (s = `${s}/`), this.setWalletConnectDeepLink(s, n);\n      const r = encodeURIComponent(t);\n      return `${s}wc?uri=${r}`;\n    },\n    async wait(e) {\n      return new Promise(t => {\n        setTimeout(t, e);\n      });\n    },\n    openHref(e, t) {\n      window.open(e, t, \"noreferrer noopener\");\n    },\n    setWalletConnectDeepLink(e, t) {\n      try {\n        localStorage.setItem(i.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({\n          href: e,\n          name: t\n        }));\n      } catch {\n        console.info(\"Unable to set WalletConnect deep link\");\n      }\n    },\n    setWalletConnectAndroidDeepLink(e) {\n      try {\n        const [t] = e.split(\"?\");\n        localStorage.setItem(i.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({\n          href: t,\n          name: \"Android\"\n        }));\n      } catch {\n        console.info(\"Unable to set WalletConnect android deep link\");\n      }\n    },\n    removeWalletConnectDeepLink() {\n      try {\n        localStorage.removeItem(i.WALLETCONNECT_DEEPLINK_CHOICE);\n      } catch {\n        console.info(\"Unable to remove WalletConnect deep link\");\n      }\n    },\n    setWeb3ModalVersionInStorage() {\n      try {\n        typeof localStorage < \"u\" && localStorage.setItem(i.W3M_VERSION, \"2.7.0\");\n      } catch {\n        console.info(\"Unable to set Web3Modal version in storage\");\n      }\n    },\n    getWalletRouterData() {\n      var e;\n      const t = (e = W.state.data) == null ? void 0 : e.Wallet;\n      if (!t) throw new Error('Missing \"Wallet\" view data');\n      return t;\n    },\n    getSwitchNetworkRouterData() {\n      var e;\n      const t = (e = W.state.data) == null ? void 0 : e.SwitchNetwork;\n      if (!t) throw new Error('Missing \"SwitchNetwork\" view data');\n      return t;\n    },\n    isPreferInjectedFlag() {\n      return typeof location < \"u\" ? new URLSearchParams(location.search).has(i.W3M_PREFER_INJECTED_URL_FLAG) : !1;\n    }\n  };\nlet k;\nconst h = {\n    ethereumClient: void 0,\n    setEthereumClient(e) {\n      k = e;\n    },\n    client() {\n      if (k) return k;\n      throw new Error(\"ClientCtrl has no client set\");\n    }\n  },\n  T = typeof location < \"u\" && (location.hostname.includes(\"localhost\") || location.protocol.includes(\"https\")),\n  l = g({\n    enabled: T,\n    userSessionId: \"\",\n    events: [],\n    connectedWalletId: void 0\n  }),\n  B = {\n    state: l,\n    subscribe(e) {\n      return f(l.events, () => e(R(l.events[l.events.length - 1])));\n    },\n    initialize() {\n      l.enabled && typeof (crypto == null ? void 0 : crypto.randomUUID) < \"u\" && (l.userSessionId = crypto.randomUUID());\n    },\n    setConnectedWalletId(e) {\n      l.connectedWalletId = e;\n    },\n    click(e) {\n      if (l.enabled) {\n        const t = {\n          type: \"CLICK\",\n          name: e.name,\n          userSessionId: l.userSessionId,\n          timestamp: Date.now(),\n          data: e\n        };\n        l.events.push(t);\n      }\n    },\n    track(e) {\n      if (l.enabled) {\n        const t = {\n          type: \"TRACK\",\n          name: e.name,\n          userSessionId: l.userSessionId,\n          timestamp: Date.now(),\n          data: e\n        };\n        l.events.push(t);\n      }\n    },\n    view(e) {\n      if (l.enabled) {\n        const t = {\n          type: \"VIEW\",\n          name: e.name,\n          userSessionId: l.userSessionId,\n          timestamp: Date.now(),\n          data: e\n        };\n        l.events.push(t);\n      }\n    }\n  },\n  p = g({\n    selectedChain: void 0,\n    chains: void 0,\n    isCustomDesktop: !1,\n    isCustomMobile: !1,\n    isDataLoaded: !1,\n    isUiLoaded: !1,\n    isPreferInjected: !1\n  }),\n  C = {\n    state: p,\n    subscribe(e) {\n      return f(p, () => e(p));\n    },\n    setChains(e) {\n      p.chains = e;\n    },\n    getSelectedChain() {\n      const e = h.client().getNetwork().chain;\n      return e && (p.selectedChain = e), p.selectedChain;\n    },\n    setSelectedChain(e) {\n      p.selectedChain = e;\n    },\n    setIsCustomDesktop(e) {\n      p.isCustomDesktop = e;\n    },\n    setIsCustomMobile(e) {\n      p.isCustomMobile = e;\n    },\n    setIsDataLoaded(e) {\n      p.isDataLoaded = e;\n    },\n    setIsUiLoaded(e) {\n      p.isUiLoaded = e;\n    },\n    setIsPreferInjected(e) {\n      p.isPreferInjected = e;\n    }\n  },\n  U = g({\n    projectId: \"\",\n    mobileWallets: void 0,\n    desktopWallets: void 0,\n    walletImages: void 0,\n    chainImages: void 0,\n    tokenImages: void 0,\n    tokenContracts: void 0,\n    enableNetworkView: !1,\n    enableAccountView: !0,\n    enableExplorer: !0,\n    defaultChain: void 0,\n    explorerExcludedWalletIds: void 0,\n    explorerRecommendedWalletIds: void 0,\n    termsOfServiceUrl: void 0,\n    privacyPolicyUrl: void 0\n  }),\n  b = {\n    state: U,\n    subscribe(e) {\n      return f(U, () => e(U));\n    },\n    setConfig(e) {\n      var t, n;\n      B.initialize(), C.setIsCustomMobile(Boolean((t = e.mobileWallets) == null ? void 0 : t.length)), C.setIsCustomDesktop(Boolean((n = e.desktopWallets) == null ? void 0 : n.length)), C.setChains(h.client().chains), C.setIsPreferInjected(h.client().isInjectedProviderInstalled() && i.isPreferInjectedFlag()), e.defaultChain && C.setSelectedChain(e.defaultChain), i.setWeb3ModalVersionInStorage(), Object.assign(U, e);\n    }\n  },\n  V = \"eip155\",\n  H = \"https://rpc.walletconnect.com\",\n  K = {\n    async getIdentity(e, t) {\n      const {\n          projectId: n\n        } = b.state,\n        s = `${V}:${t}`,\n        r = `${H}/v1/identity/${e}?chainId=${s}&projectId=${n}`;\n      return (await fetch(r)).json();\n    }\n  },\n  a = g({\n    address: void 0,\n    profileName: void 0,\n    profileAvatar: void 0,\n    profileLoading: !1,\n    balanceLoading: !1,\n    balance: void 0,\n    isConnected: !1\n  }),\n  F = {\n    state: a,\n    subscribe(e) {\n      return f(a, () => e(a));\n    },\n    getAccount() {\n      const e = h.client().getAccount();\n      a.address = e.address, a.isConnected = e.isConnected;\n    },\n    async fetchProfile(e, t) {\n      var n;\n      try {\n        a.profileLoading = !0, a.profileName = null, a.profileAvatar = null;\n        const s = t ?? a.address,\n          r = 1,\n          d = (n = C.state.chains) == null ? void 0 : n.find(c => c.id === r);\n        if (s && d) {\n          try {\n            const c = await K.getIdentity(s, r);\n            a.profileName = c.name, a.profileAvatar = c.avatar;\n          } catch {\n            const m = await h.client().fetchEnsName({\n              address: s,\n              chainId: r\n            });\n            if (a.profileName = m, m) {\n              const v = await h.client().fetchEnsAvatar({\n                name: m,\n                chainId: r\n              });\n              a.profileAvatar = v;\n            }\n          }\n          a.profileAvatar && (await e(a.profileAvatar));\n        }\n      } finally {\n        a.profileLoading = !1;\n      }\n    },\n    async fetchBalance(e) {\n      try {\n        const {\n            chain: t\n          } = h.client().getNetwork(),\n          {\n            tokenContracts: n\n          } = b.state;\n        let s;\n        t && n && (s = n[t.id]), a.balanceLoading = !0;\n        const r = e ?? a.address;\n        if (r) {\n          const d = await h.client().fetchBalance({\n            address: r,\n            token: s\n          });\n          a.balance = {\n            amount: d.formatted,\n            symbol: d.symbol\n          };\n        }\n      } finally {\n        a.balanceLoading = !1;\n      }\n    },\n    setAddress(e) {\n      a.address = e;\n    },\n    setIsConnected(e) {\n      a.isConnected = e;\n    },\n    resetBalance() {\n      a.balance = void 0;\n    },\n    resetAccount() {\n      a.address = void 0, a.isConnected = !1, a.profileName = void 0, a.profileAvatar = void 0, a.balance = void 0;\n    }\n  },\n  M = \"https://explorer-api.walletconnect.com\";\nasync function N(e, t) {\n  const n = new URL(e, M);\n  return n.searchParams.append(\"projectId\", b.state.projectId), Object.entries(t).forEach(_ref => {\n    let [s, r] = _ref;\n    r && n.searchParams.append(s, String(r));\n  }), (await fetch(n)).json();\n}\nconst I = {\n  async getDesktopListings(e) {\n    return N(\"/w3m/v1/getDesktopListings\", e);\n  },\n  async getMobileListings(e) {\n    return N(\"/w3m/v1/getMobileListings\", e);\n  },\n  async getInjectedListings(e) {\n    return N(\"/w3m/v1/getInjectedListings\", e);\n  },\n  async getAllListings(e) {\n    return N(\"/w3m/v1/getAllListings\", e);\n  },\n  getWalletImageUrl(e) {\n    return `${M}/w3m/v1/getWalletImage/${e}?projectId=${b.state.projectId}`;\n  },\n  getAssetImageUrl(e) {\n    return `${M}/w3m/v1/getAssetImage/${e}?projectId=${b.state.projectId}`;\n  }\n};\nvar J = Object.defineProperty,\n  P = Object.getOwnPropertySymbols,\n  z = Object.prototype.hasOwnProperty,\n  G = Object.prototype.propertyIsEnumerable,\n  S = (e, t, n) => t in e ? J(e, t, {\n    enumerable: !0,\n    configurable: !0,\n    writable: !0,\n    value: n\n  }) : e[t] = n,\n  q = (e, t) => {\n    for (var n in t || (t = {})) z.call(t, n) && S(e, n, t[n]);\n    if (P) for (var n of P(t)) G.call(t, n) && S(e, n, t[n]);\n    return e;\n  };\nconst $ = i.isMobile(),\n  u = g({\n    wallets: {\n      listings: [],\n      total: 0,\n      page: 1\n    },\n    injectedWallets: [],\n    search: {\n      listings: [],\n      total: 0,\n      page: 1\n    },\n    recomendedWallets: []\n  }),\n  ne = {\n    state: u,\n    async getRecomendedWallets() {\n      const {\n        explorerRecommendedWalletIds: e,\n        explorerExcludedWalletIds: t\n      } = b.state;\n      if (e === \"NONE\" || t === \"ALL\" && !e) return u.recomendedWallets;\n      if (i.isArray(e)) {\n        const n = {\n            recommendedIds: e.join(\",\")\n          },\n          {\n            listings: s\n          } = await I.getAllListings(n),\n          r = Object.values(s);\n        r.sort((d, c) => {\n          const m = e.indexOf(d.id),\n            v = e.indexOf(c.id);\n          return m - v;\n        }), u.recomendedWallets = r;\n      } else {\n        const n = i.isArray(t),\n          s = {\n            page: 1,\n            entries: i.RECOMMENDED_WALLET_AMOUNT,\n            version: 2,\n            excludedIds: n ? t.join(\",\") : void 0\n          },\n          {\n            listings: r\n          } = $ ? await I.getMobileListings(s) : await I.getDesktopListings(s);\n        u.recomendedWallets = Object.values(r);\n      }\n      return u.recomendedWallets;\n    },\n    async getWallets(e) {\n      const t = q({}, e),\n        {\n          explorerRecommendedWalletIds: n,\n          explorerExcludedWalletIds: s\n        } = b.state,\n        {\n          recomendedWallets: r\n        } = u;\n      if (s === \"ALL\") return u.wallets;\n      r.length ? t.excludedIds = r.map(O => O.id).join(\",\") : i.isArray(n) && (t.excludedIds = n.join(\",\")), i.isArray(s) && (t.excludedIds = [t.excludedIds, s].filter(Boolean).join(\",\"));\n      const {\n          page: d,\n          search: c\n        } = e,\n        {\n          listings: m,\n          total: v\n        } = $ ? await I.getMobileListings(t) : await I.getDesktopListings(t),\n        y = Object.values(m),\n        A = c ? \"search\" : \"wallets\";\n      return u[A] = {\n        listings: [...u[A].listings, ...y],\n        total: v,\n        page: d ?? 1\n      }, {\n        listings: y,\n        total: v\n      };\n    },\n    async getInjectedWallets() {\n      const {\n          listings: e\n        } = await I.getInjectedListings({}),\n        t = Object.values(e);\n      return u.injectedWallets = t, u.injectedWallets;\n    },\n    getWalletImageUrl(e) {\n      return I.getWalletImageUrl(e);\n    },\n    getAssetImageUrl(e) {\n      return I.getAssetImageUrl(e);\n    },\n    resetSearch() {\n      u.search = {\n        listings: [],\n        total: 0,\n        page: 1\n      };\n    }\n  },\n  E = g({\n    pairingEnabled: !1,\n    pairingUri: \"\",\n    pairingError: !1\n  }),\n  D = {\n    state: E,\n    subscribe(e) {\n      return f(E, () => e(E));\n    },\n    setPairingUri(e) {\n      E.pairingUri = e;\n    },\n    setPairingError(e) {\n      E.pairingError = e;\n    },\n    setPairingEnabled(e) {\n      E.pairingEnabled = e;\n    }\n  },\n  L = g({\n    open: !1\n  }),\n  se = {\n    state: L,\n    subscribe(e) {\n      return f(L, () => e(L));\n    },\n    async open(e) {\n      return new Promise(t => {\n        const {\n            isUiLoaded: n,\n            isDataLoaded: s,\n            isPreferInjected: r,\n            selectedChain: d\n          } = C.state,\n          {\n            isConnected: c\n          } = F.state,\n          {\n            enableNetworkView: m\n          } = b.state;\n        if (D.setPairingEnabled(!0), e != null && e.route) W.reset(e.route);else if (c) W.reset(\"Account\");else if (m) W.reset(\"SelectNetwork\");else if (r) {\n          h.client().connectConnector(\"injected\", d?.id).catch(y => console.error(y)), t();\n          return;\n        } else W.reset(\"ConnectWallet\");\n        const {\n          pairingUri: v\n        } = D.state;\n        if (n && s && (v || c)) L.open = !0, t();else {\n          const y = setInterval(() => {\n            const A = C.state,\n              O = D.state;\n            A.isUiLoaded && A.isDataLoaded && (O.pairingUri || c) && (clearInterval(y), L.open = !0, t());\n          }, 200);\n        }\n      });\n    },\n    close() {\n      L.open = !1;\n    }\n  };\nvar Q = Object.defineProperty,\n  _ = Object.getOwnPropertySymbols,\n  X = Object.prototype.hasOwnProperty,\n  Y = Object.prototype.propertyIsEnumerable,\n  x = (e, t, n) => t in e ? Q(e, t, {\n    enumerable: !0,\n    configurable: !0,\n    writable: !0,\n    value: n\n  }) : e[t] = n,\n  Z = (e, t) => {\n    for (var n in t || (t = {})) X.call(t, n) && x(e, n, t[n]);\n    if (_) for (var n of _(t)) Y.call(t, n) && x(e, n, t[n]);\n    return e;\n  };\nfunction ee() {\n  return typeof matchMedia < \"u\" && matchMedia(\"(prefers-color-scheme: dark)\").matches;\n}\nconst j = g({\n    themeMode: ee() ? \"dark\" : \"light\"\n  }),\n  ae = {\n    state: j,\n    subscribe(e) {\n      return f(j, () => e(j));\n    },\n    setThemeConfig(e) {\n      const {\n        themeMode: t,\n        themeVariables: n\n      } = e;\n      t && (j.themeMode = t), n && (j.themeVariables = Z({}, n));\n    }\n  },\n  w = g({\n    open: !1,\n    message: \"\",\n    variant: \"success\"\n  }),\n  re = {\n    state: w,\n    subscribe(e) {\n      return f(w, () => e(w));\n    },\n    openToast(e, t) {\n      w.open = !0, w.message = e, w.variant = t;\n    },\n    closeToast() {\n      w.open = !1;\n    }\n  };\nexport { F as AccountCtrl, h as ClientCtrl, b as ConfigCtrl, i as CoreUtil, B as EventsCtrl, ne as ExplorerCtrl, se as ModalCtrl, C as OptionsCtrl, W as RouterCtrl, ae as ThemeCtrl, re as ToastCtrl, D as WcConnectionCtrl };","map":{"version":3,"names":["o","g","history","view","data","W","state","subscribe","e","f","push","t","reset","replace","length","goBack","pop","slice","setData","i","WALLETCONNECT_DEEPLINK_CHOICE","W3M_VERSION","W3M_PREFER_INJECTED_URL_FLAG","RECOMMENDED_WALLET_AMOUNT","isMobile","window","Boolean","matchMedia","matches","test","navigator","userAgent","isAndroid","toLowerCase","includes","isIos","isHttpUrl","startsWith","isArray","Array","formatNativeUrl","n","formatUniversalUrl","s","replaceAll","endsWith","setWalletConnectDeepLink","r","encodeURIComponent","wait","Promise","setTimeout","openHref","open","localStorage","setItem","JSON","stringify","href","name","console","info","setWalletConnectAndroidDeepLink","split","removeWalletConnectDeepLink","removeItem","setWeb3ModalVersionInStorage","getWalletRouterData","Wallet","Error","getSwitchNetworkRouterData","SwitchNetwork","isPreferInjectedFlag","location","URLSearchParams","search","has","k","h","ethereumClient","setEthereumClient","client","T","hostname","protocol","l","enabled","userSessionId","events","connectedWalletId","B","R","initialize","crypto","randomUUID","setConnectedWalletId","click","type","timestamp","Date","now","track","p","selectedChain","chains","isCustomDesktop","isCustomMobile","isDataLoaded","isUiLoaded","isPreferInjected","C","setChains","getSelectedChain","getNetwork","chain","setSelectedChain","setIsCustomDesktop","setIsCustomMobile","setIsDataLoaded","setIsUiLoaded","setIsPreferInjected","U","projectId","mobileWallets","desktopWallets","walletImages","chainImages","tokenImages","tokenContracts","enableNetworkView","enableAccountView","enableExplorer","defaultChain","explorerExcludedWalletIds","explorerRecommendedWalletIds","termsOfServiceUrl","privacyPolicyUrl","b","setConfig","isInjectedProviderInstalled","Object","assign","V","H","K","getIdentity","fetch","json","a","address","profileName","profileAvatar","profileLoading","balanceLoading","balance","isConnected","F","getAccount","fetchProfile","d","find","c","id","avatar","m","fetchEnsName","chainId","v","fetchEnsAvatar","fetchBalance","token","amount","formatted","symbol","setAddress","setIsConnected","resetBalance","resetAccount","M","N","URL","searchParams","append","entries","forEach","_ref","String","I","getDesktopListings","getMobileListings","getInjectedListings","getAllListings","getWalletImageUrl","getAssetImageUrl","J","defineProperty","P","getOwnPropertySymbols","z","prototype","hasOwnProperty","G","propertyIsEnumerable","S","u","enumerable","configurable","writable","value","q","call","$","wallets","listings","total","page","injectedWallets","recomendedWallets","ne","getRecomendedWallets","recommendedIds","join","values","sort","indexOf","version","excludedIds","getWallets","map","O","filter","y","A","getInjectedWallets","resetSearch","E","pairingEnabled","pairingUri","pairingError","D","setPairingUri","setPairingError","setPairingEnabled","L","se","route","connectConnector","catch","error","setInterval","clearInterval","close","Q","_","X","Y","x","Z","ee","j","themeMode","ae","setThemeConfig","themeVariables","w","message","variant","re","openToast","closeToast","AccountCtrl","ClientCtrl","ConfigCtrl","CoreUtil","EventsCtrl","ExplorerCtrl","ModalCtrl","OptionsCtrl","RouterCtrl","ThemeCtrl","ToastCtrl","WcConnectionCtrl"],"sources":["/home/amarjeet/Amarjeet/realwareWeb3/metamask_sign/Dapp-Starter code/node_modules/@web3modal/core/src/controllers/RouterCtrl.ts","/home/amarjeet/Amarjeet/realwareWeb3/metamask_sign/Dapp-Starter code/node_modules/@web3modal/core/src/utils/CoreUtil.ts","/home/amarjeet/Amarjeet/realwareWeb3/metamask_sign/Dapp-Starter code/node_modules/@web3modal/core/src/controllers/ClientCtrl.ts","/home/amarjeet/Amarjeet/realwareWeb3/metamask_sign/Dapp-Starter code/node_modules/@web3modal/core/src/controllers/EventsCtrl.ts","/home/amarjeet/Amarjeet/realwareWeb3/metamask_sign/Dapp-Starter code/node_modules/@web3modal/core/src/controllers/OptionsCtrl.ts","/home/amarjeet/Amarjeet/realwareWeb3/metamask_sign/Dapp-Starter code/node_modules/@web3modal/core/src/controllers/ConfigCtrl.ts","/home/amarjeet/Amarjeet/realwareWeb3/metamask_sign/Dapp-Starter code/node_modules/@web3modal/core/src/utils/BlockchainApiUtil.ts","/home/amarjeet/Amarjeet/realwareWeb3/metamask_sign/Dapp-Starter code/node_modules/@web3modal/core/src/controllers/AccountCtrl.ts","/home/amarjeet/Amarjeet/realwareWeb3/metamask_sign/Dapp-Starter code/node_modules/@web3modal/core/src/utils/ExplorerUtil.ts","/home/amarjeet/Amarjeet/realwareWeb3/metamask_sign/Dapp-Starter code/node_modules/@web3modal/core/src/controllers/ExplorerCtrl.ts","/home/amarjeet/Amarjeet/realwareWeb3/metamask_sign/Dapp-Starter code/node_modules/@web3modal/core/src/controllers/WcConnectionCtrl.ts","/home/amarjeet/Amarjeet/realwareWeb3/metamask_sign/Dapp-Starter code/node_modules/@web3modal/core/src/controllers/ModalCtrl.ts","/home/amarjeet/Amarjeet/realwareWeb3/metamask_sign/Dapp-Starter code/node_modules/@web3modal/core/src/controllers/ThemeCtrl.ts","/home/amarjeet/Amarjeet/realwareWeb3/metamask_sign/Dapp-Starter code/node_modules/@web3modal/core/src/controllers/ToastCtrl.ts"],"sourcesContent":["import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { RouterCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<RouterCtrlState>({\n  history: ['ConnectWallet'],\n  view: 'ConnectWallet',\n  data: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const RouterCtrl = {\n  state,\n\n  subscribe(callback: (newState: RouterCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  push(view: RouterCtrlState['view'], data?: RouterCtrlState['data']) {\n    if (view !== state.view) {\n      state.view = view\n      if (data) {\n        state.data = data\n      }\n      state.history.push(view)\n    }\n  },\n\n  reset(view: RouterCtrlState['view']) {\n    state.view = view\n    state.history = [view]\n  },\n\n  replace(view: RouterCtrlState['view']) {\n    if (state.history.length > 1) {\n      state.history[state.history.length - 1] = view\n      state.view = view\n    }\n  },\n\n  goBack() {\n    if (state.history.length > 1) {\n      state.history.pop()\n      const [last] = state.history.slice(-1)\n      state.view = last\n    }\n  },\n\n  setData(data: RouterCtrlState['data']) {\n    state.data = data\n  }\n}\n","import { RouterCtrl } from '../controllers/RouterCtrl'\n\nexport const CoreUtil = {\n  WALLETCONNECT_DEEPLINK_CHOICE: 'WALLETCONNECT_DEEPLINK_CHOICE',\n\n  W3M_VERSION: 'W3M_VERSION',\n\n  W3M_PREFER_INJECTED_URL_FLAG: 'w3mPreferInjected',\n\n  RECOMMENDED_WALLET_AMOUNT: 9,\n\n  isMobile() {\n    if (typeof window !== 'undefined') {\n      return Boolean(\n        window.matchMedia('(pointer:coarse)').matches ||\n          /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(navigator.userAgent)\n      )\n    }\n\n    return false\n  },\n\n  isAndroid() {\n    return CoreUtil.isMobile() && navigator.userAgent.toLowerCase().includes('android')\n  },\n\n  isIos() {\n    const ua = navigator.userAgent.toLowerCase()\n\n    return CoreUtil.isMobile() && (ua.includes('iphone') || ua.includes('ipad'))\n  },\n\n  isHttpUrl(url: string) {\n    return url.startsWith('http://') || url.startsWith('https://')\n  },\n\n  isArray<T>(data?: T | T[]): data is T[] {\n    return Array.isArray(data) && data.length > 0\n  },\n\n  formatNativeUrl(appUrl: string, wcUri: string, name: string): string {\n    if (CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatUniversalUrl(appUrl, wcUri, name)\n    }\n    let safeAppUrl = appUrl\n    if (!safeAppUrl.includes('://')) {\n      safeAppUrl = appUrl.replaceAll('/', '').replaceAll(':', '')\n      safeAppUrl = `${safeAppUrl}://`\n    }\n    if (!safeAppUrl.endsWith('/')) {\n      safeAppUrl = `${safeAppUrl}/`\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`\n  },\n\n  formatUniversalUrl(appUrl: string, wcUri: string, name: string): string {\n    if (!CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatNativeUrl(appUrl, wcUri, name)\n    }\n    let safeAppUrl = appUrl\n    if (!safeAppUrl.endsWith('/')) {\n      safeAppUrl = `${safeAppUrl}/`\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`\n  },\n\n  async wait(miliseconds: number) {\n    return new Promise(resolve => {\n      setTimeout(resolve, miliseconds)\n    })\n  },\n\n  openHref(href: string, target: '_blank' | '_self') {\n    window.open(href, target, 'noreferrer noopener')\n  },\n\n  setWalletConnectDeepLink(href: string, name: string) {\n    try {\n      localStorage.setItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({ href, name }))\n    } catch {\n      console.info('Unable to set WalletConnect deep link')\n    }\n  },\n\n  setWalletConnectAndroidDeepLink(wcUri: string) {\n    try {\n      const [href] = wcUri.split('?')\n      localStorage.setItem(\n        CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE,\n        JSON.stringify({ href, name: 'Android' })\n      )\n    } catch {\n      console.info('Unable to set WalletConnect android deep link')\n    }\n  },\n\n  removeWalletConnectDeepLink() {\n    try {\n      localStorage.removeItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE)\n    } catch {\n      console.info('Unable to remove WalletConnect deep link')\n    }\n  },\n\n  setWeb3ModalVersionInStorage() {\n    try {\n      if (typeof localStorage !== 'undefined') {\n        localStorage.setItem(CoreUtil.W3M_VERSION, process.env.ROLLUP_W3M_VERSION ?? 'UNKNOWN')\n      }\n    } catch {\n      console.info('Unable to set Web3Modal version in storage')\n    }\n  },\n\n  getWalletRouterData() {\n    const routerData = RouterCtrl.state.data?.Wallet\n    if (!routerData) {\n      throw new Error('Missing \"Wallet\" view data')\n    }\n\n    return routerData\n  },\n\n  getSwitchNetworkRouterData() {\n    const routerData = RouterCtrl.state.data?.SwitchNetwork\n    if (!routerData) {\n      throw new Error('Missing \"SwitchNetwork\" view data')\n    }\n\n    return routerData\n  },\n\n  isPreferInjectedFlag() {\n    if (typeof location !== 'undefined') {\n      const queryParams = new URLSearchParams(location.search)\n\n      return queryParams.has(CoreUtil.W3M_PREFER_INJECTED_URL_FLAG)\n    }\n\n    return false\n  }\n}\n","import type { ClientCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nlet client: ClientCtrlState['ethereumClient'] = undefined\n\n// -- controller -- As function to enable correct ssr handling\nexport const ClientCtrl = {\n  ethereumClient: undefined,\n\n  setEthereumClient(ethereumClient: ClientCtrlState['ethereumClient']) {\n    client = ethereumClient\n  },\n\n  client() {\n    if (client) {\n      return client\n    }\n\n    throw new Error('ClientCtrl has no client set')\n  }\n}\n","import { proxy, snapshot, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { EventsCtrlState, ModalEvent, ModalEventData } from '../types/controllerTypes'\n\n// -- helpers ------------------------------------------------------ //\nconst isEnabled =\n  typeof location !== 'undefined' &&\n  (location.hostname.includes('localhost') || location.protocol.includes('https'))\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<EventsCtrlState>({\n  enabled: isEnabled,\n  userSessionId: '',\n  events: [],\n  connectedWalletId: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const EventsCtrl = {\n  state,\n\n  subscribe(callback: (newEvent: ModalEvent) => void) {\n    return valtioSub(state.events, () => callback(snapshot(state.events[state.events.length - 1])))\n  },\n\n  initialize() {\n    if (state.enabled && typeof crypto?.randomUUID !== 'undefined') {\n      state.userSessionId = crypto.randomUUID()\n    }\n  },\n\n  setConnectedWalletId(connectedWalletId: EventsCtrlState['connectedWalletId']) {\n    state.connectedWalletId = connectedWalletId\n  },\n\n  click(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'CLICK' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  },\n\n  track(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'TRACK' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  },\n\n  view(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'VIEW' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { OptionsCtrlState } from '../types/controllerTypes'\nimport { ClientCtrl } from './ClientCtrl'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<OptionsCtrlState>({\n  selectedChain: undefined,\n  chains: undefined,\n  isCustomDesktop: false,\n  isCustomMobile: false,\n  isDataLoaded: false,\n  isUiLoaded: false,\n  isPreferInjected: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const OptionsCtrl = {\n  state,\n\n  subscribe(callback: (newState: OptionsCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setChains(chains?: OptionsCtrlState['chains']) {\n    state.chains = chains\n  },\n\n  getSelectedChain() {\n    const selectedChain = ClientCtrl.client().getNetwork().chain\n    if (selectedChain) {\n      state.selectedChain = selectedChain\n    }\n\n    return state.selectedChain\n  },\n\n  setSelectedChain(selectedChain: OptionsCtrlState['selectedChain']) {\n    state.selectedChain = selectedChain\n  },\n\n  setIsCustomDesktop(isCustomDesktop: OptionsCtrlState['isCustomDesktop']) {\n    state.isCustomDesktop = isCustomDesktop\n  },\n\n  setIsCustomMobile(isCustomMobile: OptionsCtrlState['isCustomMobile']) {\n    state.isCustomMobile = isCustomMobile\n  },\n\n  setIsDataLoaded(isDataLoaded: OptionsCtrlState['isDataLoaded']) {\n    state.isDataLoaded = isDataLoaded\n  },\n\n  setIsUiLoaded(isUiLoaded: OptionsCtrlState['isUiLoaded']) {\n    state.isUiLoaded = isUiLoaded\n  },\n\n  setIsPreferInjected(isPreferInjected: OptionsCtrlState['isPreferInjected']) {\n    state.isPreferInjected = isPreferInjected\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ConfigCtrlState } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { ClientCtrl } from './ClientCtrl'\nimport { EventsCtrl } from './EventsCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\n\nconst state = proxy<ConfigCtrlState>({\n  projectId: '',\n  mobileWallets: undefined,\n  desktopWallets: undefined,\n  walletImages: undefined,\n  chainImages: undefined,\n  tokenImages: undefined,\n  tokenContracts: undefined,\n  enableNetworkView: false,\n  enableAccountView: true,\n  enableExplorer: true,\n  defaultChain: undefined,\n  explorerExcludedWalletIds: undefined,\n  explorerRecommendedWalletIds: undefined,\n  termsOfServiceUrl: undefined,\n  privacyPolicyUrl: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const ConfigCtrl = {\n  state,\n\n  subscribe(callback: (newState: ConfigCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setConfig(config: ConfigCtrlState) {\n    EventsCtrl.initialize()\n    OptionsCtrl.setIsCustomMobile(Boolean(config.mobileWallets?.length))\n    OptionsCtrl.setIsCustomDesktop(Boolean(config.desktopWallets?.length))\n    OptionsCtrl.setChains(ClientCtrl.client().chains)\n    OptionsCtrl.setIsPreferInjected(\n      ClientCtrl.client().isInjectedProviderInstalled() && CoreUtil.isPreferInjectedFlag()\n    )\n\n    if (config.defaultChain) {\n      OptionsCtrl.setSelectedChain(config.defaultChain)\n    }\n\n    CoreUtil.setWeb3ModalVersionInStorage()\n\n    Object.assign(state, config)\n  }\n}\n","import { ConfigCtrl } from '../controllers/ConfigCtrl'\n\n// -- Constants -----------------------------------------------------\nexport const NAMESPACE = 'eip155'\nconst BLOCKCHAIN_API = 'https://rpc.walletconnect.com'\n\n// -- Utility -------------------------------------------------------\nexport const BlockchainApiUtil = {\n  async getIdentity(address: string, chainId: number): Promise<{ name?: string; avatar?: string }> {\n    const { projectId } = ConfigCtrl.state\n    const chain_id = `${NAMESPACE}:${chainId}`\n    const endpoint = `${BLOCKCHAIN_API}/v1/identity/${address}?chainId=${chain_id}&projectId=${projectId}`\n\n    return (await fetch(endpoint)).json()\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { AccountCtrlState } from '../types/controllerTypes'\nimport { BlockchainApiUtil } from '../utils/BlockchainApiUtil'\nimport { ClientCtrl } from './ClientCtrl'\nimport { ConfigCtrl } from './ConfigCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<AccountCtrlState>({\n  address: undefined,\n  profileName: undefined,\n  profileAvatar: undefined,\n  profileLoading: false,\n  balanceLoading: false,\n  balance: undefined,\n  isConnected: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const AccountCtrl = {\n  state,\n\n  subscribe(callback: (newState: AccountCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  getAccount() {\n    const account = ClientCtrl.client().getAccount()\n    state.address = account.address\n    state.isConnected = account.isConnected\n  },\n\n  async fetchProfile(\n    preloadAvatarFn: (avatar: string) => Promise<unknown>,\n    profileAddress?: `0x${string}`\n  ) {\n    try {\n      state.profileLoading = true\n      state.profileName = null\n      state.profileAvatar = null\n      const address = profileAddress ?? state.address\n      const mainnetId = 1\n      const isMainnetConfigured = OptionsCtrl.state.chains?.find(chain => chain.id === mainnetId)\n      if (address && isMainnetConfigured) {\n        try {\n          const profile = await BlockchainApiUtil.getIdentity(address, mainnetId)\n          state.profileName = profile.name\n          state.profileAvatar = profile.avatar\n        } catch {\n          // If problem resolving the identity using our own Identity API, fallback to RPC resolution\n          const name = await ClientCtrl.client().fetchEnsName({ address, chainId: mainnetId })\n          state.profileName = name\n          if (name) {\n            const avatar = await ClientCtrl.client().fetchEnsAvatar({ name, chainId: mainnetId })\n            state.profileAvatar = avatar\n          }\n        }\n        if (state.profileAvatar) {\n          await preloadAvatarFn(state.profileAvatar)\n        }\n      }\n    } finally {\n      state.profileLoading = false\n    }\n  },\n\n  async fetchBalance(balanceAddress?: `0x${string}`) {\n    try {\n      const { chain } = ClientCtrl.client().getNetwork()\n      const { tokenContracts } = ConfigCtrl.state\n      let token: `0x${string}` | undefined = undefined\n      if (chain && tokenContracts) {\n        token = tokenContracts[chain.id] as `0x${string}`\n      }\n      state.balanceLoading = true\n      const address = balanceAddress ?? state.address\n      if (address) {\n        const balance = await ClientCtrl.client().fetchBalance({ address, token })\n        state.balance = { amount: balance.formatted, symbol: balance.symbol }\n      }\n    } finally {\n      state.balanceLoading = false\n    }\n  },\n\n  setAddress(address: AccountCtrlState['address']) {\n    state.address = address\n  },\n\n  setIsConnected(isConnected: AccountCtrlState['isConnected']) {\n    state.isConnected = isConnected\n  },\n\n  resetBalance() {\n    state.balance = undefined\n  },\n\n  resetAccount() {\n    state.address = undefined\n    state.isConnected = false\n    state.profileName = undefined\n    state.profileAvatar = undefined\n    state.balance = undefined\n  }\n}\n","import { ConfigCtrl } from '../controllers/ConfigCtrl'\nimport type { ListingParams, ListingResponse } from '../types/controllerTypes'\n\n// -- Helpers -------------------------------------------------------\nconst W3M_API = 'https://explorer-api.walletconnect.com'\n\nasync function fetchListings(endpoint: string, params: ListingParams) {\n  const url = new URL(endpoint, W3M_API)\n  url.searchParams.append('projectId', ConfigCtrl.state.projectId)\n  Object.entries(params).forEach(([key, value]) => {\n    if (value) {\n      url.searchParams.append(key, String(value))\n    }\n  })\n  const request = await fetch(url)\n\n  return request.json() as Promise<ListingResponse>\n}\n\n// -- Utility -------------------------------------------------------\nexport const ExplorerUtil = {\n  async getDesktopListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getDesktopListings', params)\n  },\n\n  async getMobileListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getMobileListings', params)\n  },\n\n  async getInjectedListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getInjectedListings', params)\n  },\n\n  async getAllListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getAllListings', params)\n  },\n\n  getWalletImageUrl(imageId: string) {\n    return `${W3M_API}/w3m/v1/getWalletImage/${imageId}?projectId=${ConfigCtrl.state.projectId}`\n  },\n\n  getAssetImageUrl(imageId: string) {\n    return `${W3M_API}/w3m/v1/getAssetImage/${imageId}?projectId=${ConfigCtrl.state.projectId}`\n  }\n}\n","import { proxy } from 'valtio/vanilla'\nimport type { ExplorerCtrlState, ListingParams } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { ExplorerUtil } from '../utils/ExplorerUtil'\nimport { ConfigCtrl } from './ConfigCtrl'\n\nconst isMobile = CoreUtil.isMobile()\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ExplorerCtrlState>({\n  wallets: { listings: [], total: 0, page: 1 },\n  injectedWallets: [],\n  search: { listings: [], total: 0, page: 1 },\n  recomendedWallets: []\n})\n\n// -- controller --------------------------------------------------- //\nexport const ExplorerCtrl = {\n  state,\n\n  async getRecomendedWallets() {\n    const { explorerRecommendedWalletIds, explorerExcludedWalletIds } = ConfigCtrl.state\n\n    // Don't fetch recomended wallets\n    if (\n      explorerRecommendedWalletIds === 'NONE' ||\n      (explorerExcludedWalletIds === 'ALL' && !explorerRecommendedWalletIds)\n    ) {\n      return state.recomendedWallets\n    }\n\n    // Fetch only recomended wallets defined in config\n    if (CoreUtil.isArray(explorerRecommendedWalletIds)) {\n      const recommendedIds = explorerRecommendedWalletIds.join(',')\n      const params = { recommendedIds }\n      const { listings } = await ExplorerUtil.getAllListings(params)\n      const listingsArr = Object.values(listings)\n      listingsArr.sort((a, b) => {\n        const aIndex = explorerRecommendedWalletIds.indexOf(a.id)\n        const bIndex = explorerRecommendedWalletIds.indexOf(b.id)\n\n        return aIndex - bIndex\n      })\n      state.recomendedWallets = listingsArr\n    }\n\n    // Fetch default recomended wallets based on user's device, options and excluded config\n    else {\n      const isExcluded = CoreUtil.isArray(explorerExcludedWalletIds)\n      const params = {\n        page: 1,\n        entries: CoreUtil.RECOMMENDED_WALLET_AMOUNT,\n        version: 2,\n        excludedIds: isExcluded ? explorerExcludedWalletIds.join(',') : undefined\n      }\n      const { listings } = isMobile\n        ? await ExplorerUtil.getMobileListings(params)\n        : await ExplorerUtil.getDesktopListings(params)\n      state.recomendedWallets = Object.values(listings)\n    }\n\n    return state.recomendedWallets\n  },\n\n  async getWallets(params: ListingParams) {\n    const extendedParams: ListingParams = { ...params }\n    const { explorerRecommendedWalletIds, explorerExcludedWalletIds } = ConfigCtrl.state\n    const { recomendedWallets } = state\n\n    // Don't fetch any wallets if all are excluded\n    if (explorerExcludedWalletIds === 'ALL') {\n      return state.wallets\n    }\n\n    // Don't fetch recomended wallets, as we already have these\n    if (recomendedWallets.length) {\n      extendedParams.excludedIds = recomendedWallets.map(wallet => wallet.id).join(',')\n    } else if (CoreUtil.isArray(explorerRecommendedWalletIds)) {\n      extendedParams.excludedIds = explorerRecommendedWalletIds.join(',')\n    }\n\n    // Don't fetch user defined excluded wallets & recomended wallets\n    if (CoreUtil.isArray(explorerExcludedWalletIds)) {\n      extendedParams.excludedIds = [extendedParams.excludedIds, explorerExcludedWalletIds]\n        .filter(Boolean)\n        .join(',')\n    }\n\n    const { page, search } = params\n    const { listings: listingsObj, total } = isMobile\n      ? await ExplorerUtil.getMobileListings(extendedParams)\n      : await ExplorerUtil.getDesktopListings(extendedParams)\n    const listings = Object.values(listingsObj)\n    const type = search ? 'search' : 'wallets'\n    state[type] = {\n      listings: [...state[type].listings, ...listings],\n      total,\n      page: page ?? 1\n    }\n\n    return { listings, total }\n  },\n\n  async getInjectedWallets() {\n    const { listings: listingsObj } = await ExplorerUtil.getInjectedListings({})\n    const listings = Object.values(listingsObj)\n    state.injectedWallets = listings\n\n    return state.injectedWallets\n  },\n\n  getWalletImageUrl(imageId: string) {\n    return ExplorerUtil.getWalletImageUrl(imageId)\n  },\n\n  getAssetImageUrl(imageId: string) {\n    return ExplorerUtil.getAssetImageUrl(imageId)\n  },\n\n  resetSearch() {\n    state.search = { listings: [], total: 0, page: 1 }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { WcConnectionCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<WcConnectionCtrlState>({\n  pairingEnabled: false,\n  pairingUri: '',\n  pairingError: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const WcConnectionCtrl = {\n  state,\n\n  subscribe(callback: (newState: WcConnectionCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setPairingUri(pairingUri: WcConnectionCtrlState['pairingUri']) {\n    state.pairingUri = pairingUri\n  },\n\n  setPairingError(pairingError: WcConnectionCtrlState['pairingError']) {\n    state.pairingError = pairingError\n  },\n\n  setPairingEnabled(pairingEnabled: WcConnectionCtrlState['pairingEnabled']) {\n    state.pairingEnabled = pairingEnabled\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ModalCtrlState } from '../types/controllerTypes'\nimport { AccountCtrl } from './AccountCtrl'\nimport { ClientCtrl } from './ClientCtrl'\nimport { ConfigCtrl } from './ConfigCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\nimport { RouterCtrl } from './RouterCtrl'\nimport { WcConnectionCtrl } from './WcConnectionCtrl'\n\n// -- types -------------------------------------------------------- //\nexport interface OpenOptions {\n  route?: 'Account' | 'ConnectWallet' | 'Help' | 'SelectNetwork'\n}\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ModalCtrlState>({\n  open: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const ModalCtrl = {\n  state,\n\n  subscribe(callback: (newState: ModalCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  async open(options?: OpenOptions) {\n    return new Promise<void>(resolve => {\n      const { isUiLoaded, isDataLoaded, isPreferInjected, selectedChain } = OptionsCtrl.state\n      const { isConnected } = AccountCtrl.state\n      const { enableNetworkView } = ConfigCtrl.state\n      WcConnectionCtrl.setPairingEnabled(true)\n\n      if (options?.route) {\n        RouterCtrl.reset(options.route)\n      } else if (isConnected) {\n        RouterCtrl.reset('Account')\n      } else if (enableNetworkView) {\n        RouterCtrl.reset('SelectNetwork')\n      } else if (isPreferInjected) {\n        ClientCtrl.client()\n          .connectConnector('injected', selectedChain?.id)\n          .catch(err => console.error(err))\n        resolve()\n\n        return\n      } else {\n        RouterCtrl.reset('ConnectWallet')\n      }\n\n      const { pairingUri } = WcConnectionCtrl.state\n      // Open modal if essential async data is ready\n      if (isUiLoaded && isDataLoaded && (pairingUri || isConnected)) {\n        state.open = true\n        resolve()\n      }\n      // Otherwise (slow network) re-attempt open checks\n      else {\n        const interval = setInterval(() => {\n          const opts = OptionsCtrl.state\n          const connection = WcConnectionCtrl.state\n          if (opts.isUiLoaded && opts.isDataLoaded && (connection.pairingUri || isConnected)) {\n            clearInterval(interval)\n            state.open = true\n            resolve()\n          }\n        }, 200)\n      }\n    })\n  },\n\n  close() {\n    state.open = false\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ThemeCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nfunction isDarkMode() {\n  return typeof matchMedia !== 'undefined' && matchMedia('(prefers-color-scheme: dark)').matches\n}\n\nconst state = proxy<ThemeCtrlState>({\n  themeMode: isDarkMode() ? 'dark' : 'light'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ThemeCtrl = {\n  state,\n\n  subscribe(callback: (newState: ThemeCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setThemeConfig(theme: ThemeCtrlState) {\n    const { themeMode, themeVariables } = theme\n\n    if (themeMode) {\n      state.themeMode = themeMode\n    }\n\n    if (themeVariables) {\n      state.themeVariables = { ...themeVariables }\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ToastCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ToastCtrlState>({\n  open: false,\n  message: '',\n  variant: 'success'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ToastCtrl = {\n  state,\n\n  subscribe(callback: (newState: ToastCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  openToast(message: ToastCtrlState['message'], variant: ToastCtrlState['variant']) {\n    state.open = true\n    state.message = message\n    state.variant = variant\n  },\n\n  closeToast() {\n    state.open = false\n  }\n}\n"],"mappings":";AAIA,MAAMA,CAAA,GAAQC,CAAA,CAAuB;IACnCC,OAAA,EAAS,CAAC,eAAe;IACzBC,IAAA,EAAM;IACNC,IAAA,EAAM;EACR,CAAC;EAGYC,CAAA,GAAa;IACxBC,KAAA,EAAAN,CAAA;IAEAO,UAAUC,CAAA,EAA+C;MACvD,OAAOC,CAAA,CAAUT,CAAA,EAAO,MAAMQ,CAAA,CAASR,CAAK,CAAC,CAC/C;IAAA;IAEAU,KAAKF,CAAA,EAA+BG,CAAA,EAAgC;MAC9DH,CAAA,KAASR,CAAA,CAAMG,IAAA,KACjBH,CAAA,CAAMG,IAAA,GAAOK,CAAA,EACTG,CAAA,KACFX,CAAA,CAAMI,IAAA,GAAOO,CAAA,GAEfX,CAAA,CAAME,OAAA,CAAQQ,IAAA,CAAKF,CAAI,EAE3B;IAAA;IAEAI,MAAMJ,CAAA,EAA+B;MACnCR,CAAA,CAAMG,IAAA,GAAOK,CAAA,EACbR,CAAA,CAAME,OAAA,GAAU,CAACM,CAAI,CACvB;IAAA;IAEAK,QAAQL,CAAA,EAA+B;MACjCR,CAAA,CAAME,OAAA,CAAQY,MAAA,GAAS,MACzBd,CAAA,CAAME,OAAA,CAAQF,CAAA,CAAME,OAAA,CAAQY,MAAA,GAAS,CAAC,IAAIN,CAAA,EAC1CR,CAAA,CAAMG,IAAA,GAAOK,CAAA,CAEjB;IAAA;IAEAO,OAAA,EAAS;MACP,IAAIf,CAAA,CAAME,OAAA,CAAQY,MAAA,GAAS,GAAG;QAC5Bd,CAAA,CAAME,OAAA,CAAQc,GAAA,EACd;QAAA,MAAM,CAACR,CAAI,IAAIR,CAAA,CAAME,OAAA,CAAQe,KAAA,CAAM,EAAE;QACrCjB,CAAA,CAAMG,IAAA,GAAOK,CAAA;MAAA;IAEjB;IAEAU,QAAQV,CAAA,EAA+B;MACrCR,CAAA,CAAMI,IAAA,GAAOI,CACf;IAAA;EACF;ECjDaW,CAAA,GAAW;IACtBC,6BAAA,EAA+B;IAE/BC,WAAA,EAAa;IAEbC,4BAAA,EAA8B;IAE9BC,yBAAA,EAA2B;IAE3BC,SAAA,EAAW;MACT,OAAI,OAAOC,MAAA,GAAW,MACbC,OAAA,CACLD,MAAA,CAAOE,UAAA,CAAW,kBAAkB,EAAEC,OAAA,IACpC,wDAAwDC,IAAA,CAAKC,SAAA,CAAUC,SAAS,CACpF,IAGK,EACT;IAAA;IAEAC,UAAA,EAAY;MACV,OAAOb,CAAA,CAASK,QAAA,EAAS,IAAKM,SAAA,CAAUC,SAAA,CAAUE,WAAA,GAAcC,QAAA,CAAS,SAAS,CACpF;IAAA;IAEAC,MAAA,EAAQ;MACN,MAAM3B,CAAA,GAAKsB,SAAA,CAAUC,SAAA,CAAUE,WAAA,EAAY;MAE3C,OAAOd,CAAA,CAASK,QAAA,OAAehB,CAAA,CAAG0B,QAAA,CAAS,QAAQ,KAAK1B,CAAA,CAAG0B,QAAA,CAAS,MAAM,EAC5E;IAAA;IAEAE,UAAU5B,CAAA,EAAa;MACrB,OAAOA,CAAA,CAAI6B,UAAA,CAAW,SAAS,KAAK7B,CAAA,CAAI6B,UAAA,CAAW,UAAU,CAC/D;IAAA;IAEAC,QAAW9B,CAAA,EAA6B;MACtC,OAAO+B,KAAA,CAAMD,OAAA,CAAQ9B,CAAI,KAAKA,CAAA,CAAKM,MAAA,GAAS,CAC9C;IAAA;IAEA0B,gBAAgBhC,CAAA,EAAgBG,CAAA,EAAe8B,CAAA,EAAsB;MACnE,IAAItB,CAAA,CAASiB,SAAA,CAAU5B,CAAM,GAC3B,OAAO,KAAKkC,kBAAA,CAAmBlC,CAAA,EAAQG,CAAA,EAAO8B,CAAI;MAEpD,IAAIE,CAAA,GAAanC,CAAA;MACZmC,CAAA,CAAWT,QAAA,CAAS,KAAK,MAC5BS,CAAA,GAAanC,CAAA,CAAOoC,UAAA,CAAW,KAAK,EAAE,EAAEA,UAAA,CAAW,KAAK,EAAE,GAC1DD,CAAA,GAAa,GAAGA,CAAA,QAEbA,CAAA,CAAWE,QAAA,CAAS,GAAG,MAC1BF,CAAA,GAAa,GAAGA,CAAA,MAElB,KAAKG,wBAAA,CAAyBH,CAAA,EAAYF,CAAI;MAC9C,MAAMM,CAAA,GAAeC,kBAAA,CAAmBrC,CAAK;MAE7C,OAAO,GAAGgC,CAAA,UAAoBI,CAAA,EAChC;IAAA;IAEAL,mBAAmBlC,CAAA,EAAgBG,CAAA,EAAe8B,CAAA,EAAsB;MACtE,IAAI,CAACtB,CAAA,CAASiB,SAAA,CAAU5B,CAAM,GAC5B,OAAO,KAAKgC,eAAA,CAAgBhC,CAAA,EAAQG,CAAA,EAAO8B,CAAI;MAEjD,IAAIE,CAAA,GAAanC,CAAA;MACZmC,CAAA,CAAWE,QAAA,CAAS,GAAG,MAC1BF,CAAA,GAAa,GAAGA,CAAA,MAElB,KAAKG,wBAAA,CAAyBH,CAAA,EAAYF,CAAI;MAC9C,MAAMM,CAAA,GAAeC,kBAAA,CAAmBrC,CAAK;MAE7C,OAAO,GAAGgC,CAAA,UAAoBI,CAAA,EAChC;IAAA;IAEA,MAAME,KAAKzC,CAAA,EAAqB;MAC9B,OAAO,IAAI0C,OAAA,CAAQvC,CAAA,IAAW;QAC5BwC,UAAA,CAAWxC,CAAA,EAASH,CAAW,CACjC;MAAA,CAAC,CACH;IAAA;IAEA4C,SAAS5C,CAAA,EAAcG,CAAA,EAA4B;MACjDc,MAAA,CAAO4B,IAAA,CAAK7C,CAAA,EAAMG,CAAA,EAAQ,qBAAqB,CACjD;IAAA;IAEAmC,yBAAyBtC,CAAA,EAAcG,CAAA,EAAc;MACnD,IAAI;QACF2C,YAAA,CAAaC,OAAA,CAAQpC,CAAA,CAASC,6BAAA,EAA+BoC,IAAA,CAAKC,SAAA,CAAU;UAAEC,IAAA,EAAAlD,CAAA;UAAMmD,IAAA,EAAAhD;QAAK,CAAC,CAAC,CAC7F;MAAA,QAAQ;QACNiD,OAAA,CAAQC,IAAA,CAAK,uCAAuC,CACtD;MAAA;IACF;IAEAC,gCAAgCtD,CAAA,EAAe;MAC7C,IAAI;QACF,MAAM,CAACG,CAAI,IAAIH,CAAA,CAAMuD,KAAA,CAAM,GAAG;QAC9BT,YAAA,CAAaC,OAAA,CACXpC,CAAA,CAASC,6BAAA,EACToC,IAAA,CAAKC,SAAA,CAAU;UAAEC,IAAA,EAAA/C,CAAA;UAAMgD,IAAA,EAAM;QAAU,CAAC,CAC1C,CACF;MAAA;QACEC,OAAA,CAAQC,IAAA,CAAK,+CAA+C,CAC9D;MAAA;IACF;IAEAG,4BAAA,EAA8B;MAC5B,IAAI;QACFV,YAAA,CAAaW,UAAA,CAAW9C,CAAA,CAASC,6BAA6B,CAChE;MAAA;QACEwC,OAAA,CAAQC,IAAA,CAAK,0CAA0C,CACzD;MAAA;IACF;IAEAK,6BAAA,EAA+B;MAC7B,IAAI;QACE,OAAOZ,YAAA,GAAiB,OAC1BA,YAAA,CAAaC,OAAA,CAAQpC,CAAA,CAASE,WAAA,EAAa,OAA2C,CAE1F;MAAA;QACEuC,OAAA,CAAQC,IAAA,CAAK,4CAA4C,CAC3D;MAAA;IACF;IAEAM,oBAAA,EAAsB;MAxHxB,IAAA3D,CAAA;MAyHI,MAAMG,CAAA,IAAaH,CAAA,GAAAH,CAAA,CAAWC,KAAA,CAAMF,IAAA,KAAjB,gBAAAI,CAAA,CAAuB4D,MAAA;MAC1C,IAAI,CAACzD,CAAA,EACH,MAAM,IAAI0D,KAAA,CAAM,4BAA4B;MAG9C,OAAO1D,CACT;IAAA;IAEA2D,2BAAA,EAA6B;MAjI/B,IAAA9D,CAAA;MAkII,MAAMG,CAAA,IAAaH,CAAA,GAAAH,CAAA,CAAWC,KAAA,CAAMF,IAAA,KAAjB,gBAAAI,CAAA,CAAuB+D,aAAA;MAC1C,IAAI,CAAC5D,CAAA,EACH,MAAM,IAAI0D,KAAA,CAAM,mCAAmC;MAGrD,OAAO1D,CACT;IAAA;IAEA6D,qBAAA,EAAuB;MACrB,OAAI,OAAOC,QAAA,GAAa,MACF,IAAIC,eAAA,CAAgBD,QAAA,CAASE,MAAM,EAEpCC,GAAA,CAAIzD,CAAA,CAASG,4BAA4B,IAGvD,EACT;IAAA;EACF;AChJA,IAAIuD,CAAA;AAAA,MAGSC,CAAA,GAAa;IACxBC,cAAA,EAAgB;IAEhBC,kBAAkBxE,CAAA,EAAmD;MACnEqE,CAAA,GAASrE,CACX;IAAA;IAEAyE,OAAA,EAAS;MACP,IAAIJ,CAAA,EACF,OAAOA,CAAA;MAGT,MAAM,IAAIR,KAAA,CAAM,8BAA8B,CAChD;IAAA;EACF;EChBMa,CAAA,GACJ,OAAOT,QAAA,GAAa,QACnBA,QAAA,CAASU,QAAA,CAASjD,QAAA,CAAS,WAAW,KAAKuC,QAAA,CAASW,QAAA,CAASlD,QAAA,CAAS,OAAO;EAG1EmD,CAAA,GAAQpF,CAAA,CAAuB;IACnCqF,OAAA,EAASJ,CAAA;IACTK,aAAA,EAAe;IACfC,MAAA,EAAQ;IACRC,iBAAA,EAAmB;EACrB,CAAC;EAGYC,CAAA,GAAa;IACxBpF,KAAA,EAAA+E,CAAA;IAEA9E,UAAUC,CAAA,EAA0C;MAClD,OAAOC,CAAA,CAAU4E,CAAA,CAAMG,MAAA,EAAQ,MAAMhF,CAAA,CAASmF,CAAA,CAASN,CAAA,CAAMG,MAAA,CAAOH,CAAA,CAAMG,MAAA,CAAO1E,MAAA,GAAS,CAAC,CAAC,CAAC,CAAC,CAChG;IAAA;IAEA8E,WAAA,EAAa;MACPP,CAAA,CAAMC,OAAA,IAAW,QAAOO,MAAA,IAAQ,gBAAAA,MAAA,CAAAC,UAAA,IAAe,QACjDT,CAAA,CAAME,aAAA,GAAgBM,MAAA,CAAOC,UAAA,GAEjC;IAAA;IAEAC,qBAAqBvF,CAAA,EAAyD;MAC5E6E,CAAA,CAAMI,iBAAA,GAAoBjF,CAC5B;IAAA;IAEAwF,MAAMxF,CAAA,EAAsB;MAC1B,IAAI6E,CAAA,CAAMC,OAAA,EAAS;QACjB,MAAM3E,CAAA,GAAQ;UACZsF,IAAA,EAAM;UACNtC,IAAA,EAAMnD,CAAA,CAAKmD,IAAA;UACX4B,aAAA,EAAeF,CAAA,CAAME,aAAA;UACrBW,SAAA,EAAWC,IAAA,CAAKC,GAAA,EAChB;UAAAhG,IAAA,EAAAI;QACF;QACA6E,CAAA,CAAMG,MAAA,CAAO9E,IAAA,CAAKC,CAAK;MAAA;IAE3B;IAEA0F,MAAM7F,CAAA,EAAsB;MAC1B,IAAI6E,CAAA,CAAMC,OAAA,EAAS;QACjB,MAAM3E,CAAA,GAAQ;UACZsF,IAAA,EAAM;UACNtC,IAAA,EAAMnD,CAAA,CAAKmD,IAAA;UACX4B,aAAA,EAAeF,CAAA,CAAME,aAAA;UACrBW,SAAA,EAAWC,IAAA,CAAKC,GAAA,EAChB;UAAAhG,IAAA,EAAAI;QACF;QACA6E,CAAA,CAAMG,MAAA,CAAO9E,IAAA,CAAKC,CAAK;MAAA;IAE3B;IAEAR,KAAKK,CAAA,EAAsB;MACzB,IAAI6E,CAAA,CAAMC,OAAA,EAAS;QACjB,MAAM3E,CAAA,GAAQ;UACZsF,IAAA,EAAM;UACNtC,IAAA,EAAMnD,CAAA,CAAKmD,IAAA;UACX4B,aAAA,EAAeF,CAAA,CAAME,aAAA;UACrBW,SAAA,EAAWC,IAAA,CAAKC,GAAA;UAChBhG,IAAA,EAAAI;QACF;QACA6E,CAAA,CAAMG,MAAA,CAAO9E,IAAA,CAAKC,CAAK;MAAA;IAE3B;EACF;ECnEM2F,CAAA,GAAQrG,CAAA,CAAwB;IACpCsG,aAAA,EAAe;IACfC,MAAA,EAAQ;IACRC,eAAA,EAAiB;IACjBC,cAAA,EAAgB;IAChBC,YAAA,EAAc;IACdC,UAAA,EAAY;IACZC,gBAAA,EAAkB;EACpB,CAAC;EAGYC,CAAA,GAAc;IACzBxG,KAAA,EAAAgG,CAAA;IAEA/F,UAAUC,CAAA,EAAgD;MACxD,OAAOC,CAAA,CAAU6F,CAAA,EAAO,MAAM9F,CAAA,CAAS8F,CAAK,CAAC,CAC/C;IAAA;IAEAS,UAAUvG,CAAA,EAAqC;MAC7C8F,CAAA,CAAME,MAAA,GAAShG,CACjB;IAAA;IAEAwG,iBAAA,EAAmB;MACjB,MAAMxG,CAAA,GAAgBsE,CAAA,CAAWG,MAAA,GAASgC,UAAA,GAAaC,KAAA;MACvD,OAAI1G,CAAA,KACF8F,CAAA,CAAMC,aAAA,GAAgB/F,CAAA,GAGjB8F,CAAA,CAAMC,aACf;IAAA;IAEAY,iBAAiB3G,CAAA,EAAkD;MACjE8F,CAAA,CAAMC,aAAA,GAAgB/F,CACxB;IAAA;IAEA4G,mBAAmB5G,CAAA,EAAsD;MACvE8F,CAAA,CAAMG,eAAA,GAAkBjG,CAC1B;IAAA;IAEA6G,kBAAkB7G,CAAA,EAAoD;MACpE8F,CAAA,CAAMI,cAAA,GAAiBlG,CACzB;IAAA;IAEA8G,gBAAgB9G,CAAA,EAAgD;MAC9D8F,CAAA,CAAMK,YAAA,GAAenG,CACvB;IAAA;IAEA+G,cAAc/G,CAAA,EAA4C;MACxD8F,CAAA,CAAMM,UAAA,GAAapG,CACrB;IAAA;IAEAgH,oBAAoBhH,CAAA,EAAwD;MAC1E8F,CAAA,CAAMO,gBAAA,GAAmBrG,CAC3B;IAAA;EACF;ECpDMiH,CAAA,GAAQxH,CAAA,CAAuB;IACnCyH,SAAA,EAAW;IACXC,aAAA,EAAe;IACfC,cAAA,EAAgB;IAChBC,YAAA,EAAc;IACdC,WAAA,EAAa;IACbC,WAAA,EAAa;IACbC,cAAA,EAAgB;IAChBC,iBAAA,EAAmB;IACnBC,iBAAA,EAAmB;IACnBC,cAAA,EAAgB;IAChBC,YAAA,EAAc;IACdC,yBAAA,EAA2B;IAC3BC,4BAAA,EAA8B;IAC9BC,iBAAA,EAAmB;IACnBC,gBAAA,EAAkB;EACpB,CAAC;EAGYC,CAAA,GAAa;IACxBnI,KAAA,EAAAmH,CAAA;IAEAlH,UAAUC,CAAA,EAA+C;MACvD,OAAOC,CAAA,CAAUgH,CAAA,EAAO,MAAMjH,CAAA,CAASiH,CAAK,CAAC,CAC/C;IAAA;IAEAiB,UAAUlI,CAAA,EAAyB;MAjCrC,IAAAG,CAAA,EAAA8B,CAAA;MAkCIiD,CAAA,CAAWE,UAAA,IACXkB,CAAA,CAAYO,iBAAA,CAAkB3F,OAAA,EAAQf,CAAA,GAAAH,CAAA,CAAOmH,aAAA,KAAP,gBAAAhH,CAAA,CAAsBG,MAAM,CAAC,GACnEgG,CAAA,CAAYM,kBAAA,CAAmB1F,OAAA,EAAQe,CAAA,GAAAjC,CAAA,CAAOoH,cAAA,KAAP,gBAAAnF,CAAA,CAAuB3B,MAAM,CAAC,GACrEgG,CAAA,CAAYC,SAAA,CAAUjC,CAAA,CAAWG,MAAA,GAASuB,MAAM,GAChDM,CAAA,CAAYU,mBAAA,CACV1C,CAAA,CAAWG,MAAA,EAAO,CAAE0D,2BAAA,EAA4B,IAAKxH,CAAA,CAASqD,oBAAA,EAChE,GAEIhE,CAAA,CAAO4H,YAAA,IACTtB,CAAA,CAAYK,gBAAA,CAAiB3G,CAAA,CAAO4H,YAAY,GAGlDjH,CAAA,CAAS+C,4BAAA,EAA6B,EAEtC0E,MAAA,CAAOC,MAAA,CAAOpB,CAAA,EAAOjH,CAAM,CAC7B;IAAA;EACF;EC/CasI,CAAA,GAAY;EACnBC,CAAA,GAAiB;EAGVC,CAAA,GAAoB;IAC/B,MAAMC,YAAYzI,CAAA,EAAiBG,CAAA,EAA8D;MAC/F,MAAM;UAAE+G,SAAA,EAAAjF;QAAU,IAAIgG,CAAA,CAAWnI,KAAA;QAC3BqC,CAAA,GAAW,GAAGmG,CAAA,IAAanI,CAAA;QAC3BoC,CAAA,GAAW,GAAGgG,CAAA,gBAA8BvI,CAAA,YAAmBmC,CAAA,cAAsBF,CAAA;MAE3F,QAAQ,MAAMyG,KAAA,CAAMnG,CAAQ,GAAGoG,IAAA,EACjC;IAAA;EACF;ECPMC,CAAA,GAAQnJ,CAAA,CAAwB;IACpCoJ,OAAA,EAAS;IACTC,WAAA,EAAa;IACbC,aAAA,EAAe;IACfC,cAAA,EAAgB;IAChBC,cAAA,EAAgB;IAChBC,OAAA,EAAS;IACTC,WAAA,EAAa;EACf,CAAC;EAGYC,CAAA,GAAc;IACzBtJ,KAAA,EAAA8I,CAAA;IAEA7I,UAAUC,CAAA,EAAgD;MACxD,OAAOC,CAAA,CAAU2I,CAAA,EAAO,MAAM5I,CAAA,CAAS4I,CAAK,CAAC,CAC/C;IAAA;IAEAS,WAAA,EAAa;MACX,MAAMrJ,CAAA,GAAUsE,CAAA,CAAWG,MAAA,EAAO,CAAE4E,UAAA,EAAW;MAC/CT,CAAA,CAAMC,OAAA,GAAU7I,CAAA,CAAQ6I,OAAA,EACxBD,CAAA,CAAMO,WAAA,GAAcnJ,CAAA,CAAQmJ,WAC9B;IAAA;IAEA,MAAMG,aACJtJ,CAAA,EACAG,CAAA,EACA;MAnCJ,IAAA8B,CAAA;MAoCI,IAAI;QACF2G,CAAA,CAAMI,cAAA,GAAiB,IACvBJ,CAAA,CAAME,WAAA,GAAc,MACpBF,CAAA,CAAMG,aAAA,GAAgB;QACtB,MAAM5G,CAAA,GAAUhC,CAAA,IAAkByI,CAAA,CAAMC,OAAA;UAClCtG,CAAA,GAAY;UACZgH,CAAA,IAAsBtH,CAAA,GAAAqE,CAAA,CAAYxG,KAAA,CAAMkG,MAAA,KAAlB,gBAAA/D,CAAA,CAA0BuH,IAAA,CAAKC,CAAA,IAASA,CAAA,CAAMC,EAAA,KAAOnH,CAAA;QACjF,IAAIJ,CAAA,IAAWoH,CAAA,EAAqB;UAClC,IAAI;YACF,MAAME,CAAA,GAAU,MAAMjB,CAAA,CAAkBC,WAAA,CAAYtG,CAAA,EAASI,CAAS;YACtEqG,CAAA,CAAME,WAAA,GAAcW,CAAA,CAAQtG,IAAA,EAC5ByF,CAAA,CAAMG,aAAA,GAAgBU,CAAA,CAAQE,MAChC;UAAA,QAAQ;YAEN,MAAMC,CAAA,GAAO,MAAMtF,CAAA,CAAWG,MAAA,GAASoF,YAAA,CAAa;cAAEhB,OAAA,EAAA1G,CAAA;cAAS2H,OAAA,EAASvH;YAAU,CAAC;YAEnF,IADAqG,CAAA,CAAME,WAAA,GAAcc,CAAA,EAChBA,CAAA,EAAM;cACR,MAAMG,CAAA,GAAS,MAAMzF,CAAA,CAAWG,MAAA,EAAO,CAAEuF,cAAA,CAAe;gBAAE7G,IAAA,EAAAyG,CAAA;gBAAME,OAAA,EAASvH;cAAU,CAAC;cACpFqG,CAAA,CAAMG,aAAA,GAAgBgB,CAAA;YAAA;UAE1B;UACInB,CAAA,CAAMG,aAAA,KACR,MAAM/I,CAAA,CAAgB4I,CAAA,CAAMG,aAAa;QAAA;MAG/C,UAAE;QACAH,CAAA,CAAMI,cAAA,GAAiB,EACzB;MAAA;IACF;IAEA,MAAMiB,aAAajK,CAAA,EAAgC;MACjD,IAAI;QACF,MAAM;YAAE0G,KAAA,EAAAvG;UAAM,IAAImE,CAAA,CAAWG,MAAA,EAAO,CAAEgC,UAAA,EAChC;UAAA;YAAEe,cAAA,EAAAvF;UAAe,IAAIgG,CAAA,CAAWnI,KAAA;QACtC,IAAIqC,CAAA;QACAhC,CAAA,IAAS8B,CAAA,KACXE,CAAA,GAAQF,CAAA,CAAe9B,CAAA,CAAMuJ,EAAE,IAEjCd,CAAA,CAAMK,cAAA,GAAiB;QACvB,MAAM1G,CAAA,GAAUvC,CAAA,IAAkB4I,CAAA,CAAMC,OAAA;QACxC,IAAItG,CAAA,EAAS;UACX,MAAMgH,CAAA,GAAU,MAAMjF,CAAA,CAAWG,MAAA,GAASwF,YAAA,CAAa;YAAEpB,OAAA,EAAAtG,CAAA;YAAS2H,KAAA,EAAA/H;UAAM,CAAC;UACzEyG,CAAA,CAAMM,OAAA,GAAU;YAAEiB,MAAA,EAAQZ,CAAA,CAAQa,SAAA;YAAWC,MAAA,EAAQd,CAAA,CAAQc;UAAO;QAAA;MAExE,UAAE;QACAzB,CAAA,CAAMK,cAAA,GAAiB,EACzB;MAAA;IACF;IAEAqB,WAAWtK,CAAA,EAAsC;MAC/C4I,CAAA,CAAMC,OAAA,GAAU7I,CAClB;IAAA;IAEAuK,eAAevK,CAAA,EAA8C;MAC3D4I,CAAA,CAAMO,WAAA,GAAcnJ,CACtB;IAAA;IAEAwK,aAAA,EAAe;MACb5B,CAAA,CAAMM,OAAA,GAAU,MAClB;IAAA;IAEAuB,aAAA,EAAe;MACb7B,CAAA,CAAMC,OAAA,GAAU,QAChBD,CAAA,CAAMO,WAAA,GAAc,IACpBP,CAAA,CAAME,WAAA,GAAc,QACpBF,CAAA,CAAMG,aAAA,GAAgB,QACtBH,CAAA,CAAMM,OAAA,GAAU,MAClB;IAAA;EACF;ECpGMwB,CAAA,GAAU;AAEhB,eAAeC,EAAc3K,CAAA,EAAkBG,CAAA,EAAuB;EACpE,MAAM8B,CAAA,GAAM,IAAI2I,GAAA,CAAI5K,CAAA,EAAU0K,CAAO;EACrC,OAAAzI,CAAA,CAAI4I,YAAA,CAAaC,MAAA,CAAO,aAAa7C,CAAA,CAAWnI,KAAA,CAAMoH,SAAS,GAC/DkB,MAAA,CAAO2C,OAAA,CAAQ5K,CAAM,EAAE6K,OAAA,CAAQC,IAAA,IAAkB;IAAA,IAAjB,CAAC9I,CAAA,EAAKI,CAAK,IAAA0I,IAAA;IACrC1I,CAAA,IACFN,CAAA,CAAI4I,YAAA,CAAaC,MAAA,CAAO3I,CAAA,EAAK+I,MAAA,CAAO3I,CAAK,CAAC,CAE9C;EAAA,CAAC,IACe,MAAMmG,KAAA,CAAMzG,CAAG,GAEhB0G,IAAA,EACjB;AAAA;AAGa,MAAAwC,CAAA,GAAe;EAC1B,MAAMC,mBAAmBpL,CAAA,EAAuB;IAC9C,OAAO2K,CAAA,CAAc,8BAA8B3K,CAAM,CAC3D;EAAA;EAEA,MAAMqL,kBAAkBrL,CAAA,EAAuB;IAC7C,OAAO2K,CAAA,CAAc,6BAA6B3K,CAAM,CAC1D;EAAA;EAEA,MAAMsL,oBAAoBtL,CAAA,EAAuB;IAC/C,OAAO2K,CAAA,CAAc,+BAA+B3K,CAAM,CAC5D;EAAA;EAEA,MAAMuL,eAAevL,CAAA,EAAuB;IAC1C,OAAO2K,CAAA,CAAc,0BAA0B3K,CAAM,CACvD;EAAA;EAEAwL,kBAAkBxL,CAAA,EAAiB;IACjC,OAAO,GAAG0K,CAAA,0BAAiC1K,CAAA,cAAqBiI,CAAA,CAAWnI,KAAA,CAAMoH,SAAA,EACnF;EAAA;EAEAuE,iBAAiBzL,CAAA,EAAiB;IAChC,OAAO,GAAG0K,CAAA,yBAAgC1K,CAAA,cAAqBiI,CAAA,CAAWnI,KAAA,CAAMoH,SAAA,EAClF;EAAA;AACF;AC5CA,IAAAwE,CAAA,GAAAtD,MAAA,CAAAuD,cAAA;EAAAC,CAAA,GAAAxD,MAAA,CAAAyD,qBAAA;EAAAC,CAAA,GAAA1D,MAAA,CAAA2D,SAAA,CAAAC,cAAA;EAAAC,CAAA,GAAA7D,MAAA,CAAA2D,SAAA,CAAAG,oBAAA;EAAAC,CAAA,GAAAC,CAAApM,CAAA,EAAAG,CAAA,EAAA8B,CAAA,KAAA9B,CAAA,IAAAH,CAAA,GAAA0L,CAAA,CAAA1L,CAAA,EAAAG,CAAA;IAAAkM,UAAA;IAAAC,YAAA;IAAAC,QAAA;IAAAC,KAAA,EAAAvK;EAAA,KAAAjC,CAAA,CAAAG,CAAA,IAAA8B,CAAA;EAAAwK,CAAA,GAAAtB,CAAAnL,CAAA,EAAAG,CAAA;IAAA,SAAA8B,CAAA,IAAA9B,CAAA,KAAAA,CAAA,QAAA2L,CAAA,CAAAY,IAAA,CAAAvM,CAAA,EAAA8B,CAAA,KAAAkK,CAAA,CAAAnM,CAAA,EAAAiC,CAAA,EAAA9B,CAAA,CAAA8B,CAAA;IAAA,IAAA2J,CAAA,WAAA3J,CAAA,IAAA2J,CAAA,CAAAzL,CAAA,GAAA8L,CAAA,CAAAS,IAAA,CAAAvM,CAAA,EAAA8B,CAAA,KAAAkK,CAAA,CAAAnM,CAAA,EAAAiC,CAAA,EAAA9B,CAAA,CAAA8B,CAAA;IAAA,OAAAjC,CAAA;EAAA;AAMA,MAAM2M,CAAA,GAAWhM,CAAA,CAASK,QAAA,EAGpB;EAAAoL,CAAA,GAAQ3M,CAAA,CAAyB;IACrCmN,OAAA,EAAS;MAAEC,QAAA,EAAU;MAAIC,KAAA,EAAO;MAAGC,IAAA,EAAM;IAAE;IAC3CC,eAAA,EAAiB;IACjB7I,MAAA,EAAQ;MAAE0I,QAAA,EAAU,EAAI;MAAAC,KAAA,EAAO;MAAGC,IAAA,EAAM;IAAE;IAC1CE,iBAAA,EAAmB;EACrB,CAAC;EAGYC,EAAA,GAAe;IAC1BpN,KAAA,EAAAsM,CAAA;IAEA,MAAMe,qBAAA,EAAuB;MAC3B,MAAM;QAAErF,4BAAA,EAAA9H,CAAA;QAA8B6H,yBAAA,EAAA1H;MAA0B,IAAI8H,CAAA,CAAWnI,KAAA;MAG/E,IACEE,CAAA,KAAiC,UAChCG,CAAA,KAA8B,SAAS,CAACH,CAAA,EAEzC,OAAOoM,CAAA,CAAMa,iBAAA;MAIf,IAAItM,CAAA,CAASmB,OAAA,CAAQ9B,CAA4B,GAAG;QAElD,MAAMiC,CAAA,GAAS;YAAEmL,cAAA,EADMpN,CAAA,CAA6BqN,IAAA,CAAK,GAAG;UAC5B;UAC1B;YAAER,QAAA,EAAA1K;UAAS,IAAI,MAAMgJ,CAAA,CAAaI,cAAA,CAAetJ,CAAM;UACvDM,CAAA,GAAc6F,MAAA,CAAOkF,MAAA,CAAOnL,CAAQ;QAC1CI,CAAA,CAAYgL,IAAA,CAAK,CAAChE,CAAA,EAAGE,CAAA,KAAM;UACzB,MAAMG,CAAA,GAAS5J,CAAA,CAA6BwN,OAAA,CAAQjE,CAAA,CAAEG,EAAE;YAClDK,CAAA,GAAS/J,CAAA,CAA6BwN,OAAA,CAAQ/D,CAAA,CAAEC,EAAE;UAExD,OAAOE,CAAA,GAASG,CAClB;QAAA,CAAC,GACDqC,CAAA,CAAMa,iBAAA,GAAoB1K,CAAA;MAAA,OAIvB;QACH,MAAMN,CAAA,GAAatB,CAAA,CAASmB,OAAA,CAAQ3B,CAAyB;UACvDgC,CAAA,GAAS;YACb4K,IAAA,EAAM;YACNhC,OAAA,EAASpK,CAAA,CAASI,yBAAA;YAClB0M,OAAA,EAAS;YACTC,WAAA,EAAazL,CAAA,GAAa9B,CAAA,CAA0BkN,IAAA,CAAK,GAAG,IAAI;UAClE;UACM;YAAER,QAAA,EAAAtK;UAAS,IAAIoK,CAAA,GACjB,MAAMxB,CAAA,CAAaE,iBAAA,CAAkBlJ,CAAM,IAC3C,MAAMgJ,CAAA,CAAaC,kBAAA,CAAmBjJ,CAAM;QAChDiK,CAAA,CAAMa,iBAAA,GAAoB7E,MAAA,CAAOkF,MAAA,CAAO/K,CAAQ;MAAA;MAGlD,OAAO6J,CAAA,CAAMa,iBACf;IAAA;IAEA,MAAMU,WAAW3N,CAAA,EAAuB;MACtC,MAAMG,CAAA,GAAgCsM,CAAA,KAAKzM,CAAA;QACrC;UAAE8H,4BAAA,EAAA7F,CAAA;UAA8B4F,yBAAA,EAAA1F;QAA0B,IAAI8F,CAAA,CAAWnI,KAAA;QACzE;UAAEmN,iBAAA,EAAA1K;QAAkB,IAAI6J,CAAA;MAG9B,IAAIjK,CAAA,KAA8B,OAChC,OAAOiK,CAAA,CAAMQ,OAAA;MAIXrK,CAAA,CAAkBjC,MAAA,GACpBH,CAAA,CAAeuN,WAAA,GAAcnL,CAAA,CAAkBqL,GAAA,CAAIC,CAAA,IAAUA,CAAA,CAAOnE,EAAE,EAAE2D,IAAA,CAAK,GAAG,IACvE1M,CAAA,CAASmB,OAAA,CAAQG,CAA4B,MACtD9B,CAAA,CAAeuN,WAAA,GAAczL,CAAA,CAA6BoL,IAAA,CAAK,GAAG,IAIhE1M,CAAA,CAASmB,OAAA,CAAQK,CAAyB,MAC5ChC,CAAA,CAAeuN,WAAA,GAAc,CAACvN,CAAA,CAAeuN,WAAA,EAAavL,CAAyB,EAChF2L,MAAA,CAAO5M,OAAO,EACdmM,IAAA,CAAK,GAAG;MAGb,MAAM;UAAEN,IAAA,EAAAxD,CAAA;UAAMpF,MAAA,EAAAsF;QAAO,IAAIzJ,CAAA;QACnB;UAAE6M,QAAA,EAAUjD,CAAA;UAAakD,KAAA,EAAA/C;QAAM,IAAI4C,CAAA,GACrC,MAAMxB,CAAA,CAAaE,iBAAA,CAAkBlL,CAAc,IACnD,MAAMgL,CAAA,CAAaC,kBAAA,CAAmBjL,CAAc;QAClD4N,CAAA,GAAW3F,MAAA,CAAOkF,MAAA,CAAO1D,CAAW;QACpCoE,CAAA,GAAOvE,CAAA,GAAS,WAAW;MACjC,OAAA2C,CAAA,CAAM4B,CAAI,IAAI;QACZnB,QAAA,EAAU,CAAC,GAAGT,CAAA,CAAM4B,CAAI,EAAEnB,QAAA,EAAU,GAAGkB,CAAQ;QAC/CjB,KAAA,EAAA/C,CAAA;QACAgD,IAAA,EAAMxD,CAAA,IAAQ;MAChB,GAEO;QAAEsD,QAAA,EAAAkB,CAAA;QAAUjB,KAAA,EAAA/C;MAAM,CAC3B;IAAA;IAEA,MAAMkE,mBAAA,EAAqB;MACzB,MAAM;UAAEpB,QAAA,EAAU7M;QAAY,IAAI,MAAMmL,CAAA,CAAaG,mBAAA,CAAoB,EAAE;QACrEnL,CAAA,GAAWiI,MAAA,CAAOkF,MAAA,CAAOtN,CAAW;MAC1C,OAAAoM,CAAA,CAAMY,eAAA,GAAkB7M,CAAA,EAEjBiM,CAAA,CAAMY,eACf;IAAA;IAEAxB,kBAAkBxL,CAAA,EAAiB;MACjC,OAAOmL,CAAA,CAAaK,iBAAA,CAAkBxL,CAAO,CAC/C;IAAA;IAEAyL,iBAAiBzL,CAAA,EAAiB;MAChC,OAAOmL,CAAA,CAAaM,gBAAA,CAAiBzL,CAAO,CAC9C;IAAA;IAEAkO,YAAA,EAAc;MACZ9B,CAAA,CAAMjI,MAAA,GAAS;QAAE0I,QAAA,EAAU;QAAIC,KAAA,EAAO;QAAGC,IAAA,EAAM;MAAE,CACnD;IAAA;EACF;ECtHMoB,CAAA,GAAQ1O,CAAA,CAA6B;IACzC2O,cAAA,EAAgB;IAChBC,UAAA,EAAY;IACZC,YAAA,EAAc;EAChB,CAAC;EAGYC,CAAA,GAAmB;IAC9BzO,KAAA,EAAAqO,CAAA;IAEApO,UAAUC,CAAA,EAAqD;MAC7D,OAAOC,CAAA,CAAUkO,CAAA,EAAO,MAAMnO,CAAA,CAASmO,CAAK,CAAC,CAC/C;IAAA;IAEAK,cAAcxO,CAAA,EAAiD;MAC7DmO,CAAA,CAAME,UAAA,GAAarO,CACrB;IAAA;IAEAyO,gBAAgBzO,CAAA,EAAqD;MACnEmO,CAAA,CAAMG,YAAA,GAAetO,CACvB;IAAA;IAEA0O,kBAAkB1O,CAAA,EAAyD;MACzEmO,CAAA,CAAMC,cAAA,GAAiBpO,CACzB;IAAA;EACF;ECdM2O,CAAA,GAAQlP,CAAA,CAAsB;IAClCoD,IAAA,EAAM;EACR,CAAC;EAGY+L,EAAA,GAAY;IACvB9O,KAAA,EAAA6O,CAAA;IAEA5O,UAAUC,CAAA,EAA8C;MACtD,OAAOC,CAAA,CAAU0O,CAAA,EAAO,MAAM3O,CAAA,CAAS2O,CAAK,CAAC,CAC/C;IAAA;IAEA,MAAM9L,KAAK7C,CAAA,EAAuB;MAChC,OAAO,IAAI0C,OAAA,CAAcvC,CAAA,IAAW;QAClC,MAAM;YAAEiG,UAAA,EAAAnE,CAAA;YAAYkE,YAAA,EAAAhE,CAAA;YAAckE,gBAAA,EAAA9D,CAAA;YAAkBwD,aAAA,EAAAwD;UAAc,IAAIjD,CAAA,CAAYxG,KAAA;UAC5E;YAAEqJ,WAAA,EAAAM;UAAY,IAAIL,CAAA,CAAYtJ,KAAA;UAC9B;YAAE2H,iBAAA,EAAAmC;UAAkB,IAAI3B,CAAA,CAAWnI,KAAA;QAGzC,IAFAyO,CAAA,CAAiBG,iBAAA,CAAkB,EAAI,GAEnC1O,CAAA,YAAAA,CAAA,CAAS6O,KAAA,EACXhP,CAAA,CAAWO,KAAA,CAAMJ,CAAA,CAAQ6O,KAAK,WACrBpF,CAAA,EACT5J,CAAA,CAAWO,KAAA,CAAM,SAAS,WACjBwJ,CAAA,EACT/J,CAAA,CAAWO,KAAA,CAAM,eAAe,WACvBmC,CAAA,EAAkB;UAC3B+B,CAAA,CAAWG,MAAA,GACRqK,gBAAA,CAAiB,YAAYvF,CAAA,EAAeG,EAAE,EAC9CqF,KAAA,CAAMhB,CAAA,IAAO3K,OAAA,CAAQ4L,KAAA,CAAMjB,CAAG,CAAC,GAClC5N,CAAA;UAEA;QAAA,OAEAN,CAAA,CAAWO,KAAA,CAAM,eAAe;QAGlC,MAAM;UAAEiO,UAAA,EAAAtE;QAAW,IAAIwE,CAAA,CAAiBzO,KAAA;QAExC,IAAImC,CAAA,IAAcE,CAAA,KAAiB4H,CAAA,IAAcN,CAAA,GAC/CkF,CAAA,CAAM9L,IAAA,GAAO,IACb1C,CAAA,EAAQ,MAGL;UACH,MAAM4N,CAAA,GAAWkB,WAAA,CAAY,MAAM;YACjC,MAAMjB,CAAA,GAAO1H,CAAA,CAAYxG,KAAA;cACnB+N,CAAA,GAAaU,CAAA,CAAiBzO,KAAA;YAChCkO,CAAA,CAAK5H,UAAA,IAAc4H,CAAA,CAAK7H,YAAA,KAAiB0H,CAAA,CAAWQ,UAAA,IAAc5E,CAAA,MACpEyF,aAAA,CAAcnB,CAAQ,GACtBY,CAAA,CAAM9L,IAAA,GAAO,IACb1C,CAAA,GAEJ;UAAA,GAAG,GAAG;QAAA;MAEV,CAAC,CACH;IAAA;IAEAgP,MAAA,EAAQ;MACNR,CAAA,CAAM9L,IAAA,GAAO,EACf;IAAA;EACF;AC3EA,IAAAuM,CAAA,GAAAhH,MAAA,CAAAuD,cAAA;EAAA0D,CAAA,GAAAjH,MAAA,CAAAyD,qBAAA;EAAAyD,CAAA,GAAAlH,MAAA,CAAA2D,SAAA,CAAAC,cAAA;EAAAuD,CAAA,GAAAnH,MAAA,CAAA2D,SAAA,CAAAG,oBAAA;EAAAsD,CAAA,GAAA5F,CAAA5J,CAAA,EAAAG,CAAA,EAAA8B,CAAA,KAAA9B,CAAA,IAAAH,CAAA,GAAAoP,CAAA,CAAApP,CAAA,EAAAG,CAAA;IAAAkM,UAAA;IAAAC,YAAA;IAAAC,QAAA;IAAAC,KAAA,EAAAvK;EAAA,KAAAjC,CAAA,CAAAG,CAAA,IAAA8B,CAAA;EAAAwN,CAAA,GAAAtN,CAAAnC,CAAA,EAAAG,CAAA;IAAA,SAAA8B,CAAA,IAAA9B,CAAA,KAAAA,CAAA,QAAAmP,CAAA,CAAA5C,IAAA,CAAAvM,CAAA,EAAA8B,CAAA,KAAAuN,CAAA,CAAAxP,CAAA,EAAAiC,CAAA,EAAA9B,CAAA,CAAA8B,CAAA;IAAA,IAAAoN,CAAA,WAAApN,CAAA,IAAAoN,CAAA,CAAAlP,CAAA,GAAAoP,CAAA,CAAA7C,IAAA,CAAAvM,CAAA,EAAA8B,CAAA,KAAAuN,CAAA,CAAAxP,CAAA,EAAAiC,CAAA,EAAA9B,CAAA,CAAA8B,CAAA;IAAA,OAAAjC,CAAA;EAAA;AAIA,SAAS0P,GAAA,EAAa;EACpB,OAAO,OAAOvO,UAAA,GAAe,OAAeA,UAAA,CAAW,8BAA8B,EAAEC,OACzF;AAAA;AAEA,MAAMuO,CAAA,GAAQlQ,CAAA,CAAsB;IAClCmQ,SAAA,EAAWF,EAAA,EAAW,GAAI,SAAS;EACrC,CAAC;EAGYG,EAAA,GAAY;IACvB/P,KAAA,EAAA6P,CAAA;IAEA5P,UAAUC,CAAA,EAA8C;MACtD,OAAOC,CAAA,CAAU0P,CAAA,EAAO,MAAM3P,CAAA,CAAS2P,CAAK,CAAC,CAC/C;IAAA;IAEAG,eAAe9P,CAAA,EAAuB;MACpC,MAAM;QAAE4P,SAAA,EAAAzP,CAAA;QAAW4P,cAAA,EAAA9N;MAAe,IAAIjC,CAAA;MAElCG,CAAA,KACFwP,CAAA,CAAMC,SAAA,GAAYzP,CAAA,GAGhB8B,CAAA,KACF0N,CAAA,CAAMI,cAAA,GAAiBN,CAAA,KAAKxN,CAAA,EAEhC;IAAA;EACF;EC3BM+N,CAAA,GAAQvQ,CAAA,CAAsB;IAClCoD,IAAA,EAAM;IACNoN,OAAA,EAAS;IACTC,OAAA,EAAS;EACX,CAAC;EAGYC,EAAA,GAAY;IACvBrQ,KAAA,EAAAkQ,CAAA;IAEAjQ,UAAUC,CAAA,EAA8C;MACtD,OAAOC,CAAA,CAAU+P,CAAA,EAAO,MAAMhQ,CAAA,CAASgQ,CAAK,CAAC,CAC/C;IAAA;IAEAI,UAAUpQ,CAAA,EAAoCG,CAAA,EAAoC;MAChF6P,CAAA,CAAMnN,IAAA,GAAO,IACbmN,CAAA,CAAMC,OAAA,GAAUjQ,CAAA,EAChBgQ,CAAA,CAAME,OAAA,GAAU/P,CAClB;IAAA;IAEAkQ,WAAA,EAAa;MACXL,CAAA,CAAMnN,IAAA,GAAO,EACf;IAAA;EACF;AAAA,SAAAuG,CAAA,IAAAkH,WAAA,EAAAhM,CAAA,IAAAiM,UAAA,EAAAtI,CAAA,IAAAuI,UAAA,EAAA7P,CAAA,IAAA8P,QAAA,EAAAvL,CAAA,IAAAwL,UAAA,EAAAxD,EAAA,IAAAyD,YAAA,EAAA/B,EAAA,IAAAgC,SAAA,EAAAtK,CAAA,IAAAuK,WAAA,EAAAhR,CAAA,IAAAiR,UAAA,EAAAjB,EAAA,IAAAkB,SAAA,EAAAZ,EAAA,IAAAa,SAAA,EAAAzC,CAAA,IAAA0C,gBAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { EstimateGasExecutionError } from '../../errors/estimateGas.js';\nimport { containsNodeError, getNodeError } from './getNodeError.js';\nexport function getEstimateGasError(err, _ref) {\n  let {\n    docsPath,\n    ...args\n  } = _ref;\n  let cause = err;\n  if (containsNodeError(err)) cause = getNodeError(err, args);\n  return new EstimateGasExecutionError(cause, {\n    docsPath,\n    ...args\n  });\n}","map":{"version":3,"names":["EstimateGasExecutionError","containsNodeError","getNodeError","getEstimateGasError","err","_ref","docsPath","args","cause"],"sources":["/home/amarjeet/Amarjeet/realwareWeb3/metamask_sign/Dapp-Starter code/node_modules/viem/src/utils/errors/getEstimateGasError.ts"],"sourcesContent":["import type { Account } from '../../accounts/types.js'\nimport type { EstimateGasParameters } from '../../actions/public/estimateGas.js'\nimport type { BaseError } from '../../errors/base.js'\nimport { EstimateGasExecutionError } from '../../errors/estimateGas.js'\nimport type { Chain } from '../../types/chain.js'\n\nimport {\n  type GetNodeErrorParameters,\n  containsNodeError,\n  getNodeError,\n} from './getNodeError.js'\n\nexport function getEstimateGasError(\n  err: BaseError,\n  {\n    docsPath,\n    ...args\n  }: Omit<EstimateGasParameters, 'account'> & {\n    account?: Account\n    chain?: Chain\n    docsPath?: string\n  },\n) {\n  let cause = err\n  if (containsNodeError(err))\n    cause = getNodeError(err, args as GetNodeErrorParameters)\n  return new EstimateGasExecutionError(cause, {\n    docsPath,\n    ...args,\n  })\n}\n"],"mappings":"AAGA,SAASA,yBAAyB,QAAQ,6BAA6B;AAGvE,SAEEC,iBAAiB,EACjBC,YAAY,QACP,mBAAmB;AAE1B,OAAM,SAAUC,mBAAmBA,CACjCC,GAAc,EAAAC,IAAA,EAQb;EAAA,IAPD;IACEC,QAAQ;IACR,GAAGC;EAAI,CAKR,GAAAF,IAAA;EAED,IAAIG,KAAK,GAAGJ,GAAG;EACf,IAAIH,iBAAiB,CAACG,GAAG,CAAC,EACxBI,KAAK,GAAGN,YAAY,CAACE,GAAG,EAAEG,IAA8B,CAAC;EAC3D,OAAO,IAAIP,yBAAyB,CAACQ,KAAK,EAAE;IAC1CF,QAAQ;IACR,GAAGC;GACJ,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}
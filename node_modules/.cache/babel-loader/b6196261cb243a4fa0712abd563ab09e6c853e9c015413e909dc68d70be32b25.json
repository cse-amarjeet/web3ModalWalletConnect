{"ast":null,"code":"import { InjectedConnector } from \"./chunk-BVC4KGLQ.js\";\nimport { __privateAdd, __privateGet, __privateMethod, __privateSet } from \"./chunk-MQXBDTVK.js\";\n\n// src/utils/configureChains.ts\nimport { createPublicClient, fallback, http, webSocket } from \"viem\";\nfunction configureChains(defaultChains, providers) {\n  let {\n    batch = {\n      multicall: {\n        wait: 32\n      }\n    },\n    pollingInterval = 4e3,\n    rank,\n    retryCount,\n    retryDelay,\n    stallTimeout\n  } = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (!defaultChains.length) throw new Error(\"must have at least one chain\");\n  let chains = [];\n  const httpUrls = {};\n  const wsUrls = {};\n  for (const chain of defaultChains) {\n    let configExists = false;\n    for (const provider of providers) {\n      const apiConfig = provider(chain);\n      if (!apiConfig) continue;\n      configExists = true;\n      if (!chains.some(_ref => {\n        let {\n          id\n        } = _ref;\n        return id === chain.id;\n      })) {\n        chains = [...chains, apiConfig.chain];\n      }\n      httpUrls[chain.id] = [...(httpUrls[chain.id] || []), ...apiConfig.rpcUrls.http];\n      if (apiConfig.rpcUrls.webSocket) {\n        wsUrls[chain.id] = [...(wsUrls[chain.id] || []), ...apiConfig.rpcUrls.webSocket];\n      }\n    }\n    if (!configExists) {\n      throw new Error([`Could not find valid provider configuration for chain \"${chain.name}\".\n`, \"You may need to add `jsonRpcProvider` to `configureChains` with the chain's RPC URLs.\", \"Read more: https://wagmi.sh/core/providers/jsonRpc\"].join(\"\\n\"));\n    }\n  }\n  return {\n    chains,\n    publicClient: _ref2 => {\n      let {\n        chainId\n      } = _ref2;\n      const activeChain = chains.find(x => x.id === chainId) ?? defaultChains[0];\n      const chainHttpUrls = httpUrls[activeChain.id];\n      if (!chainHttpUrls || !chainHttpUrls[0]) throw new Error(`No providers configured for chain \"${activeChain.id}\"`);\n      const publicClient = createPublicClient({\n        batch,\n        chain: activeChain,\n        transport: fallback(chainHttpUrls.map(url => http(url, {\n          timeout: stallTimeout\n        })), {\n          rank,\n          retryCount,\n          retryDelay\n        }),\n        pollingInterval\n      });\n      return Object.assign(publicClient, {\n        chains\n      });\n    },\n    webSocketPublicClient: _ref3 => {\n      let {\n        chainId\n      } = _ref3;\n      const activeChain = chains.find(x => x.id === chainId) ?? defaultChains[0];\n      const chainWsUrls = wsUrls[activeChain.id];\n      if (!chainWsUrls || !chainWsUrls[0]) return void 0;\n      const publicClient = createPublicClient({\n        batch,\n        chain: activeChain,\n        transport: fallback(chainWsUrls.map(url => webSocket(url, {\n          timeout: stallTimeout\n        })), {\n          rank,\n          retryCount,\n          retryDelay\n        }),\n        pollingInterval\n      });\n      return Object.assign(publicClient, {\n        chains\n      });\n    }\n  };\n}\n\n// src/errors.ts\nimport { ConnectorNotFoundError } from \"@wagmi/connectors\";\nvar ChainMismatchError = class extends Error {\n  constructor(_ref4) {\n    let {\n      activeChain,\n      targetChain\n    } = _ref4;\n    super(`Chain mismatch: Expected \"${targetChain}\", received \"${activeChain}\".`);\n    this.name = \"ChainMismatchError\";\n  }\n};\nvar ChainNotConfiguredError = class extends Error {\n  constructor(_ref5) {\n    let {\n      chainId,\n      connectorId\n    } = _ref5;\n    super(`Chain \"${chainId}\" not configured${connectorId ? ` for connector \"${connectorId}\"` : \"\"}.`);\n    this.name = \"ChainNotConfigured\";\n  }\n};\nvar ConnectorAlreadyConnectedError = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"ConnectorAlreadyConnectedError\";\n    this.message = \"Connector already connected\";\n  }\n};\nvar ConfigChainsNotFound = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"ConfigChainsNotFound\";\n    this.message = \"No chains were found on the wagmi config. Some functions that require a chain may not work.\";\n  }\n};\nvar SwitchChainNotSupportedError = class extends Error {\n  constructor(_ref6) {\n    let {\n      connector\n    } = _ref6;\n    super(`\"${connector.name}\" does not support programmatic chain switching.`);\n    this.name = \"SwitchChainNotSupportedError\";\n  }\n};\n\n// src/utils/deepEqual.ts\nfunction deepEqual(a, b) {\n  if (a === b) return true;\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    if (a.constructor !== b.constructor) return false;\n    let length;\n    let i;\n    if (Array.isArray(a) && Array.isArray(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;) if (!deepEqual(a[i], b[i])) return false;\n      return true;\n    }\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n    const keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n    for (i = length; i-- !== 0;) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n    for (i = length; i-- !== 0;) {\n      const key = keys[i];\n      if (key && !deepEqual(a[key], b[key])) return false;\n    }\n    return true;\n  }\n  return a !== a && b !== b;\n}\n\n// src/utils/deserialize.ts\nvar findAndReplace = (cacheRef, _ref7) => {\n  let {\n    find,\n    replace\n  } = _ref7;\n  if (cacheRef && find(cacheRef)) {\n    return replace(cacheRef);\n  }\n  if (typeof cacheRef !== \"object\") {\n    return cacheRef;\n  }\n  if (Array.isArray(cacheRef)) {\n    return cacheRef.map(item => findAndReplace(item, {\n      find,\n      replace\n    }));\n  }\n  if (cacheRef instanceof Object) {\n    return Object.entries(cacheRef).reduce((curr, _ref8) => {\n      let [key, value] = _ref8;\n      return {\n        ...curr,\n        [key]: findAndReplace(value, {\n          find,\n          replace\n        })\n      };\n    }, {});\n  }\n  return cacheRef;\n};\nfunction deserialize(cachedString) {\n  const cache = JSON.parse(cachedString);\n  const deserializedCacheWithBigInts = findAndReplace(cache, {\n    find: data => typeof data === \"string\" && data.startsWith(\"#bigint.\"),\n    replace: data => BigInt(data.replace(\"#bigint.\", \"\"))\n  });\n  return deserializedCacheWithBigInts;\n}\n\n// src/utils/getParameters.ts\nfunction getCallParameters(args) {\n  return {\n    accessList: args.accessList,\n    account: args.account,\n    blockNumber: args.blockNumber,\n    blockTag: args.blockTag,\n    data: args.data,\n    gas: args.gas,\n    gasPrice: args.gasPrice,\n    maxFeePerGas: args.maxFeePerGas,\n    maxPriorityFeePerGas: args.maxPriorityFeePerGas,\n    nonce: args.nonce,\n    to: args.to,\n    value: args.value\n  };\n}\nfunction getSendTransactionParameters(args) {\n  return {\n    accessList: args.accessList,\n    account: args.account,\n    data: args.data,\n    gas: args.gas,\n    gasPrice: args.gasPrice,\n    maxFeePerGas: args.maxFeePerGas,\n    maxPriorityFeePerGas: args.maxPriorityFeePerGas,\n    nonce: args.nonce,\n    to: args.to,\n    value: args.value\n  };\n}\n\n// src/utils/getUnit.ts\nimport { weiUnits } from \"viem\";\nfunction getUnit(unit) {\n  if (typeof unit === \"number\") return unit;\n  if (unit === \"wei\") return 0;\n  return Math.abs(weiUnits[unit]);\n}\n\n// src/utils/serialize.ts\nfunction getReferenceKey(keys, cutoff) {\n  return keys.slice(0, cutoff).join(\".\") || \".\";\n}\nfunction getCutoff(array, value) {\n  const {\n    length\n  } = array;\n  for (let index = 0; index < length; ++index) {\n    if (array[index] === value) {\n      return index + 1;\n    }\n  }\n  return 0;\n}\nfunction createReplacer(replacer, circularReplacer) {\n  const hasReplacer = typeof replacer === \"function\";\n  const hasCircularReplacer = typeof circularReplacer === \"function\";\n  const cache = [];\n  const keys = [];\n  return function replace(key, value) {\n    if (typeof value === \"object\") {\n      if (cache.length) {\n        const thisCutoff = getCutoff(cache, this);\n        if (thisCutoff === 0) {\n          cache[cache.length] = this;\n        } else {\n          cache.splice(thisCutoff);\n          keys.splice(thisCutoff);\n        }\n        keys[keys.length] = key;\n        const valueCutoff = getCutoff(cache, value);\n        if (valueCutoff !== 0) {\n          return hasCircularReplacer ? circularReplacer.call(this, key, value, getReferenceKey(keys, valueCutoff)) : `[ref=${getReferenceKey(keys, valueCutoff)}]`;\n        }\n      } else {\n        cache[0] = value;\n        keys[0] = key;\n      }\n    }\n    return hasReplacer ? replacer.call(this, key, value) : value;\n  };\n}\nfunction serialize(value, replacer, indent, circularReplacer) {\n  return JSON.stringify(value, createReplacer((key, value_) => {\n    const value2 = typeof value_ === \"bigint\" ? `#bigint.${value_.toString()}` : value_;\n    return replacer?.(key, value2) || value2;\n  }, circularReplacer), indent ?? void 0);\n}\n\n// src/config.ts\nimport { persist, subscribeWithSelector } from \"zustand/middleware\";\nimport { createStore } from \"zustand/vanilla\";\n\n// src/storage.ts\nvar noopStorage = {\n  getItem: _key => \"\",\n  setItem: (_key, _value) => null,\n  removeItem: _key => null\n};\nfunction createStorage(_ref9) {\n  let {\n    deserialize: deserialize2 = deserialize,\n    key: prefix = \"wagmi\",\n    serialize: serialize2 = serialize,\n    storage\n  } = _ref9;\n  return {\n    ...storage,\n    getItem: function (key) {\n      let defaultState = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      const value = storage.getItem(`${prefix}.${key}`);\n      try {\n        return value ? deserialize2(value) : defaultState;\n      } catch (error) {\n        console.warn(error);\n        return defaultState;\n      }\n    },\n    setItem: (key, value) => {\n      if (value === null) {\n        storage.removeItem(`${prefix}.${key}`);\n      } else {\n        try {\n          storage.setItem(`${prefix}.${key}`, serialize2(value));\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    },\n    removeItem: key => storage.removeItem(`${prefix}.${key}`)\n  };\n}\n\n// src/config.ts\nvar storeKey = \"store\";\nvar _isAutoConnecting, _lastUsedConnector, _addEffects, addEffects_fn;\nvar Config = class {\n  constructor(_ref10) {\n    let {\n      autoConnect = false,\n      connectors = [new InjectedConnector()],\n      publicClient,\n      storage = createStorage({\n        storage: typeof window !== \"undefined\" ? window.localStorage : noopStorage\n      }),\n      logger = {\n        warn: console.warn\n      },\n      webSocketPublicClient\n    } = _ref10;\n    __privateAdd(this, _addEffects);\n    this.publicClients = /* @__PURE__ */new Map();\n    this.webSocketPublicClients = /* @__PURE__ */new Map();\n    __privateAdd(this, _isAutoConnecting, void 0);\n    __privateAdd(this, _lastUsedConnector, void 0);\n    this.args = {\n      autoConnect,\n      connectors,\n      logger,\n      publicClient,\n      storage,\n      webSocketPublicClient\n    };\n    let status = \"disconnected\";\n    let chainId;\n    if (autoConnect) {\n      try {\n        const rawState = storage.getItem(storeKey);\n        const data = rawState?.state?.data;\n        status = data?.account ? \"reconnecting\" : \"connecting\";\n        chainId = data?.chain?.id;\n      } catch (_error) {}\n    }\n    const connectors_ = typeof connectors === \"function\" ? connectors() : connectors;\n    connectors_.forEach(connector => connector.setStorage(storage));\n    this.store = createStore(subscribeWithSelector(persist(() => ({\n      connectors: connectors_,\n      publicClient: this.getPublicClient({\n        chainId\n      }),\n      status,\n      webSocketPublicClient: this.getWebSocketPublicClient({\n        chainId\n      })\n    }), {\n      name: storeKey,\n      storage,\n      partialize: state => ({\n        ...(autoConnect && {\n          data: {\n            account: state?.data?.account,\n            chain: state?.data?.chain\n          }\n        }),\n        chains: state?.chains\n      }),\n      version: 2\n    })));\n    this.storage = storage;\n    __privateSet(this, _lastUsedConnector, storage?.getItem(\"wallet\"));\n    __privateMethod(this, _addEffects, addEffects_fn).call(this);\n    if (autoConnect && typeof window !== \"undefined\") setTimeout(async () => await this.autoConnect(), 0);\n  }\n  get chains() {\n    return this.store.getState().chains;\n  }\n  get connectors() {\n    return this.store.getState().connectors;\n  }\n  get connector() {\n    return this.store.getState().connector;\n  }\n  get data() {\n    return this.store.getState().data;\n  }\n  get error() {\n    return this.store.getState().error;\n  }\n  get lastUsedChainId() {\n    return this.data?.chain?.id;\n  }\n  get publicClient() {\n    return this.store.getState().publicClient;\n  }\n  get status() {\n    return this.store.getState().status;\n  }\n  get subscribe() {\n    return this.store.subscribe;\n  }\n  get webSocketPublicClient() {\n    return this.store.getState().webSocketPublicClient;\n  }\n  setState(updater) {\n    const newState = typeof updater === \"function\" ? updater(this.store.getState()) : updater;\n    this.store.setState(newState, true);\n  }\n  clearState() {\n    this.setState(x => ({\n      ...x,\n      chains: void 0,\n      connector: void 0,\n      data: void 0,\n      error: void 0,\n      status: \"disconnected\"\n    }));\n  }\n  async destroy() {\n    if (this.connector) await this.connector.disconnect?.();\n    __privateSet(this, _isAutoConnecting, false);\n    this.clearState();\n    this.store.destroy();\n  }\n  async autoConnect() {\n    if (__privateGet(this, _isAutoConnecting)) return;\n    __privateSet(this, _isAutoConnecting, true);\n    this.setState(x => ({\n      ...x,\n      status: x.data?.account ? \"reconnecting\" : \"connecting\"\n    }));\n    const sorted = __privateGet(this, _lastUsedConnector) ? [...this.connectors].sort(x => x.id === __privateGet(this, _lastUsedConnector) ? -1 : 1) : this.connectors;\n    let connected = false;\n    for (const connector of sorted) {\n      if (!connector.ready || !connector.isAuthorized) continue;\n      const isAuthorized = await connector.isAuthorized();\n      if (!isAuthorized) continue;\n      const data = await connector.connect();\n      this.setState(x => ({\n        ...x,\n        connector,\n        chains: connector?.chains,\n        data,\n        status: \"connected\"\n      }));\n      connected = true;\n      break;\n    }\n    if (!connected) this.setState(x => ({\n      ...x,\n      data: void 0,\n      status: \"disconnected\"\n    }));\n    __privateSet(this, _isAutoConnecting, false);\n    return this.data;\n  }\n  setConnectors(connectors) {\n    this.args = {\n      ...this.args,\n      connectors\n    };\n    const connectors_ = typeof connectors === \"function\" ? connectors() : connectors;\n    connectors_.forEach(connector => connector.setStorage(this.args.storage));\n    this.setState(x => ({\n      ...x,\n      connectors: connectors_\n    }));\n  }\n  getPublicClient() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let publicClient_ = this.publicClients.get(-1);\n    if (publicClient_ && publicClient_?.chain.id === chainId) return publicClient_;\n    publicClient_ = this.publicClients.get(chainId ?? -1);\n    if (publicClient_) return publicClient_;\n    const {\n      publicClient\n    } = this.args;\n    publicClient_ = typeof publicClient === \"function\" ? publicClient({\n      chainId\n    }) : publicClient;\n    this.publicClients.set(chainId ?? -1, publicClient_);\n    return publicClient_;\n  }\n  setPublicClient(publicClient) {\n    const chainId = this.data?.chain?.id;\n    this.args = {\n      ...this.args,\n      publicClient\n    };\n    this.publicClients.clear();\n    this.setState(x => ({\n      ...x,\n      publicClient: this.getPublicClient({\n        chainId\n      })\n    }));\n  }\n  getWebSocketPublicClient() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let webSocketPublicClient_ = this.webSocketPublicClients.get(-1);\n    if (webSocketPublicClient_ && webSocketPublicClient_?.chain.id === chainId) return webSocketPublicClient_;\n    webSocketPublicClient_ = this.webSocketPublicClients.get(chainId ?? -1);\n    if (webSocketPublicClient_) return webSocketPublicClient_;\n    const {\n      webSocketPublicClient\n    } = this.args;\n    webSocketPublicClient_ = typeof webSocketPublicClient === \"function\" ? webSocketPublicClient({\n      chainId\n    }) : webSocketPublicClient;\n    if (webSocketPublicClient_) this.webSocketPublicClients.set(chainId ?? -1, webSocketPublicClient_);\n    return webSocketPublicClient_;\n  }\n  setWebSocketPublicClient(webSocketPublicClient) {\n    const chainId = this.data?.chain?.id;\n    this.args = {\n      ...this.args,\n      webSocketPublicClient\n    };\n    this.webSocketPublicClients.clear();\n    this.setState(x => ({\n      ...x,\n      webSocketPublicClient: this.getWebSocketPublicClient({\n        chainId\n      })\n    }));\n  }\n  setLastUsedConnector() {\n    let lastUsedConnector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    this.storage?.setItem(\"wallet\", lastUsedConnector);\n  }\n};\n_isAutoConnecting = new WeakMap();\n_lastUsedConnector = new WeakMap();\n_addEffects = new WeakSet();\naddEffects_fn = function () {\n  const onChange = data => {\n    this.setState(x => ({\n      ...x,\n      data: {\n        ...x.data,\n        ...data\n      }\n    }));\n  };\n  const onDisconnect = () => {\n    this.clearState();\n  };\n  const onError = error => {\n    this.setState(x => ({\n      ...x,\n      error\n    }));\n  };\n  this.store.subscribe(_ref11 => {\n    let {\n      connector\n    } = _ref11;\n    return connector;\n  }, (connector, prevConnector) => {\n    prevConnector?.off?.(\"change\", onChange);\n    prevConnector?.off?.(\"disconnect\", onDisconnect);\n    prevConnector?.off?.(\"error\", onError);\n    if (!connector) return;\n    connector.on?.(\"change\", onChange);\n    connector.on?.(\"disconnect\", onDisconnect);\n    connector.on?.(\"error\", onError);\n  });\n  const {\n    publicClient,\n    webSocketPublicClient\n  } = this.args;\n  const subscribePublicClient = typeof publicClient === \"function\";\n  const subscribeWebSocketPublicClient = typeof webSocketPublicClient === \"function\";\n  if (subscribePublicClient || subscribeWebSocketPublicClient) this.store.subscribe(_ref12 => {\n    let {\n      data\n    } = _ref12;\n    return data?.chain?.id;\n  }, chainId => {\n    this.setState(x => ({\n      ...x,\n      publicClient: this.getPublicClient({\n        chainId\n      }),\n      webSocketPublicClient: this.getWebSocketPublicClient({\n        chainId\n      })\n    }));\n  });\n};\nvar config;\nfunction createConfig(args) {\n  const config_ = new Config(args);\n  config = config_;\n  return config_;\n}\nfunction getConfig() {\n  if (!config) {\n    throw new Error(\"No wagmi config found. Ensure you have set up a config: https://wagmi.sh/react/config\");\n  }\n  return config;\n}\n\n// src/actions/accounts/connect.ts\nasync function connect(_ref13) {\n  let {\n    chainId,\n    connector\n  } = _ref13;\n  const config2 = getConfig();\n  const activeConnector = config2.connector;\n  if (activeConnector && connector.id === activeConnector.id) throw new ConnectorAlreadyConnectedError();\n  try {\n    config2.setState(x => ({\n      ...x,\n      status: \"connecting\"\n    }));\n    const data = await connector.connect({\n      chainId\n    });\n    config2.setLastUsedConnector(connector.id);\n    config2.setState(x => ({\n      ...x,\n      connector,\n      chains: connector?.chains,\n      data,\n      status: \"connected\"\n    }));\n    config2.storage.setItem(\"connected\", true);\n    return {\n      ...data,\n      connector\n    };\n  } catch (err) {\n    config2.setState(x => {\n      return {\n        ...x,\n        status: x.connector ? \"connected\" : \"disconnected\"\n      };\n    });\n    throw err;\n  }\n}\n\n// src/actions/accounts/disconnect.ts\nasync function disconnect() {\n  const config2 = getConfig();\n  if (config2.connector) await config2.connector.disconnect();\n  config2.clearState();\n  config2.storage.removeItem(\"connected\");\n}\n\n// src/actions/accounts/fetchBalance.ts\nimport { ContractFunctionExecutionError as ContractFunctionExecutionError3, formatUnits as formatUnits2, hexToString as hexToString2, trim as trim2 } from \"viem\";\n\n// src/constants/abis.ts\nvar erc20ABI = [{\n  type: \"event\",\n  name: \"Approval\",\n  inputs: [{\n    indexed: true,\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"value\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"event\",\n  name: \"Transfer\",\n  inputs: [{\n    indexed: true,\n    name: \"from\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"to\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"value\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"allowance\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    name: \"spender\",\n    type: \"address\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"approve\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }]\n}, {\n  type: \"function\",\n  name: \"balanceOf\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"account\",\n    type: \"address\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"decimals\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"uint8\"\n  }]\n}, {\n  type: \"function\",\n  name: \"name\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"string\"\n  }]\n}, {\n  type: \"function\",\n  name: \"symbol\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"string\"\n  }]\n}, {\n  type: \"function\",\n  name: \"totalSupply\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"transfer\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"recipient\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }]\n}, {\n  type: \"function\",\n  name: \"transferFrom\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"sender\",\n    type: \"address\"\n  }, {\n    name: \"recipient\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }]\n}];\nvar erc20ABI_bytes32 = [{\n  type: \"event\",\n  name: \"Approval\",\n  inputs: [{\n    indexed: true,\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"value\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"event\",\n  name: \"Transfer\",\n  inputs: [{\n    indexed: true,\n    name: \"from\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"to\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"value\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"allowance\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    name: \"spender\",\n    type: \"address\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"approve\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }]\n}, {\n  type: \"function\",\n  name: \"balanceOf\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"account\",\n    type: \"address\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"decimals\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"uint8\"\n  }]\n}, {\n  type: \"function\",\n  name: \"name\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"bytes32\"\n  }]\n}, {\n  type: \"function\",\n  name: \"symbol\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"bytes32\"\n  }]\n}, {\n  type: \"function\",\n  name: \"totalSupply\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"transfer\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"recipient\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }]\n}, {\n  type: \"function\",\n  name: \"transferFrom\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"sender\",\n    type: \"address\"\n  }, {\n    name: \"recipient\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }]\n}];\nvar erc721ABI = [{\n  type: \"event\",\n  name: \"Approval\",\n  inputs: [{\n    indexed: true,\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"tokenId\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"event\",\n  name: \"ApprovalForAll\",\n  inputs: [{\n    indexed: true,\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"operator\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"approved\",\n    type: \"bool\"\n  }]\n}, {\n  type: \"event\",\n  name: \"Transfer\",\n  inputs: [{\n    indexed: true,\n    name: \"from\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"to\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"tokenId\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"approve\",\n  stateMutability: \"payable\",\n  inputs: [{\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  outputs: []\n}, {\n  type: \"function\",\n  name: \"balanceOf\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"account\",\n    type: \"address\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"getApproved\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"address\"\n  }]\n}, {\n  type: \"function\",\n  name: \"isApprovedForAll\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    name: \"operator\",\n    type: \"address\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }]\n}, {\n  type: \"function\",\n  name: \"name\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"string\"\n  }]\n}, {\n  type: \"function\",\n  name: \"ownerOf\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }]\n}, {\n  type: \"function\",\n  name: \"safeTransferFrom\",\n  stateMutability: \"payable\",\n  inputs: [{\n    name: \"from\",\n    type: \"address\"\n  }, {\n    name: \"to\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  outputs: []\n}, {\n  type: \"function\",\n  name: \"safeTransferFrom\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"from\",\n    type: \"address\"\n  }, {\n    name: \"to\",\n    type: \"address\"\n  }, {\n    name: \"id\",\n    type: \"uint256\"\n  }, {\n    name: \"data\",\n    type: \"bytes\"\n  }],\n  outputs: []\n}, {\n  type: \"function\",\n  name: \"setApprovalForAll\",\n  stateMutability: \"nonpayable\",\n  inputs: [{\n    name: \"operator\",\n    type: \"address\"\n  }, {\n    name: \"approved\",\n    type: \"bool\"\n  }],\n  outputs: []\n}, {\n  type: \"function\",\n  name: \"symbol\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"string\"\n  }]\n}, {\n  type: \"function\",\n  name: \"tokenByIndex\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"index\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"tokenByIndex\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    name: \"index\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"tokenId\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"tokenURI\",\n  stateMutability: \"view\",\n  inputs: [{\n    name: \"tokenId\",\n    type: \"uint256\"\n  }],\n  outputs: [{\n    name: \"\",\n    type: \"string\"\n  }]\n}, {\n  type: \"function\",\n  name: \"totalSupply\",\n  stateMutability: \"view\",\n  inputs: [],\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }]\n}, {\n  type: \"function\",\n  name: \"transferFrom\",\n  stateMutability: \"payable\",\n  inputs: [{\n    name: \"sender\",\n    type: \"address\"\n  }, {\n    name: \"recipient\",\n    type: \"address\"\n  }, {\n    name: \"tokeId\",\n    type: \"uint256\"\n  }],\n  outputs: []\n}];\nvar erc4626ABI = [{\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"value\",\n    type: \"uint256\"\n  }],\n  name: \"Approval\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    name: \"sender\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"receiver\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"assets\",\n    type: \"uint256\"\n  }, {\n    indexed: false,\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  name: \"Deposit\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    name: \"from\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"to\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"value\",\n    type: \"uint256\"\n  }],\n  name: \"Transfer\",\n  type: \"event\"\n}, {\n  anonymous: false,\n  inputs: [{\n    indexed: true,\n    name: \"sender\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"receiver\",\n    type: \"address\"\n  }, {\n    indexed: true,\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    indexed: false,\n    name: \"assets\",\n    type: \"uint256\"\n  }, {\n    indexed: false,\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  name: \"Withdraw\",\n  type: \"event\"\n}, {\n  inputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }, {\n    name: \"spender\",\n    type: \"address\"\n  }],\n  name: \"allowance\",\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"spender\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  name: \"approve\",\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"asset\",\n  outputs: [{\n    name: \"assetTokenAddress\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"account\",\n    type: \"address\"\n  }],\n  name: \"balanceOf\",\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  name: \"convertToAssets\",\n  outputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  name: \"convertToShares\",\n  outputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }, {\n    name: \"receiver\",\n    type: \"address\"\n  }],\n  name: \"deposit\",\n  outputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"caller\",\n    type: \"address\"\n  }],\n  name: \"maxDeposit\",\n  outputs: [{\n    name: \"maxAssets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"caller\",\n    type: \"address\"\n  }],\n  name: \"maxMint\",\n  outputs: [{\n    name: \"maxShares\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }],\n  name: \"maxRedeem\",\n  outputs: [{\n    name: \"maxShares\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"owner\",\n    type: \"address\"\n  }],\n  name: \"maxWithdraw\",\n  outputs: [{\n    name: \"maxAssets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }, {\n    name: \"receiver\",\n    type: \"address\"\n  }],\n  name: \"mint\",\n  outputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  name: \"previewDeposit\",\n  outputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  name: \"previewMint\",\n  outputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  name: \"previewRedeem\",\n  outputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  name: \"previewWithdraw\",\n  outputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }, {\n    name: \"receiver\",\n    type: \"address\"\n  }, {\n    name: \"owner\",\n    type: \"address\"\n  }],\n  name: \"redeem\",\n  outputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"totalAssets\",\n  outputs: [{\n    name: \"totalManagedAssets\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"totalSupply\",\n  outputs: [{\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"to\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  name: \"transfer\",\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"from\",\n    type: \"address\"\n  }, {\n    name: \"to\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    type: \"uint256\"\n  }],\n  name: \"transferFrom\",\n  outputs: [{\n    name: \"\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}, {\n  inputs: [{\n    name: \"assets\",\n    type: \"uint256\"\n  }, {\n    name: \"receiver\",\n    type: \"address\"\n  }, {\n    name: \"owner\",\n    type: \"address\"\n  }],\n  name: \"withdraw\",\n  outputs: [{\n    name: \"shares\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\",\n  type: \"function\"\n}];\n\n// src/actions/contracts/fetchToken.ts\nimport { ContractFunctionExecutionError, formatUnits, hexToString, trim } from \"viem\";\nasync function fetchToken(_ref14) {\n  let {\n    address,\n    chainId,\n    formatUnits: unit = 18\n  } = _ref14;\n  async function fetchToken_(_ref15) {\n    let {\n      abi\n    } = _ref15;\n    const erc20Config = {\n      address,\n      abi,\n      chainId\n    };\n    const [decimals, name, symbol, totalSupply] = await readContracts({\n      allowFailure: false,\n      contracts: [{\n        ...erc20Config,\n        functionName: \"decimals\"\n      }, {\n        ...erc20Config,\n        functionName: \"name\"\n      }, {\n        ...erc20Config,\n        functionName: \"symbol\"\n      }, {\n        ...erc20Config,\n        functionName: \"totalSupply\"\n      }]\n    });\n    return {\n      address,\n      decimals,\n      name,\n      symbol,\n      totalSupply: {\n        formatted: formatUnits(totalSupply, getUnit(unit)),\n        value: totalSupply\n      }\n    };\n  }\n  try {\n    return await fetchToken_({\n      abi: erc20ABI\n    });\n  } catch (err) {\n    if (err instanceof ContractFunctionExecutionError) {\n      const {\n        name,\n        symbol,\n        ...rest\n      } = await fetchToken_({\n        abi: erc20ABI_bytes32\n      });\n      return {\n        name: hexToString(trim(name, {\n          dir: \"right\"\n        })),\n        symbol: hexToString(trim(symbol, {\n          dir: \"right\"\n        })),\n        ...rest\n      };\n    }\n    throw err;\n  }\n}\n\n// src/actions/viem/getPublicClient.ts\nfunction getPublicClient() {\n  let {\n    chainId\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const config2 = getConfig();\n  if (chainId) return config2.getPublicClient({\n    chainId\n  }) || config2.publicClient;\n  return config2.publicClient;\n}\n\n// src/actions/viem/getWalletClient.ts\nasync function getWalletClient() {\n  let {\n    chainId\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const config2 = getConfig();\n  const walletClient = (await config2.connector?.getWalletClient?.({\n    chainId\n  })) || null;\n  return walletClient;\n}\n\n// src/actions/viem/getWebSocketPublicClient.ts\nfunction getWebSocketPublicClient() {\n  let {\n    chainId\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const config2 = getConfig();\n  if (chainId) return config2.getWebSocketPublicClient({\n    chainId\n  }) || config2.webSocketPublicClient;\n  return config2.webSocketPublicClient;\n}\n\n// src/actions/viem/watchPublicClient.ts\nfunction watchPublicClient(args, callback) {\n  const config2 = getConfig();\n  const handleChange = async () => callback(getPublicClient(args));\n  const unsubscribe = config2.subscribe(_ref16 => {\n    let {\n      publicClient\n    } = _ref16;\n    return publicClient;\n  }, handleChange);\n  return unsubscribe;\n}\n\n// src/actions/viem/watchWalletClient.ts\nimport { shallow } from \"zustand/shallow\";\nfunction watchWalletClient(_ref17, callback) {\n  let {\n    chainId\n  } = _ref17;\n  const config2 = getConfig();\n  const handleChange = async _ref18 => {\n    let {\n      chainId: chainId_\n    } = _ref18;\n    if (chainId && chainId_ && chainId !== chainId_) return;\n    const walletClient = await getWalletClient({\n      chainId\n    });\n    if (!getConfig().connector) return callback(null);\n    return callback(walletClient);\n  };\n  const unsubscribe = config2.subscribe(_ref19 => {\n    let {\n      data,\n      connector\n    } = _ref19;\n    return {\n      account: data?.account,\n      chainId: data?.chain?.id,\n      connector\n    };\n  }, handleChange, {\n    equalityFn: shallow\n  });\n  return unsubscribe;\n}\n\n// src/actions/viem/watchWebSocketPublicClient.ts\nfunction watchWebSocketPublicClient(args, callback) {\n  const config2 = getConfig();\n  const handleChange = async () => callback(getWebSocketPublicClient(args));\n  const unsubscribe = config2.subscribe(_ref20 => {\n    let {\n      webSocketPublicClient\n    } = _ref20;\n    return webSocketPublicClient;\n  }, handleChange);\n  return unsubscribe;\n}\n\n// src/actions/contracts/prepareWriteContract.ts\nasync function prepareWriteContract(_ref21) {\n  let {\n    abi,\n    address,\n    args,\n    chainId,\n    functionName,\n    walletClient: walletClient_,\n    ...config2\n  } = _ref21;\n  const publicClient = getPublicClient({\n    chainId\n  });\n  const walletClient = walletClient_ ?? (await getWalletClient({\n    chainId\n  }));\n  if (!walletClient) throw new ConnectorNotFoundError();\n  if (chainId) assertActiveChain({\n    chainId\n  });\n  const {\n    account,\n    accessList,\n    blockNumber,\n    blockTag,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    value\n  } = getCallParameters(config2);\n  const {\n    result,\n    request\n  } = await publicClient.simulateContract({\n    abi,\n    address,\n    functionName,\n    args,\n    account: account || walletClient.account,\n    accessList,\n    blockNumber,\n    blockTag,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    value\n  });\n  const minimizedAbi = abi.filter(abiItem => \"name\" in abiItem && abiItem.name === functionName);\n  return {\n    mode: \"prepared\",\n    request: {\n      ...request,\n      abi: minimizedAbi,\n      chainId\n    },\n    result\n  };\n}\n\n// src/actions/contracts/getContract.ts\nimport { getContract as getContract_ } from \"viem\";\nfunction getContract(_ref22) {\n  let {\n    address,\n    abi,\n    chainId,\n    walletClient\n  } = _ref22;\n  const publicClient = getPublicClient({\n    chainId\n  });\n  return getContract_({\n    address,\n    abi,\n    publicClient,\n    walletClient\n  });\n}\n\n// src/actions/contracts/multicall.ts\nasync function multicall(_ref23) {\n  let {\n    chainId,\n    contracts,\n    blockNumber,\n    blockTag,\n    ...args\n  } = _ref23;\n  const publicClient = getPublicClient({\n    chainId\n  });\n  if (!publicClient.chains) throw new ConfigChainsNotFound();\n  if (chainId && publicClient.chain.id !== chainId) throw new ChainNotConfiguredError({\n    chainId\n  });\n  return publicClient.multicall({\n    allowFailure: args.allowFailure ?? true,\n    blockNumber,\n    blockTag,\n    contracts\n  });\n}\n\n// src/actions/contracts/readContract.ts\nasync function readContract(_ref24) {\n  let {\n    address,\n    account,\n    chainId,\n    abi,\n    args,\n    functionName,\n    blockNumber,\n    blockTag\n  } = _ref24;\n  const publicClient = getPublicClient({\n    chainId\n  });\n  return publicClient.readContract({\n    abi,\n    address,\n    account,\n    functionName,\n    args,\n    blockNumber,\n    blockTag\n  });\n}\n\n// src/actions/contracts/readContracts.ts\nimport { ContractFunctionExecutionError as ContractFunctionExecutionError2 } from \"viem\";\nasync function readContracts(_ref25) {\n  let {\n    contracts,\n    blockNumber,\n    blockTag,\n    ...args\n  } = _ref25;\n  const {\n    allowFailure = true\n  } = args;\n  try {\n    const publicClient = getPublicClient();\n    const contractsByChainId = contracts.reduce((contracts2, contract, index) => {\n      const chainId = contract.chainId ?? publicClient.chain.id;\n      return {\n        ...contracts2,\n        [chainId]: [...(contracts2[chainId] || []), {\n          contract,\n          index\n        }]\n      };\n    }, {});\n    const promises = () => Object.entries(contractsByChainId).map(_ref26 => {\n      let [chainId, contracts2] = _ref26;\n      return multicall({\n        allowFailure,\n        chainId: parseInt(chainId),\n        contracts: contracts2.map(_ref27 => {\n          let {\n            contract\n          } = _ref27;\n          return contract;\n        }),\n        blockNumber,\n        blockTag\n      });\n    });\n    const multicallResults = (await Promise.all(promises())).flat();\n    const resultIndexes = Object.values(contractsByChainId).flatMap(contracts2 => contracts2.map(_ref28 => {\n      let {\n        index\n      } = _ref28;\n      return index;\n    }));\n    return multicallResults.reduce((results, result, index) => {\n      if (results) results[resultIndexes[index]] = result;\n      return results;\n    }, []);\n  } catch (err) {\n    if (err instanceof ContractFunctionExecutionError2) throw err;\n    const promises = () => contracts.map(contract => readContract({\n      ...contract,\n      blockNumber,\n      blockTag\n    }));\n    if (allowFailure) return (await Promise.allSettled(promises())).map(result => {\n      if (result.status === \"fulfilled\") return {\n        result: result.value,\n        status: \"success\"\n      };\n      return {\n        error: result.reason,\n        result: void 0,\n        status: \"failure\"\n      };\n    });\n    return await Promise.all(promises());\n  }\n}\n\n// src/actions/contracts/watchContractEvent.ts\nimport { shallow as shallow2 } from \"zustand/shallow\";\nfunction watchContractEvent(_ref29, callback) {\n  let {\n    address,\n    abi,\n    chainId,\n    eventName\n  } = _ref29;\n  let unwatch;\n  const watchEvent = async () => {\n    if (unwatch) unwatch();\n    const publicClient = getWebSocketPublicClient({\n      chainId\n    }) || getPublicClient({\n      chainId\n    });\n    unwatch = publicClient.watchContractEvent({\n      address,\n      abi,\n      eventName,\n      onLogs: callback\n    });\n  };\n  watchEvent();\n  const config2 = getConfig();\n  const unsubscribe = config2.subscribe(_ref30 => {\n    let {\n      publicClient,\n      webSocketPublicClient\n    } = _ref30;\n    return {\n      publicClient,\n      webSocketPublicClient\n    };\n  }, watchEvent, {\n    equalityFn: shallow2\n  });\n  return () => {\n    unwatch?.();\n    unsubscribe();\n  };\n}\n\n// src/actions/network-status/watchBlockNumber.ts\nimport { shallow as shallow3 } from \"zustand/shallow\";\nfunction watchBlockNumber(args, callback) {\n  let unwatch;\n  const createListener = publicClient => {\n    if (unwatch) unwatch();\n    unwatch = publicClient.watchBlockNumber({\n      onBlockNumber: callback,\n      emitOnBegin: true,\n      poll: true\n    });\n  };\n  const publicClient_ = getWebSocketPublicClient({\n    chainId: args.chainId\n  }) ?? getPublicClient({\n    chainId: args.chainId\n  });\n  if (args.listen) createListener(publicClient_);\n  const config2 = getConfig();\n  const unsubscribe = config2.subscribe(_ref31 => {\n    let {\n      publicClient,\n      webSocketPublicClient\n    } = _ref31;\n    return {\n      publicClient,\n      webSocketPublicClient\n    };\n  }, async _ref32 => {\n    let {\n      publicClient,\n      webSocketPublicClient\n    } = _ref32;\n    const publicClient_2 = webSocketPublicClient ?? publicClient;\n    if (args.listen && !args.chainId && publicClient_2) {\n      createListener(publicClient_2);\n    }\n  }, {\n    equalityFn: shallow3\n  });\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/actions/contracts/watchMulticall.ts\nfunction watchMulticall(args, callback) {\n  const config2 = getConfig();\n  const handleChange = async () => callback(await multicall(args));\n  const unwatch = args.listenToBlock ? watchBlockNumber({\n    listen: true\n  }, handleChange) : void 0;\n  const unsubscribe = config2.subscribe(_ref33 => {\n    let {\n      publicClient\n    } = _ref33;\n    return publicClient;\n  }, handleChange);\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/actions/contracts/watchReadContract.ts\nfunction watchReadContract(args, callback) {\n  const config2 = getConfig();\n  const handleChange = async () => callback(await readContract(args));\n  const unwatch = args.listenToBlock ? watchBlockNumber({\n    listen: true\n  }, handleChange) : void 0;\n  const unsubscribe = config2.subscribe(_ref34 => {\n    let {\n      publicClient\n    } = _ref34;\n    return publicClient;\n  }, handleChange);\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/actions/contracts/watchReadContracts.ts\nfunction watchReadContracts(args, callback) {\n  const config2 = getConfig();\n  const handleChange = async () => callback(await readContracts(args));\n  const unwatch = args.listenToBlock ? watchBlockNumber({\n    listen: true\n  }, handleChange) : void 0;\n  const unsubscribe = config2.subscribe(_ref35 => {\n    let {\n      publicClient\n    } = _ref35;\n    return publicClient;\n  }, handleChange);\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/actions/contracts/writeContract.ts\nasync function writeContract(config2) {\n  const walletClient = await getWalletClient({\n    chainId: config2.chainId\n  });\n  if (!walletClient) throw new ConnectorNotFoundError();\n  if (config2.chainId) assertActiveChain({\n    chainId: config2.chainId\n  });\n  let request;\n  if (config2.mode === \"prepared\") {\n    request = config2.request;\n  } else {\n    const {\n      chainId: _,\n      mode: __,\n      ...args\n    } = config2;\n    const res = await prepareWriteContract(args);\n    request = res.request;\n  }\n  const hash = await walletClient.writeContract({\n    ...request,\n    chain: null\n  });\n  return {\n    hash\n  };\n}\n\n// src/actions/accounts/fetchBalance.ts\nasync function fetchBalance(_ref36) {\n  let {\n    address,\n    chainId,\n    formatUnits: unit,\n    token\n  } = _ref36;\n  const config2 = getConfig();\n  const publicClient = getPublicClient({\n    chainId\n  });\n  if (token) {\n    const fetchContractBalance = async _ref37 => {\n      let {\n        abi\n      } = _ref37;\n      const erc20Config = {\n        abi,\n        address: token,\n        chainId\n      };\n      const [value2, decimals, symbol] = await readContracts({\n        allowFailure: false,\n        contracts: [{\n          ...erc20Config,\n          functionName: \"balanceOf\",\n          args: [address]\n        }, {\n          ...erc20Config,\n          functionName: \"decimals\"\n        }, {\n          ...erc20Config,\n          functionName: \"symbol\"\n        }]\n      });\n      return {\n        decimals,\n        formatted: formatUnits2(value2 ?? \"0\", getUnit(unit ?? decimals)),\n        symbol,\n        value: value2\n      };\n    };\n    try {\n      return await fetchContractBalance({\n        abi: erc20ABI\n      });\n    } catch (err) {\n      if (err instanceof ContractFunctionExecutionError3) {\n        const {\n          symbol,\n          ...rest\n        } = await fetchContractBalance({\n          abi: erc20ABI_bytes32\n        });\n        return {\n          symbol: hexToString2(trim2(symbol, {\n            dir: \"right\"\n          })),\n          ...rest\n        };\n      }\n      throw err;\n    }\n  }\n  const chains = [...(config2.publicClient.chains || []), ...(config2.chains ?? [])];\n  const value = await publicClient.getBalance({\n    address\n  });\n  const chain = chains.find(x => x.id === publicClient.chain.id);\n  return {\n    decimals: chain?.nativeCurrency.decimals ?? 18,\n    formatted: formatUnits2(value ?? \"0\", getUnit(unit ?? 18)),\n    symbol: chain?.nativeCurrency.symbol ?? \"ETH\",\n    value\n  };\n}\n\n// src/actions/accounts/getAccount.ts\nfunction getAccount() {\n  const {\n    data,\n    connector,\n    status\n  } = getConfig();\n  switch (status) {\n    case \"connected\":\n      return {\n        address: data?.account,\n        connector,\n        isConnected: true,\n        isConnecting: false,\n        isDisconnected: false,\n        isReconnecting: false,\n        status\n      };\n    case \"reconnecting\":\n      return {\n        address: data?.account,\n        connector,\n        isConnected: !!data?.account,\n        isConnecting: false,\n        isDisconnected: false,\n        isReconnecting: true,\n        status\n      };\n    case \"connecting\":\n      return {\n        address: data?.account,\n        connector,\n        isConnected: false,\n        isConnecting: true,\n        isDisconnected: false,\n        isReconnecting: false,\n        status\n      };\n    case \"disconnected\":\n      return {\n        address: void 0,\n        connector: void 0,\n        isConnected: false,\n        isConnecting: false,\n        isDisconnected: true,\n        isReconnecting: false,\n        status\n      };\n  }\n}\n\n// src/actions/accounts/getNetwork.ts\nfunction getNetwork() {\n  const config2 = getConfig();\n  const chainId = config2.data?.chain?.id;\n  const activeChains = config2.chains ?? [];\n  const activeChain = [...(config2.publicClient?.chains || []), ...activeChains].find(x => x.id === chainId) ?? {\n    id: chainId,\n    name: `Chain ${chainId}`,\n    network: `${chainId}`,\n    nativeCurrency: {\n      name: \"Ether\",\n      decimals: 18,\n      symbol: \"ETH\"\n    },\n    rpcUrls: {\n      default: {\n        http: [\"\"]\n      },\n      public: {\n        http: [\"\"]\n      }\n    }\n  };\n  return {\n    chain: chainId ? {\n      ...activeChain,\n      ...config2.data?.chain,\n      id: chainId\n    } : void 0,\n    chains: activeChains\n  };\n}\n\n// src/actions/accounts/signMessage.ts\nasync function signMessage(args) {\n  const walletClient = await getWalletClient();\n  if (!walletClient) throw new ConnectorNotFoundError();\n  return await walletClient.signMessage({\n    message: args.message\n  });\n}\n\n// src/actions/accounts/signTypedData.ts\nasync function signTypedData(_ref38) {\n  let {\n    domain,\n    message,\n    primaryType,\n    types\n  } = _ref38;\n  const walletClient = await getWalletClient();\n  if (!walletClient) throw new ConnectorNotFoundError();\n  const {\n    chainId\n  } = domain;\n  if (chainId) assertActiveChain({\n    chainId\n  });\n  return walletClient.signTypedData({\n    message,\n    primaryType,\n    types,\n    domain\n  });\n}\n\n// src/actions/accounts/switchNetwork.ts\nasync function switchNetwork(_ref39) {\n  let {\n    chainId\n  } = _ref39;\n  const {\n    connector\n  } = getConfig();\n  if (!connector) throw new ConnectorNotFoundError();\n  if (!connector.switchChain) throw new SwitchChainNotSupportedError({\n    connector\n  });\n  return connector.switchChain(chainId);\n}\n\n// src/actions/accounts/watchAccount.ts\nimport { shallow as shallow4 } from \"zustand/shallow\";\nfunction watchAccount(callback) {\n  let {\n    selector = x => x\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const config2 = getConfig();\n  const handleChange = () => callback(getAccount());\n  const unsubscribe = config2.subscribe(_ref40 => {\n    let {\n      data,\n      connector,\n      status\n    } = _ref40;\n    return selector({\n      address: data?.account,\n      connector,\n      status\n    });\n  }, handleChange, {\n    equalityFn: shallow4\n  });\n  return unsubscribe;\n}\n\n// src/actions/accounts/watchNetwork.ts\nimport { shallow as shallow5 } from \"zustand/shallow\";\nfunction watchNetwork(callback) {\n  let {\n    selector = x => x\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const config2 = getConfig();\n  const handleChange = () => callback(getNetwork());\n  const unsubscribe = config2.subscribe(_ref41 => {\n    let {\n      data,\n      chains\n    } = _ref41;\n    return selector({\n      chainId: data?.chain?.id,\n      chains\n    });\n  }, handleChange, {\n    equalityFn: shallow5\n  });\n  return unsubscribe;\n}\n\n// src/actions/ens/fetchEnsAddress.ts\nimport { getAddress } from \"viem\";\nimport { normalize } from \"viem/ens\";\nasync function fetchEnsAddress(_ref42) {\n  let {\n    chainId,\n    name\n  } = _ref42;\n  const publicClient = getPublicClient({\n    chainId\n  });\n  const address = await publicClient.getEnsAddress({\n    name: normalize(name)\n  });\n  try {\n    if (address === \"0x0000000000000000000000000000000000000000\") return null;\n    return address ? getAddress(address) : null;\n  } catch (_error) {\n    return null;\n  }\n}\n\n// src/actions/ens/fetchEnsAvatar.ts\nimport { normalize as normalize2 } from \"viem/ens\";\nasync function fetchEnsAvatar(_ref43) {\n  let {\n    name,\n    chainId\n  } = _ref43;\n  const publicClient = getPublicClient({\n    chainId\n  });\n  const avatar = await publicClient.getEnsAvatar({\n    name: normalize2(name)\n  });\n  return avatar;\n}\n\n// src/actions/ens/fetchEnsName.ts\nimport { getAddress as getAddress2 } from \"viem\";\nasync function fetchEnsName(_ref44) {\n  let {\n    address,\n    chainId\n  } = _ref44;\n  const publicClient = getPublicClient({\n    chainId\n  });\n  return publicClient.getEnsName({\n    address: getAddress2(address)\n  });\n}\n\n// src/actions/ens/fetchEnsResolver.ts\nimport { normalize as normalize3 } from \"viem/ens\";\nasync function fetchEnsResolver(_ref45) {\n  let {\n    chainId,\n    name\n  } = _ref45;\n  const publicClient = getPublicClient({\n    chainId\n  });\n  const resolver = await publicClient.getEnsResolver({\n    name: normalize3(name)\n  });\n  return resolver;\n}\n\n// src/actions/network-status/fetchBlockNumber.ts\nasync function fetchBlockNumber() {\n  let {\n    chainId\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const publicClient = getPublicClient({\n    chainId\n  });\n  const blockNumber = await publicClient.getBlockNumber();\n  return blockNumber;\n}\n\n// src/actions/network-status/fetchFeeData.ts\nimport { formatUnits as formatUnits3, parseGwei } from \"viem\";\nasync function fetchFeeData() {\n  let {\n    chainId,\n    formatUnits: units = \"gwei\"\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const publicClient = getPublicClient({\n    chainId\n  });\n  const block = await publicClient.getBlock();\n  let gasPrice = null;\n  try {\n    gasPrice = await publicClient.getGasPrice();\n  } catch {}\n  let lastBaseFeePerGas = null;\n  let maxFeePerGas = null;\n  let maxPriorityFeePerGas = null;\n  if (block?.baseFeePerGas) {\n    lastBaseFeePerGas = block.baseFeePerGas;\n    maxPriorityFeePerGas = parseGwei(\"1\");\n    maxFeePerGas = block.baseFeePerGas * 2n + maxPriorityFeePerGas;\n  }\n  const unit = getUnit(units);\n  const formatted = {\n    gasPrice: gasPrice ? formatUnits3(gasPrice, unit) : null,\n    maxFeePerGas: maxFeePerGas ? formatUnits3(maxFeePerGas, unit) : null,\n    maxPriorityFeePerGas: maxPriorityFeePerGas ? formatUnits3(maxPriorityFeePerGas, unit) : null\n  };\n  return {\n    lastBaseFeePerGas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    formatted\n  };\n}\n\n// src/actions/transactions/fetchTransaction.ts\nasync function fetchTransaction(_ref46) {\n  let {\n    chainId,\n    hash\n  } = _ref46;\n  const publicClient = getPublicClient({\n    chainId\n  });\n  return publicClient.getTransaction({\n    hash\n  });\n}\n\n// src/actions/transactions/prepareSendTransaction.ts\nimport { isAddress } from \"viem\";\nasync function prepareSendTransaction(_ref47) {\n  let {\n    accessList,\n    account,\n    chainId,\n    data,\n    gas: gas_,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    to: to_,\n    value,\n    walletClient: walletClient_\n  } = _ref47;\n  const publicClient = getPublicClient({\n    chainId\n  });\n  const walletClient = walletClient_ ?? (await getWalletClient({\n    chainId\n  }));\n  if (!walletClient) throw new ConnectorNotFoundError();\n  if (chainId) assertActiveChain({\n    chainId\n  });\n  const to = (to_ && !isAddress(to_) ? await fetchEnsAddress({\n    name: to_\n  }) : to_) || void 0;\n  if (to && !isAddress(to)) throw new Error(\"Invalid address\");\n  const gas = typeof gas_ === \"undefined\" ? await publicClient.estimateGas({\n    accessList,\n    account: walletClient.account,\n    data,\n    gas: gas_ ?? void 0,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    to,\n    value\n  }) : gas_ || void 0;\n  return {\n    accessList,\n    account,\n    data,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    mode: \"prepared\",\n    nonce,\n    to,\n    value,\n    ...(chainId ? {\n      chainId\n    } : {})\n  };\n}\n\n// src/actions/transactions/sendTransaction.ts\nasync function sendTransaction(_ref48) {\n  let {\n    accessList,\n    account,\n    chainId,\n    data,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    mode,\n    nonce,\n    to,\n    value\n  } = _ref48;\n  const walletClient = await getWalletClient({\n    chainId\n  });\n  if (!walletClient) throw new ConnectorNotFoundError();\n  if (chainId) assertActiveChain({\n    chainId\n  });\n  let args;\n  if (mode === \"prepared\") {\n    args = {\n      account,\n      accessList,\n      chain: null,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value\n    };\n  } else {\n    args = await prepareSendTransaction({\n      accessList,\n      account,\n      chainId,\n      data,\n      gas: gas || null,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value\n    });\n  }\n  const hash = await walletClient.sendTransaction({\n    ...args,\n    chain: null\n  });\n  return {\n    hash\n  };\n}\n\n// src/actions/transactions/waitForTransaction.ts\nimport { hexToString as hexToString3 } from \"viem\";\nasync function waitForTransaction(_ref49) {\n  let {\n    chainId,\n    confirmations = 1,\n    hash,\n    onReplaced,\n    timeout = 0\n  } = _ref49;\n  const publicClient = getPublicClient({\n    chainId\n  });\n  const receipt = await publicClient.waitForTransactionReceipt({\n    hash,\n    confirmations,\n    onReplaced,\n    timeout\n  });\n  if (receipt.status === \"reverted\") {\n    const txn = await publicClient.getTransaction({\n      hash: receipt.transactionHash\n    });\n    const code = await publicClient.call({\n      ...txn,\n      gasPrice: txn.type !== \"eip1559\" ? txn.gasPrice : void 0,\n      maxFeePerGas: txn.type === \"eip1559\" ? txn.maxFeePerGas : void 0,\n      maxPriorityFeePerGas: txn.type === \"eip1559\" ? txn.maxPriorityFeePerGas : void 0\n    });\n    const reason = hexToString3(`0x${code.substring(138)}`);\n    throw new Error(reason);\n  }\n  return receipt;\n}\n\n// src/actions/transactions/watchPendingTransactions.ts\nimport { shallow as shallow6 } from \"zustand/shallow\";\nfunction watchPendingTransactions(args, callback) {\n  let unwatch;\n  const createListener = publicClient => {\n    if (unwatch) unwatch();\n    unwatch = publicClient.watchPendingTransactions({\n      onTransactions: callback,\n      poll: true\n    });\n  };\n  const publicClient_ = getWebSocketPublicClient({\n    chainId: args.chainId\n  }) ?? getPublicClient({\n    chainId: args.chainId\n  });\n  createListener(publicClient_);\n  const config2 = getConfig();\n  const unsubscribe = config2.subscribe(_ref50 => {\n    let {\n      publicClient,\n      webSocketPublicClient\n    } = _ref50;\n    return {\n      publicClient,\n      webSocketPublicClient\n    };\n  }, async _ref51 => {\n    let {\n      publicClient,\n      webSocketPublicClient\n    } = _ref51;\n    const publicClient_2 = webSocketPublicClient ?? publicClient;\n    if (!args.chainId && publicClient_2) {\n      createListener(publicClient_2);\n    }\n  }, {\n    equalityFn: shallow6\n  });\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/utils/assertActiveChain.ts\nfunction assertActiveChain(_ref52) {\n  let {\n    chainId\n  } = _ref52;\n  const {\n    chain: activeChain,\n    chains\n  } = getNetwork();\n  const activeChainId = activeChain?.id;\n  if (activeChainId && chainId !== activeChainId) {\n    throw new ChainMismatchError({\n      activeChain: chains.find(x => x.id === activeChainId)?.name ?? `Chain ${activeChainId}`,\n      targetChain: chains.find(x => x.id === chainId)?.name ?? `Chain ${chainId}`\n    });\n  }\n}\nexport { configureChains, ChainMismatchError, ChainNotConfiguredError, ConnectorAlreadyConnectedError, ConfigChainsNotFound, SwitchChainNotSupportedError, ConnectorNotFoundError, deepEqual, deserialize, getCallParameters, getSendTransactionParameters, getUnit, serialize, noopStorage, createStorage, Config, createConfig, getConfig, connect, disconnect, erc20ABI, erc721ABI, erc4626ABI, fetchToken, getPublicClient, getWalletClient, getWebSocketPublicClient, watchPublicClient, watchWalletClient, watchWebSocketPublicClient, prepareWriteContract, getContract, multicall, readContract, readContracts, watchContractEvent, watchBlockNumber, watchMulticall, watchReadContract, watchReadContracts, writeContract, fetchBalance, getAccount, getNetwork, signMessage, signTypedData, switchNetwork, watchAccount, watchNetwork, fetchEnsAddress, fetchEnsAvatar, fetchEnsName, fetchEnsResolver, fetchBlockNumber, fetchFeeData, fetchTransaction, prepareSendTransaction, sendTransaction, waitForTransaction, watchPendingTransactions };","map":{"version":3,"names":["InjectedConnector","__privateAdd","__privateGet","__privateMethod","__privateSet","createPublicClient","fallback","http","webSocket","configureChains","defaultChains","providers","batch","multicall","wait","pollingInterval","rank","retryCount","retryDelay","stallTimeout","arguments","length","undefined","Error","chains","httpUrls","wsUrls","chain","configExists","provider","apiConfig","some","_ref","id","rpcUrls","name","join","publicClient","_ref2","chainId","activeChain","find","x","chainHttpUrls","transport","map","url","timeout","Object","assign","webSocketPublicClient","_ref3","chainWsUrls","ConnectorNotFoundError","ChainMismatchError","constructor","_ref4","targetChain","ChainNotConfiguredError","_ref5","connectorId","ConnectorAlreadyConnectedError","message","ConfigChainsNotFound","SwitchChainNotSupportedError","_ref6","connector","deepEqual","a","b","i","Array","isArray","valueOf","prototype","toString","keys","hasOwnProperty","call","key","findAndReplace","cacheRef","_ref7","replace","item","entries","reduce","curr","_ref8","value","deserialize","cachedString","cache","JSON","parse","deserializedCacheWithBigInts","data","startsWith","BigInt","getCallParameters","args","accessList","account","blockNumber","blockTag","gas","gasPrice","maxFeePerGas","maxPriorityFeePerGas","nonce","to","getSendTransactionParameters","weiUnits","getUnit","unit","Math","abs","getReferenceKey","cutoff","slice","getCutoff","array","index","createReplacer","replacer","circularReplacer","hasReplacer","hasCircularReplacer","thisCutoff","splice","valueCutoff","serialize","indent","stringify","value_","value2","persist","subscribeWithSelector","createStore","noopStorage","getItem","_key","setItem","_value","removeItem","createStorage","_ref9","deserialize2","prefix","serialize2","storage","defaultState","error","console","warn","err","storeKey","_isAutoConnecting","_lastUsedConnector","_addEffects","addEffects_fn","Config","_ref10","autoConnect","connectors","window","localStorage","logger","publicClients","Map","webSocketPublicClients","status","rawState","state","_error","connectors_","forEach","setStorage","store","getPublicClient","getWebSocketPublicClient","partialize","version","setTimeout","getState","lastUsedChainId","subscribe","setState","updater","newState","clearState","destroy","disconnect","sorted","sort","connected","ready","isAuthorized","connect","setConnectors","publicClient_","get","set","setPublicClient","clear","webSocketPublicClient_","setWebSocketPublicClient","setLastUsedConnector","lastUsedConnector","WeakMap","WeakSet","onChange","onDisconnect","onError","_ref11","prevConnector","off","on","subscribePublicClient","subscribeWebSocketPublicClient","_ref12","config","createConfig","config_","getConfig","_ref13","config2","activeConnector","ContractFunctionExecutionError","ContractFunctionExecutionError3","formatUnits","formatUnits2","hexToString","hexToString2","trim","trim2","erc20ABI","type","inputs","indexed","stateMutability","outputs","erc20ABI_bytes32","erc721ABI","erc4626ABI","anonymous","fetchToken","_ref14","address","fetchToken_","_ref15","abi","erc20Config","decimals","symbol","totalSupply","readContracts","allowFailure","contracts","functionName","formatted","rest","dir","getWalletClient","walletClient","watchPublicClient","callback","handleChange","unsubscribe","_ref16","shallow","watchWalletClient","_ref17","_ref18","chainId_","_ref19","equalityFn","watchWebSocketPublicClient","_ref20","prepareWriteContract","_ref21","walletClient_","assertActiveChain","result","request","simulateContract","minimizedAbi","filter","abiItem","mode","getContract","getContract_","_ref22","_ref23","readContract","_ref24","ContractFunctionExecutionError2","_ref25","contractsByChainId","contracts2","contract","promises","_ref26","parseInt","_ref27","multicallResults","Promise","all","flat","resultIndexes","values","flatMap","_ref28","results","allSettled","reason","shallow2","watchContractEvent","_ref29","eventName","unwatch","watchEvent","onLogs","_ref30","shallow3","watchBlockNumber","createListener","onBlockNumber","emitOnBegin","poll","listen","_ref31","_ref32","publicClient_2","watchMulticall","listenToBlock","_ref33","watchReadContract","_ref34","watchReadContracts","_ref35","writeContract","_","__","res","hash","fetchBalance","_ref36","token","fetchContractBalance","_ref37","getBalance","nativeCurrency","getAccount","isConnected","isConnecting","isDisconnected","isReconnecting","getNetwork","activeChains","network","default","public","signMessage","signTypedData","_ref38","domain","primaryType","types","switchNetwork","_ref39","switchChain","shallow4","watchAccount","selector","_ref40","shallow5","watchNetwork","_ref41","getAddress","normalize","fetchEnsAddress","_ref42","getEnsAddress","normalize2","fetchEnsAvatar","_ref43","avatar","getEnsAvatar","getAddress2","fetchEnsName","_ref44","getEnsName","normalize3","fetchEnsResolver","_ref45","resolver","getEnsResolver","fetchBlockNumber","getBlockNumber","formatUnits3","parseGwei","fetchFeeData","units","block","getBlock","getGasPrice","lastBaseFeePerGas","baseFeePerGas","fetchTransaction","_ref46","getTransaction","isAddress","prepareSendTransaction","_ref47","gas_","to_","estimateGas","sendTransaction","_ref48","hexToString3","waitForTransaction","_ref49","confirmations","onReplaced","receipt","waitForTransactionReceipt","txn","transactionHash","code","substring","shallow6","watchPendingTransactions","onTransactions","_ref50","_ref51","_ref52","activeChainId"],"sources":["/home/amarjeet/Amarjeet/realwareWeb3/metamask_sign/Dapp-Starter code/node_modules/@wagmi/core/dist/chunk-LAFZBYO7.js"],"sourcesContent":["import {\n  InjectedConnector\n} from \"./chunk-BVC4KGLQ.js\";\nimport {\n  __privateAdd,\n  __privateGet,\n  __privateMethod,\n  __privateSet\n} from \"./chunk-MQXBDTVK.js\";\n\n// src/utils/configureChains.ts\nimport { createPublicClient, fallback, http, webSocket } from \"viem\";\nfunction configureChains(defaultChains, providers, {\n  batch = { multicall: { wait: 32 } },\n  pollingInterval = 4e3,\n  rank,\n  retryCount,\n  retryDelay,\n  stallTimeout\n} = {}) {\n  if (!defaultChains.length)\n    throw new Error(\"must have at least one chain\");\n  let chains = [];\n  const httpUrls = {};\n  const wsUrls = {};\n  for (const chain of defaultChains) {\n    let configExists = false;\n    for (const provider of providers) {\n      const apiConfig = provider(chain);\n      if (!apiConfig)\n        continue;\n      configExists = true;\n      if (!chains.some(({ id }) => id === chain.id)) {\n        chains = [...chains, apiConfig.chain];\n      }\n      httpUrls[chain.id] = [\n        ...httpUrls[chain.id] || [],\n        ...apiConfig.rpcUrls.http\n      ];\n      if (apiConfig.rpcUrls.webSocket) {\n        wsUrls[chain.id] = [\n          ...wsUrls[chain.id] || [],\n          ...apiConfig.rpcUrls.webSocket\n        ];\n      }\n    }\n    if (!configExists) {\n      throw new Error(\n        [\n          `Could not find valid provider configuration for chain \"${chain.name}\".\n`,\n          \"You may need to add `jsonRpcProvider` to `configureChains` with the chain's RPC URLs.\",\n          \"Read more: https://wagmi.sh/core/providers/jsonRpc\"\n        ].join(\"\\n\")\n      );\n    }\n  }\n  return {\n    chains,\n    publicClient: ({ chainId }) => {\n      const activeChain = chains.find((x) => x.id === chainId) ?? defaultChains[0];\n      const chainHttpUrls = httpUrls[activeChain.id];\n      if (!chainHttpUrls || !chainHttpUrls[0])\n        throw new Error(`No providers configured for chain \"${activeChain.id}\"`);\n      const publicClient = createPublicClient({\n        batch,\n        chain: activeChain,\n        transport: fallback(\n          chainHttpUrls.map((url) => http(url, { timeout: stallTimeout })),\n          { rank, retryCount, retryDelay }\n        ),\n        pollingInterval\n      });\n      return Object.assign(publicClient, {\n        chains\n      });\n    },\n    webSocketPublicClient: ({ chainId }) => {\n      const activeChain = chains.find((x) => x.id === chainId) ?? defaultChains[0];\n      const chainWsUrls = wsUrls[activeChain.id];\n      if (!chainWsUrls || !chainWsUrls[0])\n        return void 0;\n      const publicClient = createPublicClient({\n        batch,\n        chain: activeChain,\n        transport: fallback(\n          chainWsUrls.map((url) => webSocket(url, { timeout: stallTimeout })),\n          { rank, retryCount, retryDelay }\n        ),\n        pollingInterval\n      });\n      return Object.assign(publicClient, {\n        chains\n      });\n    }\n  };\n}\n\n// src/errors.ts\nimport { ConnectorNotFoundError } from \"@wagmi/connectors\";\nvar ChainMismatchError = class extends Error {\n  constructor({\n    activeChain,\n    targetChain\n  }) {\n    super(\n      `Chain mismatch: Expected \"${targetChain}\", received \"${activeChain}\".`\n    );\n    this.name = \"ChainMismatchError\";\n  }\n};\nvar ChainNotConfiguredError = class extends Error {\n  constructor({\n    chainId,\n    connectorId\n  }) {\n    super(\n      `Chain \"${chainId}\" not configured${connectorId ? ` for connector \"${connectorId}\"` : \"\"}.`\n    );\n    this.name = \"ChainNotConfigured\";\n  }\n};\nvar ConnectorAlreadyConnectedError = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"ConnectorAlreadyConnectedError\";\n    this.message = \"Connector already connected\";\n  }\n};\nvar ConfigChainsNotFound = class extends Error {\n  constructor() {\n    super(...arguments);\n    this.name = \"ConfigChainsNotFound\";\n    this.message = \"No chains were found on the wagmi config. Some functions that require a chain may not work.\";\n  }\n};\nvar SwitchChainNotSupportedError = class extends Error {\n  constructor({ connector }) {\n    super(`\"${connector.name}\" does not support programmatic chain switching.`);\n    this.name = \"SwitchChainNotSupportedError\";\n  }\n};\n\n// src/utils/deepEqual.ts\nfunction deepEqual(a, b) {\n  if (a === b)\n    return true;\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    if (a.constructor !== b.constructor)\n      return false;\n    let length;\n    let i;\n    if (Array.isArray(a) && Array.isArray(b)) {\n      length = a.length;\n      if (length != b.length)\n        return false;\n      for (i = length; i-- !== 0; )\n        if (!deepEqual(a[i], b[i]))\n          return false;\n      return true;\n    }\n    if (a.valueOf !== Object.prototype.valueOf)\n      return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString)\n      return a.toString() === b.toString();\n    const keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length)\n      return false;\n    for (i = length; i-- !== 0; )\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i]))\n        return false;\n    for (i = length; i-- !== 0; ) {\n      const key = keys[i];\n      if (key && !deepEqual(a[key], b[key]))\n        return false;\n    }\n    return true;\n  }\n  return a !== a && b !== b;\n}\n\n// src/utils/deserialize.ts\nvar findAndReplace = (cacheRef, {\n  find,\n  replace\n}) => {\n  if (cacheRef && find(cacheRef)) {\n    return replace(cacheRef);\n  }\n  if (typeof cacheRef !== \"object\") {\n    return cacheRef;\n  }\n  if (Array.isArray(cacheRef)) {\n    return cacheRef.map((item) => findAndReplace(item, { find, replace }));\n  }\n  if (cacheRef instanceof Object) {\n    return Object.entries(cacheRef).reduce(\n      (curr, [key, value]) => ({\n        ...curr,\n        [key]: findAndReplace(value, { find, replace })\n      }),\n      {}\n    );\n  }\n  return cacheRef;\n};\nfunction deserialize(cachedString) {\n  const cache = JSON.parse(cachedString);\n  const deserializedCacheWithBigInts = findAndReplace(cache, {\n    find: (data) => typeof data === \"string\" && data.startsWith(\"#bigint.\"),\n    replace: (data) => BigInt(data.replace(\"#bigint.\", \"\"))\n  });\n  return deserializedCacheWithBigInts;\n}\n\n// src/utils/getParameters.ts\nfunction getCallParameters(args) {\n  return {\n    accessList: args.accessList,\n    account: args.account,\n    blockNumber: args.blockNumber,\n    blockTag: args.blockTag,\n    data: args.data,\n    gas: args.gas,\n    gasPrice: args.gasPrice,\n    maxFeePerGas: args.maxFeePerGas,\n    maxPriorityFeePerGas: args.maxPriorityFeePerGas,\n    nonce: args.nonce,\n    to: args.to,\n    value: args.value\n  };\n}\nfunction getSendTransactionParameters(args) {\n  return {\n    accessList: args.accessList,\n    account: args.account,\n    data: args.data,\n    gas: args.gas,\n    gasPrice: args.gasPrice,\n    maxFeePerGas: args.maxFeePerGas,\n    maxPriorityFeePerGas: args.maxPriorityFeePerGas,\n    nonce: args.nonce,\n    to: args.to,\n    value: args.value\n  };\n}\n\n// src/utils/getUnit.ts\nimport { weiUnits } from \"viem\";\nfunction getUnit(unit) {\n  if (typeof unit === \"number\")\n    return unit;\n  if (unit === \"wei\")\n    return 0;\n  return Math.abs(weiUnits[unit]);\n}\n\n// src/utils/serialize.ts\nfunction getReferenceKey(keys, cutoff) {\n  return keys.slice(0, cutoff).join(\".\") || \".\";\n}\nfunction getCutoff(array, value) {\n  const { length } = array;\n  for (let index = 0; index < length; ++index) {\n    if (array[index] === value) {\n      return index + 1;\n    }\n  }\n  return 0;\n}\nfunction createReplacer(replacer, circularReplacer) {\n  const hasReplacer = typeof replacer === \"function\";\n  const hasCircularReplacer = typeof circularReplacer === \"function\";\n  const cache = [];\n  const keys = [];\n  return function replace(key, value) {\n    if (typeof value === \"object\") {\n      if (cache.length) {\n        const thisCutoff = getCutoff(cache, this);\n        if (thisCutoff === 0) {\n          cache[cache.length] = this;\n        } else {\n          cache.splice(thisCutoff);\n          keys.splice(thisCutoff);\n        }\n        keys[keys.length] = key;\n        const valueCutoff = getCutoff(cache, value);\n        if (valueCutoff !== 0) {\n          return hasCircularReplacer ? circularReplacer.call(\n            this,\n            key,\n            value,\n            getReferenceKey(keys, valueCutoff)\n          ) : `[ref=${getReferenceKey(keys, valueCutoff)}]`;\n        }\n      } else {\n        cache[0] = value;\n        keys[0] = key;\n      }\n    }\n    return hasReplacer ? replacer.call(this, key, value) : value;\n  };\n}\nfunction serialize(value, replacer, indent, circularReplacer) {\n  return JSON.stringify(\n    value,\n    createReplacer((key, value_) => {\n      const value2 = typeof value_ === \"bigint\" ? `#bigint.${value_.toString()}` : value_;\n      return replacer?.(key, value2) || value2;\n    }, circularReplacer),\n    indent ?? void 0\n  );\n}\n\n// src/config.ts\nimport { persist, subscribeWithSelector } from \"zustand/middleware\";\nimport { createStore } from \"zustand/vanilla\";\n\n// src/storage.ts\nvar noopStorage = {\n  getItem: (_key) => \"\",\n  setItem: (_key, _value) => null,\n  removeItem: (_key) => null\n};\nfunction createStorage({\n  deserialize: deserialize2 = deserialize,\n  key: prefix = \"wagmi\",\n  serialize: serialize2 = serialize,\n  storage\n}) {\n  return {\n    ...storage,\n    getItem: (key, defaultState = null) => {\n      const value = storage.getItem(`${prefix}.${key}`);\n      try {\n        return value ? deserialize2(value) : defaultState;\n      } catch (error) {\n        console.warn(error);\n        return defaultState;\n      }\n    },\n    setItem: (key, value) => {\n      if (value === null) {\n        storage.removeItem(`${prefix}.${key}`);\n      } else {\n        try {\n          storage.setItem(`${prefix}.${key}`, serialize2(value));\n        } catch (err) {\n          console.error(err);\n        }\n      }\n    },\n    removeItem: (key) => storage.removeItem(`${prefix}.${key}`)\n  };\n}\n\n// src/config.ts\nvar storeKey = \"store\";\nvar _isAutoConnecting, _lastUsedConnector, _addEffects, addEffects_fn;\nvar Config = class {\n  constructor({\n    autoConnect = false,\n    connectors = [new InjectedConnector()],\n    publicClient,\n    storage = createStorage({\n      storage: typeof window !== \"undefined\" ? window.localStorage : noopStorage\n    }),\n    logger = {\n      warn: console.warn\n    },\n    webSocketPublicClient\n  }) {\n    __privateAdd(this, _addEffects);\n    this.publicClients = /* @__PURE__ */ new Map();\n    this.webSocketPublicClients = /* @__PURE__ */ new Map();\n    __privateAdd(this, _isAutoConnecting, void 0);\n    __privateAdd(this, _lastUsedConnector, void 0);\n    this.args = {\n      autoConnect,\n      connectors,\n      logger,\n      publicClient,\n      storage,\n      webSocketPublicClient\n    };\n    let status = \"disconnected\";\n    let chainId;\n    if (autoConnect) {\n      try {\n        const rawState = storage.getItem(storeKey);\n        const data = rawState?.state?.data;\n        status = data?.account ? \"reconnecting\" : \"connecting\";\n        chainId = data?.chain?.id;\n      } catch (_error) {\n      }\n    }\n    const connectors_ = typeof connectors === \"function\" ? connectors() : connectors;\n    connectors_.forEach((connector) => connector.setStorage(storage));\n    this.store = createStore(\n      subscribeWithSelector(\n        persist(\n          () => ({\n            connectors: connectors_,\n            publicClient: this.getPublicClient({ chainId }),\n            status,\n            webSocketPublicClient: this.getWebSocketPublicClient({ chainId })\n          }),\n          {\n            name: storeKey,\n            storage,\n            partialize: (state) => ({\n              ...autoConnect && {\n                data: {\n                  account: state?.data?.account,\n                  chain: state?.data?.chain\n                }\n              },\n              chains: state?.chains\n            }),\n            version: 2\n          }\n        )\n      )\n    );\n    this.storage = storage;\n    __privateSet(this, _lastUsedConnector, storage?.getItem(\"wallet\"));\n    __privateMethod(this, _addEffects, addEffects_fn).call(this);\n    if (autoConnect && typeof window !== \"undefined\")\n      setTimeout(async () => await this.autoConnect(), 0);\n  }\n  get chains() {\n    return this.store.getState().chains;\n  }\n  get connectors() {\n    return this.store.getState().connectors;\n  }\n  get connector() {\n    return this.store.getState().connector;\n  }\n  get data() {\n    return this.store.getState().data;\n  }\n  get error() {\n    return this.store.getState().error;\n  }\n  get lastUsedChainId() {\n    return this.data?.chain?.id;\n  }\n  get publicClient() {\n    return this.store.getState().publicClient;\n  }\n  get status() {\n    return this.store.getState().status;\n  }\n  get subscribe() {\n    return this.store.subscribe;\n  }\n  get webSocketPublicClient() {\n    return this.store.getState().webSocketPublicClient;\n  }\n  setState(updater) {\n    const newState = typeof updater === \"function\" ? updater(this.store.getState()) : updater;\n    this.store.setState(newState, true);\n  }\n  clearState() {\n    this.setState((x) => ({\n      ...x,\n      chains: void 0,\n      connector: void 0,\n      data: void 0,\n      error: void 0,\n      status: \"disconnected\"\n    }));\n  }\n  async destroy() {\n    if (this.connector)\n      await this.connector.disconnect?.();\n    __privateSet(this, _isAutoConnecting, false);\n    this.clearState();\n    this.store.destroy();\n  }\n  async autoConnect() {\n    if (__privateGet(this, _isAutoConnecting))\n      return;\n    __privateSet(this, _isAutoConnecting, true);\n    this.setState((x) => ({\n      ...x,\n      status: x.data?.account ? \"reconnecting\" : \"connecting\"\n    }));\n    const sorted = __privateGet(this, _lastUsedConnector) ? [...this.connectors].sort(\n      (x) => x.id === __privateGet(this, _lastUsedConnector) ? -1 : 1\n    ) : this.connectors;\n    let connected = false;\n    for (const connector of sorted) {\n      if (!connector.ready || !connector.isAuthorized)\n        continue;\n      const isAuthorized = await connector.isAuthorized();\n      if (!isAuthorized)\n        continue;\n      const data = await connector.connect();\n      this.setState((x) => ({\n        ...x,\n        connector,\n        chains: connector?.chains,\n        data,\n        status: \"connected\"\n      }));\n      connected = true;\n      break;\n    }\n    if (!connected)\n      this.setState((x) => ({\n        ...x,\n        data: void 0,\n        status: \"disconnected\"\n      }));\n    __privateSet(this, _isAutoConnecting, false);\n    return this.data;\n  }\n  setConnectors(connectors) {\n    this.args = {\n      ...this.args,\n      connectors\n    };\n    const connectors_ = typeof connectors === \"function\" ? connectors() : connectors;\n    connectors_.forEach((connector) => connector.setStorage(this.args.storage));\n    this.setState((x) => ({\n      ...x,\n      connectors: connectors_\n    }));\n  }\n  getPublicClient({ chainId } = {}) {\n    let publicClient_ = this.publicClients.get(-1);\n    if (publicClient_ && publicClient_?.chain.id === chainId)\n      return publicClient_;\n    publicClient_ = this.publicClients.get(chainId ?? -1);\n    if (publicClient_)\n      return publicClient_;\n    const { publicClient } = this.args;\n    publicClient_ = typeof publicClient === \"function\" ? publicClient({ chainId }) : publicClient;\n    this.publicClients.set(chainId ?? -1, publicClient_);\n    return publicClient_;\n  }\n  setPublicClient(publicClient) {\n    const chainId = this.data?.chain?.id;\n    this.args = {\n      ...this.args,\n      publicClient\n    };\n    this.publicClients.clear();\n    this.setState((x) => ({\n      ...x,\n      publicClient: this.getPublicClient({ chainId })\n    }));\n  }\n  getWebSocketPublicClient({ chainId } = {}) {\n    let webSocketPublicClient_ = this.webSocketPublicClients.get(-1);\n    if (webSocketPublicClient_ && webSocketPublicClient_?.chain.id === chainId)\n      return webSocketPublicClient_;\n    webSocketPublicClient_ = this.webSocketPublicClients.get(chainId ?? -1);\n    if (webSocketPublicClient_)\n      return webSocketPublicClient_;\n    const { webSocketPublicClient } = this.args;\n    webSocketPublicClient_ = typeof webSocketPublicClient === \"function\" ? webSocketPublicClient({ chainId }) : webSocketPublicClient;\n    if (webSocketPublicClient_)\n      this.webSocketPublicClients.set(chainId ?? -1, webSocketPublicClient_);\n    return webSocketPublicClient_;\n  }\n  setWebSocketPublicClient(webSocketPublicClient) {\n    const chainId = this.data?.chain?.id;\n    this.args = {\n      ...this.args,\n      webSocketPublicClient\n    };\n    this.webSocketPublicClients.clear();\n    this.setState((x) => ({\n      ...x,\n      webSocketPublicClient: this.getWebSocketPublicClient({\n        chainId\n      })\n    }));\n  }\n  setLastUsedConnector(lastUsedConnector = null) {\n    this.storage?.setItem(\"wallet\", lastUsedConnector);\n  }\n};\n_isAutoConnecting = new WeakMap();\n_lastUsedConnector = new WeakMap();\n_addEffects = new WeakSet();\naddEffects_fn = function() {\n  const onChange = (data) => {\n    this.setState((x) => ({\n      ...x,\n      data: { ...x.data, ...data }\n    }));\n  };\n  const onDisconnect = () => {\n    this.clearState();\n  };\n  const onError = (error) => {\n    this.setState((x) => ({ ...x, error }));\n  };\n  this.store.subscribe(\n    ({ connector }) => connector,\n    (connector, prevConnector) => {\n      prevConnector?.off?.(\"change\", onChange);\n      prevConnector?.off?.(\"disconnect\", onDisconnect);\n      prevConnector?.off?.(\"error\", onError);\n      if (!connector)\n        return;\n      connector.on?.(\"change\", onChange);\n      connector.on?.(\"disconnect\", onDisconnect);\n      connector.on?.(\"error\", onError);\n    }\n  );\n  const { publicClient, webSocketPublicClient } = this.args;\n  const subscribePublicClient = typeof publicClient === \"function\";\n  const subscribeWebSocketPublicClient = typeof webSocketPublicClient === \"function\";\n  if (subscribePublicClient || subscribeWebSocketPublicClient)\n    this.store.subscribe(\n      ({ data }) => data?.chain?.id,\n      (chainId) => {\n        this.setState((x) => ({\n          ...x,\n          publicClient: this.getPublicClient({ chainId }),\n          webSocketPublicClient: this.getWebSocketPublicClient({\n            chainId\n          })\n        }));\n      }\n    );\n};\nvar config;\nfunction createConfig(args) {\n  const config_ = new Config(args);\n  config = config_;\n  return config_;\n}\nfunction getConfig() {\n  if (!config) {\n    throw new Error(\n      \"No wagmi config found. Ensure you have set up a config: https://wagmi.sh/react/config\"\n    );\n  }\n  return config;\n}\n\n// src/actions/accounts/connect.ts\nasync function connect({ chainId, connector }) {\n  const config2 = getConfig();\n  const activeConnector = config2.connector;\n  if (activeConnector && connector.id === activeConnector.id)\n    throw new ConnectorAlreadyConnectedError();\n  try {\n    config2.setState((x) => ({ ...x, status: \"connecting\" }));\n    const data = await connector.connect({ chainId });\n    config2.setLastUsedConnector(connector.id);\n    config2.setState((x) => ({\n      ...x,\n      connector,\n      chains: connector?.chains,\n      data,\n      status: \"connected\"\n    }));\n    config2.storage.setItem(\"connected\", true);\n    return { ...data, connector };\n  } catch (err) {\n    config2.setState((x) => {\n      return {\n        ...x,\n        status: x.connector ? \"connected\" : \"disconnected\"\n      };\n    });\n    throw err;\n  }\n}\n\n// src/actions/accounts/disconnect.ts\nasync function disconnect() {\n  const config2 = getConfig();\n  if (config2.connector)\n    await config2.connector.disconnect();\n  config2.clearState();\n  config2.storage.removeItem(\"connected\");\n}\n\n// src/actions/accounts/fetchBalance.ts\nimport {\n  ContractFunctionExecutionError as ContractFunctionExecutionError3,\n  formatUnits as formatUnits2,\n  hexToString as hexToString2,\n  trim as trim2\n} from \"viem\";\n\n// src/constants/abis.ts\nvar erc20ABI = [\n  {\n    type: \"event\",\n    name: \"Approval\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"event\",\n    name: \"Transfer\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"allowance\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        name: \"spender\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"approve\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"balanceOf\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"account\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"decimals\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint8\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"name\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"symbol\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"totalSupply\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"transfer\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"recipient\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"transferFrom\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"sender\",\n        type: \"address\"\n      },\n      {\n        name: \"recipient\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  }\n];\nvar erc20ABI_bytes32 = [\n  {\n    type: \"event\",\n    name: \"Approval\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"event\",\n    name: \"Transfer\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"allowance\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        name: \"spender\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"approve\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"balanceOf\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"account\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"decimals\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint8\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"name\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bytes32\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"symbol\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bytes32\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"totalSupply\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"transfer\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"recipient\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"transferFrom\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"sender\",\n        type: \"address\"\n      },\n      {\n        name: \"recipient\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  }\n];\nvar erc721ABI = [\n  {\n    type: \"event\",\n    name: \"Approval\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"event\",\n    name: \"ApprovalForAll\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"operator\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"approved\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"event\",\n    name: \"Transfer\",\n    inputs: [\n      {\n        indexed: true,\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"approve\",\n    stateMutability: \"payable\",\n    inputs: [\n      {\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: []\n  },\n  {\n    type: \"function\",\n    name: \"balanceOf\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"account\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"getApproved\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"address\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"isApprovedForAll\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        name: \"operator\",\n        type: \"address\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"name\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"ownerOf\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"safeTransferFrom\",\n    stateMutability: \"payable\",\n    inputs: [\n      {\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: []\n  },\n  {\n    type: \"function\",\n    name: \"safeTransferFrom\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        name: \"id\",\n        type: \"uint256\"\n      },\n      {\n        name: \"data\",\n        type: \"bytes\"\n      }\n    ],\n    outputs: []\n  },\n  {\n    type: \"function\",\n    name: \"setApprovalForAll\",\n    stateMutability: \"nonpayable\",\n    inputs: [\n      {\n        name: \"operator\",\n        type: \"address\"\n      },\n      {\n        name: \"approved\",\n        type: \"bool\"\n      }\n    ],\n    outputs: []\n  },\n  {\n    type: \"function\",\n    name: \"symbol\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"tokenByIndex\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"index\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"tokenByIndex\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        name: \"index\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"tokenURI\",\n    stateMutability: \"view\",\n    inputs: [\n      {\n        name: \"tokenId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"totalSupply\",\n    stateMutability: \"view\",\n    inputs: [],\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ]\n  },\n  {\n    type: \"function\",\n    name: \"transferFrom\",\n    stateMutability: \"payable\",\n    inputs: [\n      {\n        name: \"sender\",\n        type: \"address\"\n      },\n      {\n        name: \"recipient\",\n        type: \"address\"\n      },\n      {\n        name: \"tokeId\",\n        type: \"uint256\"\n      }\n    ],\n    outputs: []\n  }\n];\nvar erc4626ABI = [\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"Approval\",\n    type: \"event\"\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"sender\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"receiver\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"assets\",\n        type: \"uint256\"\n      },\n      {\n        indexed: false,\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"Deposit\",\n    type: \"event\"\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"Transfer\",\n    type: \"event\"\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"sender\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"receiver\",\n        type: \"address\"\n      },\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        indexed: false,\n        name: \"assets\",\n        type: \"uint256\"\n      },\n      {\n        indexed: false,\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"Withdraw\",\n    type: \"event\"\n  },\n  {\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      },\n      {\n        name: \"spender\",\n        type: \"address\"\n      }\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"spender\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [],\n    name: \"asset\",\n    outputs: [\n      {\n        name: \"assetTokenAddress\",\n        type: \"address\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"account\",\n        type: \"address\"\n      }\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"convertToAssets\",\n    outputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"convertToShares\",\n    outputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      },\n      {\n        name: \"receiver\",\n        type: \"address\"\n      }\n    ],\n    name: \"deposit\",\n    outputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"caller\",\n        type: \"address\"\n      }\n    ],\n    name: \"maxDeposit\",\n    outputs: [\n      {\n        name: \"maxAssets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"caller\",\n        type: \"address\"\n      }\n    ],\n    name: \"maxMint\",\n    outputs: [\n      {\n        name: \"maxShares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      }\n    ],\n    name: \"maxRedeem\",\n    outputs: [\n      {\n        name: \"maxShares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"owner\",\n        type: \"address\"\n      }\n    ],\n    name: \"maxWithdraw\",\n    outputs: [\n      {\n        name: \"maxAssets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      },\n      {\n        name: \"receiver\",\n        type: \"address\"\n      }\n    ],\n    name: \"mint\",\n    outputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"previewDeposit\",\n    outputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"previewMint\",\n    outputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"previewRedeem\",\n    outputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"previewWithdraw\",\n    outputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      },\n      {\n        name: \"receiver\",\n        type: \"address\"\n      },\n      {\n        name: \"owner\",\n        type: \"address\"\n      }\n    ],\n    name: \"redeem\",\n    outputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [],\n    name: \"totalAssets\",\n    outputs: [\n      {\n        name: \"totalManagedAssets\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"view\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"from\",\n        type: \"address\"\n      },\n      {\n        name: \"to\",\n        type: \"address\"\n      },\n      {\n        name: \"amount\",\n        type: \"uint256\"\n      }\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  },\n  {\n    inputs: [\n      {\n        name: \"assets\",\n        type: \"uint256\"\n      },\n      {\n        name: \"receiver\",\n        type: \"address\"\n      },\n      {\n        name: \"owner\",\n        type: \"address\"\n      }\n    ],\n    name: \"withdraw\",\n    outputs: [\n      {\n        name: \"shares\",\n        type: \"uint256\"\n      }\n    ],\n    stateMutability: \"nonpayable\",\n    type: \"function\"\n  }\n];\n\n// src/actions/contracts/fetchToken.ts\nimport {\n  ContractFunctionExecutionError,\n  formatUnits,\n  hexToString,\n  trim\n} from \"viem\";\nasync function fetchToken({\n  address,\n  chainId,\n  formatUnits: unit = 18\n}) {\n  async function fetchToken_({ abi }) {\n    const erc20Config = { address, abi, chainId };\n    const [decimals, name, symbol, totalSupply] = await readContracts({\n      allowFailure: false,\n      contracts: [\n        { ...erc20Config, functionName: \"decimals\" },\n        { ...erc20Config, functionName: \"name\" },\n        { ...erc20Config, functionName: \"symbol\" },\n        { ...erc20Config, functionName: \"totalSupply\" }\n      ]\n    });\n    return {\n      address,\n      decimals,\n      name,\n      symbol,\n      totalSupply: {\n        formatted: formatUnits(totalSupply, getUnit(unit)),\n        value: totalSupply\n      }\n    };\n  }\n  try {\n    return await fetchToken_({ abi: erc20ABI });\n  } catch (err) {\n    if (err instanceof ContractFunctionExecutionError) {\n      const { name, symbol, ...rest } = await fetchToken_({\n        abi: erc20ABI_bytes32\n      });\n      return {\n        name: hexToString(trim(name, { dir: \"right\" })),\n        symbol: hexToString(trim(symbol, { dir: \"right\" })),\n        ...rest\n      };\n    }\n    throw err;\n  }\n}\n\n// src/actions/viem/getPublicClient.ts\nfunction getPublicClient({ chainId } = {}) {\n  const config2 = getConfig();\n  if (chainId)\n    return config2.getPublicClient({ chainId }) || config2.publicClient;\n  return config2.publicClient;\n}\n\n// src/actions/viem/getWalletClient.ts\nasync function getWalletClient({\n  chainId\n} = {}) {\n  const config2 = getConfig();\n  const walletClient = await config2.connector?.getWalletClient?.({ chainId }) || null;\n  return walletClient;\n}\n\n// src/actions/viem/getWebSocketPublicClient.ts\nfunction getWebSocketPublicClient({\n  chainId\n} = {}) {\n  const config2 = getConfig();\n  if (chainId)\n    return config2.getWebSocketPublicClient({ chainId }) || config2.webSocketPublicClient;\n  return config2.webSocketPublicClient;\n}\n\n// src/actions/viem/watchPublicClient.ts\nfunction watchPublicClient(args, callback) {\n  const config2 = getConfig();\n  const handleChange = async () => callback(getPublicClient(args));\n  const unsubscribe = config2.subscribe(\n    ({ publicClient }) => publicClient,\n    handleChange\n  );\n  return unsubscribe;\n}\n\n// src/actions/viem/watchWalletClient.ts\nimport { shallow } from \"zustand/shallow\";\nfunction watchWalletClient({ chainId }, callback) {\n  const config2 = getConfig();\n  const handleChange = async ({ chainId: chainId_ }) => {\n    if (chainId && chainId_ && chainId !== chainId_)\n      return;\n    const walletClient = await getWalletClient({ chainId });\n    if (!getConfig().connector)\n      return callback(null);\n    return callback(walletClient);\n  };\n  const unsubscribe = config2.subscribe(\n    ({ data, connector }) => ({\n      account: data?.account,\n      chainId: data?.chain?.id,\n      connector\n    }),\n    handleChange,\n    {\n      equalityFn: shallow\n    }\n  );\n  return unsubscribe;\n}\n\n// src/actions/viem/watchWebSocketPublicClient.ts\nfunction watchWebSocketPublicClient(args, callback) {\n  const config2 = getConfig();\n  const handleChange = async () => callback(getWebSocketPublicClient(args));\n  const unsubscribe = config2.subscribe(\n    ({ webSocketPublicClient }) => webSocketPublicClient,\n    handleChange\n  );\n  return unsubscribe;\n}\n\n// src/actions/contracts/prepareWriteContract.ts\nasync function prepareWriteContract({\n  abi,\n  address,\n  args,\n  chainId,\n  functionName,\n  walletClient: walletClient_,\n  ...config2\n}) {\n  const publicClient = getPublicClient({ chainId });\n  const walletClient = walletClient_ ?? await getWalletClient({ chainId });\n  if (!walletClient)\n    throw new ConnectorNotFoundError();\n  if (chainId)\n    assertActiveChain({ chainId });\n  const {\n    account,\n    accessList,\n    blockNumber,\n    blockTag,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    value\n  } = getCallParameters(config2);\n  const { result, request } = await publicClient.simulateContract({\n    abi,\n    address,\n    functionName,\n    args,\n    account: account || walletClient.account,\n    accessList,\n    blockNumber,\n    blockTag,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    value\n  });\n  const minimizedAbi = abi.filter(\n    (abiItem) => \"name\" in abiItem && abiItem.name === functionName\n  );\n  return {\n    mode: \"prepared\",\n    request: {\n      ...request,\n      abi: minimizedAbi,\n      chainId\n    },\n    result\n  };\n}\n\n// src/actions/contracts/getContract.ts\nimport { getContract as getContract_ } from \"viem\";\nfunction getContract({\n  address,\n  abi,\n  chainId,\n  walletClient\n}) {\n  const publicClient = getPublicClient({ chainId });\n  return getContract_({\n    address,\n    abi,\n    publicClient,\n    walletClient\n  });\n}\n\n// src/actions/contracts/multicall.ts\nasync function multicall({\n  chainId,\n  contracts,\n  blockNumber,\n  blockTag,\n  ...args\n}) {\n  const publicClient = getPublicClient({ chainId });\n  if (!publicClient.chains)\n    throw new ConfigChainsNotFound();\n  if (chainId && publicClient.chain.id !== chainId)\n    throw new ChainNotConfiguredError({ chainId });\n  return publicClient.multicall({\n    allowFailure: args.allowFailure ?? true,\n    blockNumber,\n    blockTag,\n    contracts\n  });\n}\n\n// src/actions/contracts/readContract.ts\nasync function readContract({\n  address,\n  account,\n  chainId,\n  abi,\n  args,\n  functionName,\n  blockNumber,\n  blockTag\n}) {\n  const publicClient = getPublicClient({ chainId });\n  return publicClient.readContract({\n    abi,\n    address,\n    account,\n    functionName,\n    args,\n    blockNumber,\n    blockTag\n  });\n}\n\n// src/actions/contracts/readContracts.ts\nimport { ContractFunctionExecutionError as ContractFunctionExecutionError2 } from \"viem\";\nasync function readContracts({\n  contracts,\n  blockNumber,\n  blockTag,\n  ...args\n}) {\n  const { allowFailure = true } = args;\n  try {\n    const publicClient = getPublicClient();\n    const contractsByChainId = contracts.reduce((contracts2, contract, index) => {\n      const chainId = contract.chainId ?? publicClient.chain.id;\n      return {\n        ...contracts2,\n        [chainId]: [...contracts2[chainId] || [], { contract, index }]\n      };\n    }, {});\n    const promises = () => Object.entries(contractsByChainId).map(\n      ([chainId, contracts2]) => multicall({\n        allowFailure,\n        chainId: parseInt(chainId),\n        contracts: contracts2.map(\n          ({ contract }) => contract\n        ),\n        blockNumber,\n        blockTag\n      })\n    );\n    const multicallResults = (await Promise.all(promises())).flat();\n    const resultIndexes = Object.values(contractsByChainId).flatMap(\n      (contracts2) => contracts2.map(({ index }) => index)\n    );\n    return multicallResults.reduce((results, result, index) => {\n      if (results)\n        results[resultIndexes[index]] = result;\n      return results;\n    }, []);\n  } catch (err) {\n    if (err instanceof ContractFunctionExecutionError2)\n      throw err;\n    const promises = () => contracts.map(\n      (contract) => readContract({ ...contract, blockNumber, blockTag })\n    );\n    if (allowFailure)\n      return (await Promise.allSettled(promises())).map((result) => {\n        if (result.status === \"fulfilled\")\n          return { result: result.value, status: \"success\" };\n        return { error: result.reason, result: void 0, status: \"failure\" };\n      });\n    return await Promise.all(promises());\n  }\n}\n\n// src/actions/contracts/watchContractEvent.ts\nimport { shallow as shallow2 } from \"zustand/shallow\";\nfunction watchContractEvent({\n  address,\n  abi,\n  chainId,\n  eventName\n}, callback) {\n  let unwatch;\n  const watchEvent = async () => {\n    if (unwatch)\n      unwatch();\n    const publicClient = getWebSocketPublicClient({ chainId }) || getPublicClient({ chainId });\n    unwatch = publicClient.watchContractEvent({\n      address,\n      abi,\n      eventName,\n      onLogs: callback\n    });\n  };\n  watchEvent();\n  const config2 = getConfig();\n  const unsubscribe = config2.subscribe(\n    ({ publicClient, webSocketPublicClient }) => ({\n      publicClient,\n      webSocketPublicClient\n    }),\n    watchEvent,\n    { equalityFn: shallow2 }\n  );\n  return () => {\n    unwatch?.();\n    unsubscribe();\n  };\n}\n\n// src/actions/network-status/watchBlockNumber.ts\nimport { shallow as shallow3 } from \"zustand/shallow\";\nfunction watchBlockNumber(args, callback) {\n  let unwatch;\n  const createListener = (publicClient) => {\n    if (unwatch)\n      unwatch();\n    unwatch = publicClient.watchBlockNumber({\n      onBlockNumber: callback,\n      emitOnBegin: true,\n      poll: true\n    });\n  };\n  const publicClient_ = getWebSocketPublicClient({ chainId: args.chainId }) ?? getPublicClient({ chainId: args.chainId });\n  if (args.listen)\n    createListener(publicClient_);\n  const config2 = getConfig();\n  const unsubscribe = config2.subscribe(\n    ({ publicClient, webSocketPublicClient }) => ({\n      publicClient,\n      webSocketPublicClient\n    }),\n    async ({ publicClient, webSocketPublicClient }) => {\n      const publicClient_2 = webSocketPublicClient ?? publicClient;\n      if (args.listen && !args.chainId && publicClient_2) {\n        createListener(publicClient_2);\n      }\n    },\n    {\n      equalityFn: shallow3\n    }\n  );\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/actions/contracts/watchMulticall.ts\nfunction watchMulticall(args, callback) {\n  const config2 = getConfig();\n  const handleChange = async () => callback(await multicall(args));\n  const unwatch = args.listenToBlock ? watchBlockNumber({ listen: true }, handleChange) : void 0;\n  const unsubscribe = config2.subscribe(\n    ({ publicClient }) => publicClient,\n    handleChange\n  );\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/actions/contracts/watchReadContract.ts\nfunction watchReadContract(args, callback) {\n  const config2 = getConfig();\n  const handleChange = async () => callback(await readContract(args));\n  const unwatch = args.listenToBlock ? watchBlockNumber({ listen: true }, handleChange) : void 0;\n  const unsubscribe = config2.subscribe(\n    ({ publicClient }) => publicClient,\n    handleChange\n  );\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/actions/contracts/watchReadContracts.ts\nfunction watchReadContracts(args, callback) {\n  const config2 = getConfig();\n  const handleChange = async () => callback(await readContracts(args));\n  const unwatch = args.listenToBlock ? watchBlockNumber({ listen: true }, handleChange) : void 0;\n  const unsubscribe = config2.subscribe(\n    ({ publicClient }) => publicClient,\n    handleChange\n  );\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/actions/contracts/writeContract.ts\nasync function writeContract(config2) {\n  const walletClient = await getWalletClient({ chainId: config2.chainId });\n  if (!walletClient)\n    throw new ConnectorNotFoundError();\n  if (config2.chainId)\n    assertActiveChain({ chainId: config2.chainId });\n  let request;\n  if (config2.mode === \"prepared\") {\n    request = config2.request;\n  } else {\n    const { chainId: _, mode: __, ...args } = config2;\n    const res = await prepareWriteContract(args);\n    request = res.request;\n  }\n  const hash = await walletClient.writeContract({\n    ...request,\n    chain: null\n  });\n  return { hash };\n}\n\n// src/actions/accounts/fetchBalance.ts\nasync function fetchBalance({\n  address,\n  chainId,\n  formatUnits: unit,\n  token\n}) {\n  const config2 = getConfig();\n  const publicClient = getPublicClient({ chainId });\n  if (token) {\n    const fetchContractBalance = async ({ abi }) => {\n      const erc20Config = { abi, address: token, chainId };\n      const [value2, decimals, symbol] = await readContracts({\n        allowFailure: false,\n        contracts: [\n          {\n            ...erc20Config,\n            functionName: \"balanceOf\",\n            args: [address]\n          },\n          { ...erc20Config, functionName: \"decimals\" },\n          { ...erc20Config, functionName: \"symbol\" }\n        ]\n      });\n      return {\n        decimals,\n        formatted: formatUnits2(value2 ?? \"0\", getUnit(unit ?? decimals)),\n        symbol,\n        value: value2\n      };\n    };\n    try {\n      return await fetchContractBalance({ abi: erc20ABI });\n    } catch (err) {\n      if (err instanceof ContractFunctionExecutionError3) {\n        const { symbol, ...rest } = await fetchContractBalance({\n          abi: erc20ABI_bytes32\n        });\n        return {\n          symbol: hexToString2(trim2(symbol, { dir: \"right\" })),\n          ...rest\n        };\n      }\n      throw err;\n    }\n  }\n  const chains = [\n    ...config2.publicClient.chains || [],\n    ...config2.chains ?? []\n  ];\n  const value = await publicClient.getBalance({ address });\n  const chain = chains.find((x) => x.id === publicClient.chain.id);\n  return {\n    decimals: chain?.nativeCurrency.decimals ?? 18,\n    formatted: formatUnits2(value ?? \"0\", getUnit(unit ?? 18)),\n    symbol: chain?.nativeCurrency.symbol ?? \"ETH\",\n    value\n  };\n}\n\n// src/actions/accounts/getAccount.ts\nfunction getAccount() {\n  const { data, connector, status } = getConfig();\n  switch (status) {\n    case \"connected\":\n      return {\n        address: data?.account,\n        connector,\n        isConnected: true,\n        isConnecting: false,\n        isDisconnected: false,\n        isReconnecting: false,\n        status\n      };\n    case \"reconnecting\":\n      return {\n        address: data?.account,\n        connector,\n        isConnected: !!data?.account,\n        isConnecting: false,\n        isDisconnected: false,\n        isReconnecting: true,\n        status\n      };\n    case \"connecting\":\n      return {\n        address: data?.account,\n        connector,\n        isConnected: false,\n        isConnecting: true,\n        isDisconnected: false,\n        isReconnecting: false,\n        status\n      };\n    case \"disconnected\":\n      return {\n        address: void 0,\n        connector: void 0,\n        isConnected: false,\n        isConnecting: false,\n        isDisconnected: true,\n        isReconnecting: false,\n        status\n      };\n  }\n}\n\n// src/actions/accounts/getNetwork.ts\nfunction getNetwork() {\n  const config2 = getConfig();\n  const chainId = config2.data?.chain?.id;\n  const activeChains = config2.chains ?? [];\n  const activeChain = [\n    ...config2.publicClient?.chains || [],\n    ...activeChains\n  ].find((x) => x.id === chainId) ?? {\n    id: chainId,\n    name: `Chain ${chainId}`,\n    network: `${chainId}`,\n    nativeCurrency: { name: \"Ether\", decimals: 18, symbol: \"ETH\" },\n    rpcUrls: {\n      default: { http: [\"\"] },\n      public: { http: [\"\"] }\n    }\n  };\n  return {\n    chain: chainId ? {\n      ...activeChain,\n      ...config2.data?.chain,\n      id: chainId\n    } : void 0,\n    chains: activeChains\n  };\n}\n\n// src/actions/accounts/signMessage.ts\nasync function signMessage(args) {\n  const walletClient = await getWalletClient();\n  if (!walletClient)\n    throw new ConnectorNotFoundError();\n  return await walletClient.signMessage({\n    message: args.message\n  });\n}\n\n// src/actions/accounts/signTypedData.ts\nasync function signTypedData({\n  domain,\n  message,\n  primaryType,\n  types\n}) {\n  const walletClient = await getWalletClient();\n  if (!walletClient)\n    throw new ConnectorNotFoundError();\n  const { chainId } = domain;\n  if (chainId)\n    assertActiveChain({ chainId });\n  return walletClient.signTypedData({\n    message,\n    primaryType,\n    types,\n    domain\n  });\n}\n\n// src/actions/accounts/switchNetwork.ts\nasync function switchNetwork({\n  chainId\n}) {\n  const { connector } = getConfig();\n  if (!connector)\n    throw new ConnectorNotFoundError();\n  if (!connector.switchChain)\n    throw new SwitchChainNotSupportedError({\n      connector\n    });\n  return connector.switchChain(chainId);\n}\n\n// src/actions/accounts/watchAccount.ts\nimport { shallow as shallow4 } from \"zustand/shallow\";\nfunction watchAccount(callback, { selector = (x) => x } = {}) {\n  const config2 = getConfig();\n  const handleChange = () => callback(getAccount());\n  const unsubscribe = config2.subscribe(\n    ({ data, connector, status }) => selector({\n      address: data?.account,\n      connector,\n      status\n    }),\n    handleChange,\n    {\n      equalityFn: shallow4\n    }\n  );\n  return unsubscribe;\n}\n\n// src/actions/accounts/watchNetwork.ts\nimport { shallow as shallow5 } from \"zustand/shallow\";\nfunction watchNetwork(callback, { selector = (x) => x } = {}) {\n  const config2 = getConfig();\n  const handleChange = () => callback(getNetwork());\n  const unsubscribe = config2.subscribe(\n    ({ data, chains }) => selector({ chainId: data?.chain?.id, chains }),\n    handleChange,\n    {\n      equalityFn: shallow5\n    }\n  );\n  return unsubscribe;\n}\n\n// src/actions/ens/fetchEnsAddress.ts\nimport { getAddress } from \"viem\";\nimport { normalize } from \"viem/ens\";\nasync function fetchEnsAddress({\n  chainId,\n  name\n}) {\n  const publicClient = getPublicClient({ chainId });\n  const address = await publicClient.getEnsAddress({\n    name: normalize(name)\n  });\n  try {\n    if (address === \"0x0000000000000000000000000000000000000000\")\n      return null;\n    return address ? getAddress(address) : null;\n  } catch (_error) {\n    return null;\n  }\n}\n\n// src/actions/ens/fetchEnsAvatar.ts\nimport { normalize as normalize2 } from \"viem/ens\";\nasync function fetchEnsAvatar({\n  name,\n  chainId\n}) {\n  const publicClient = getPublicClient({ chainId });\n  const avatar = await publicClient.getEnsAvatar({ name: normalize2(name) });\n  return avatar;\n}\n\n// src/actions/ens/fetchEnsName.ts\nimport { getAddress as getAddress2 } from \"viem\";\nasync function fetchEnsName({\n  address,\n  chainId\n}) {\n  const publicClient = getPublicClient({ chainId });\n  return publicClient.getEnsName({\n    address: getAddress2(address)\n  });\n}\n\n// src/actions/ens/fetchEnsResolver.ts\nimport { normalize as normalize3 } from \"viem/ens\";\nasync function fetchEnsResolver({\n  chainId,\n  name\n}) {\n  const publicClient = getPublicClient({ chainId });\n  const resolver = await publicClient.getEnsResolver({ name: normalize3(name) });\n  return resolver;\n}\n\n// src/actions/network-status/fetchBlockNumber.ts\nasync function fetchBlockNumber({\n  chainId\n} = {}) {\n  const publicClient = getPublicClient({ chainId });\n  const blockNumber = await publicClient.getBlockNumber();\n  return blockNumber;\n}\n\n// src/actions/network-status/fetchFeeData.ts\nimport { formatUnits as formatUnits3, parseGwei } from \"viem\";\nasync function fetchFeeData({\n  chainId,\n  formatUnits: units = \"gwei\"\n} = {}) {\n  const publicClient = getPublicClient({ chainId });\n  const block = await publicClient.getBlock();\n  let gasPrice = null;\n  try {\n    gasPrice = await publicClient.getGasPrice();\n  } catch {\n  }\n  let lastBaseFeePerGas = null;\n  let maxFeePerGas = null;\n  let maxPriorityFeePerGas = null;\n  if (block?.baseFeePerGas) {\n    lastBaseFeePerGas = block.baseFeePerGas;\n    maxPriorityFeePerGas = parseGwei(\"1\");\n    maxFeePerGas = block.baseFeePerGas * 2n + maxPriorityFeePerGas;\n  }\n  const unit = getUnit(units);\n  const formatted = {\n    gasPrice: gasPrice ? formatUnits3(gasPrice, unit) : null,\n    maxFeePerGas: maxFeePerGas ? formatUnits3(maxFeePerGas, unit) : null,\n    maxPriorityFeePerGas: maxPriorityFeePerGas ? formatUnits3(maxPriorityFeePerGas, unit) : null\n  };\n  return {\n    lastBaseFeePerGas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    formatted\n  };\n}\n\n// src/actions/transactions/fetchTransaction.ts\nasync function fetchTransaction({\n  chainId,\n  hash\n}) {\n  const publicClient = getPublicClient({ chainId });\n  return publicClient.getTransaction({ hash });\n}\n\n// src/actions/transactions/prepareSendTransaction.ts\nimport { isAddress } from \"viem\";\nasync function prepareSendTransaction({\n  accessList,\n  account,\n  chainId,\n  data,\n  gas: gas_,\n  gasPrice,\n  maxFeePerGas,\n  maxPriorityFeePerGas,\n  nonce,\n  to: to_,\n  value,\n  walletClient: walletClient_\n}) {\n  const publicClient = getPublicClient({ chainId });\n  const walletClient = walletClient_ ?? await getWalletClient({ chainId });\n  if (!walletClient)\n    throw new ConnectorNotFoundError();\n  if (chainId)\n    assertActiveChain({ chainId });\n  const to = (to_ && !isAddress(to_) ? await fetchEnsAddress({ name: to_ }) : to_) || void 0;\n  if (to && !isAddress(to))\n    throw new Error(\"Invalid address\");\n  const gas = typeof gas_ === \"undefined\" ? await publicClient.estimateGas({\n    accessList,\n    account: walletClient.account,\n    data,\n    gas: gas_ ?? void 0,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    to,\n    value\n  }) : gas_ || void 0;\n  return {\n    accessList,\n    account,\n    data,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    mode: \"prepared\",\n    nonce,\n    to,\n    value,\n    ...chainId ? { chainId } : {}\n  };\n}\n\n// src/actions/transactions/sendTransaction.ts\nasync function sendTransaction({\n  accessList,\n  account,\n  chainId,\n  data,\n  gas,\n  gasPrice,\n  maxFeePerGas,\n  maxPriorityFeePerGas,\n  mode,\n  nonce,\n  to,\n  value\n}) {\n  const walletClient = await getWalletClient({ chainId });\n  if (!walletClient)\n    throw new ConnectorNotFoundError();\n  if (chainId)\n    assertActiveChain({ chainId });\n  let args;\n  if (mode === \"prepared\") {\n    args = {\n      account,\n      accessList,\n      chain: null,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value\n    };\n  } else {\n    args = await prepareSendTransaction({\n      accessList,\n      account,\n      chainId,\n      data,\n      gas: gas || null,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value\n    });\n  }\n  const hash = await walletClient.sendTransaction({ ...args, chain: null });\n  return { hash };\n}\n\n// src/actions/transactions/waitForTransaction.ts\nimport { hexToString as hexToString3 } from \"viem\";\nasync function waitForTransaction({\n  chainId,\n  confirmations = 1,\n  hash,\n  onReplaced,\n  timeout = 0\n}) {\n  const publicClient = getPublicClient({ chainId });\n  const receipt = await publicClient.waitForTransactionReceipt({\n    hash,\n    confirmations,\n    onReplaced,\n    timeout\n  });\n  if (receipt.status === \"reverted\") {\n    const txn = await publicClient.getTransaction({\n      hash: receipt.transactionHash\n    });\n    const code = await publicClient.call({\n      ...txn,\n      gasPrice: txn.type !== \"eip1559\" ? txn.gasPrice : void 0,\n      maxFeePerGas: txn.type === \"eip1559\" ? txn.maxFeePerGas : void 0,\n      maxPriorityFeePerGas: txn.type === \"eip1559\" ? txn.maxPriorityFeePerGas : void 0\n    });\n    const reason = hexToString3(`0x${code.substring(138)}`);\n    throw new Error(reason);\n  }\n  return receipt;\n}\n\n// src/actions/transactions/watchPendingTransactions.ts\nimport { shallow as shallow6 } from \"zustand/shallow\";\nfunction watchPendingTransactions(args, callback) {\n  let unwatch;\n  const createListener = (publicClient) => {\n    if (unwatch)\n      unwatch();\n    unwatch = publicClient.watchPendingTransactions({\n      onTransactions: callback,\n      poll: true\n    });\n  };\n  const publicClient_ = getWebSocketPublicClient({ chainId: args.chainId }) ?? getPublicClient({ chainId: args.chainId });\n  createListener(publicClient_);\n  const config2 = getConfig();\n  const unsubscribe = config2.subscribe(\n    ({ publicClient, webSocketPublicClient }) => ({\n      publicClient,\n      webSocketPublicClient\n    }),\n    async ({ publicClient, webSocketPublicClient }) => {\n      const publicClient_2 = webSocketPublicClient ?? publicClient;\n      if (!args.chainId && publicClient_2) {\n        createListener(publicClient_2);\n      }\n    },\n    {\n      equalityFn: shallow6\n    }\n  );\n  return () => {\n    unsubscribe();\n    unwatch?.();\n  };\n}\n\n// src/utils/assertActiveChain.ts\nfunction assertActiveChain({ chainId }) {\n  const { chain: activeChain, chains } = getNetwork();\n  const activeChainId = activeChain?.id;\n  if (activeChainId && chainId !== activeChainId) {\n    throw new ChainMismatchError({\n      activeChain: chains.find((x) => x.id === activeChainId)?.name ?? `Chain ${activeChainId}`,\n      targetChain: chains.find((x) => x.id === chainId)?.name ?? `Chain ${chainId}`\n    });\n  }\n}\n\nexport {\n  configureChains,\n  ChainMismatchError,\n  ChainNotConfiguredError,\n  ConnectorAlreadyConnectedError,\n  ConfigChainsNotFound,\n  SwitchChainNotSupportedError,\n  ConnectorNotFoundError,\n  deepEqual,\n  deserialize,\n  getCallParameters,\n  getSendTransactionParameters,\n  getUnit,\n  serialize,\n  noopStorage,\n  createStorage,\n  Config,\n  createConfig,\n  getConfig,\n  connect,\n  disconnect,\n  erc20ABI,\n  erc721ABI,\n  erc4626ABI,\n  fetchToken,\n  getPublicClient,\n  getWalletClient,\n  getWebSocketPublicClient,\n  watchPublicClient,\n  watchWalletClient,\n  watchWebSocketPublicClient,\n  prepareWriteContract,\n  getContract,\n  multicall,\n  readContract,\n  readContracts,\n  watchContractEvent,\n  watchBlockNumber,\n  watchMulticall,\n  watchReadContract,\n  watchReadContracts,\n  writeContract,\n  fetchBalance,\n  getAccount,\n  getNetwork,\n  signMessage,\n  signTypedData,\n  switchNetwork,\n  watchAccount,\n  watchNetwork,\n  fetchEnsAddress,\n  fetchEnsAvatar,\n  fetchEnsName,\n  fetchEnsResolver,\n  fetchBlockNumber,\n  fetchFeeData,\n  fetchTransaction,\n  prepareSendTransaction,\n  sendTransaction,\n  waitForTransaction,\n  watchPendingTransactions\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"/**\n * @description Picks out the keys from `value` that exist in the formatter.\n */\nexport function extract(value, _ref) {\n  let {\n    format\n  } = _ref;\n  if (!format) return {};\n  const keys = Object.keys(format({}));\n  return keys.reduce((data, key) => {\n    // rome-ignore lint/suspicious/noPrototypeBuiltins:\n    if (value?.hasOwnProperty(key)) {\n      data[key] = value[key];\n    }\n    return data;\n  }, {});\n}","map":{"version":3,"names":["extract","value","_ref","format","keys","Object","reduce","data","key","hasOwnProperty"],"sources":["/home/amarjeet/Amarjeet/realwareWeb3/metamask_sign/Dapp-Starter code/node_modules/viem/src/utils/formatters/extract.ts"],"sourcesContent":["import type { Formatter } from '../../types/formatter.js'\n\n/**\n * @description Picks out the keys from `value` that exist in the formatter.\n */\nexport function extract(\n  value: Record<string, unknown>,\n  { format }: { format?: Formatter['format'] },\n) {\n  if (!format) return {}\n  const keys = Object.keys(format({}))\n  return keys.reduce((data: Record<string, unknown>, key) => {\n    // rome-ignore lint/suspicious/noPrototypeBuiltins:\n    if (value?.hasOwnProperty(key)) {\n      data[key] = value[key]\n    }\n    return data\n  }, {})\n}\n"],"mappings":"AAEA;;;AAGA,OAAM,SAAUA,OAAOA,CACrBC,KAA8B,EAAAC,IAAA,EACc;EAAA,IAA5C;IAAEC;EAAM,CAAoC,GAAAD,IAAA;EAE5C,IAAI,CAACC,MAAM,EAAE,OAAO,EAAE;EACtB,MAAMC,IAAI,GAAGC,MAAM,CAACD,IAAI,CAACD,MAAM,CAAC,EAAE,CAAC,CAAC;EACpC,OAAOC,IAAI,CAACE,MAAM,CAAC,CAACC,IAA6B,EAAEC,GAAG,KAAI;IACxD;IACA,IAAIP,KAAK,EAAEQ,cAAc,CAACD,GAAG,CAAC,EAAE;MAC9BD,IAAI,CAACC,GAAG,CAAC,GAAGP,KAAK,CAACO,GAAG,CAAC;;IAExB,OAAOD,IAAI;EACb,CAAC,EAAE,EAAE,CAAC;AACR"},"metadata":{},"sourceType":"module","externalDependencies":[]}
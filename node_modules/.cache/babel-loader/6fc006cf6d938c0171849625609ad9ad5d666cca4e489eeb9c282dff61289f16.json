{"ast":null,"code":"\"use client\";\n\n// src/config.ts\nimport { createSyncStoragePersister } from \"@tanstack/query-sync-storage-persister\";\nimport { QueryClient } from \"@tanstack/react-query\";\nimport { persistQueryClient } from \"@tanstack/react-query-persist-client\";\nimport { createConfig as createCoreConfig, createStorage, noopStorage } from \"@wagmi/core\";\nfunction createConfig(_ref) {\n  let {\n    queryClient = new QueryClient({\n      defaultOptions: {\n        queries: {\n          cacheTime: 1e3 * 60 * 60 * 24,\n          networkMode: \"offlineFirst\",\n          refetchOnWindowFocus: false,\n          retry: 0\n        },\n        mutations: {\n          networkMode: \"offlineFirst\"\n        }\n      }\n    }),\n    storage = createStorage({\n      storage: typeof window !== \"undefined\" && window.localStorage ? window.localStorage : noopStorage\n    }),\n    persister = typeof window !== \"undefined\" ? createSyncStoragePersister({\n      key: \"cache\",\n      storage,\n      serialize: x => x,\n      deserialize: x => x\n    }) : void 0,\n    ...args\n  } = _ref;\n  const config = createCoreConfig({\n    ...args,\n    storage\n  });\n  if (persister) persistQueryClient({\n    queryClient,\n    persister,\n    dehydrateOptions: {\n      shouldDehydrateQuery: query => query.cacheTime !== 0 && query.queryKey[0].persist !== false\n    }\n  });\n  return Object.assign(config, {\n    queryClient\n  });\n}\n\n// src/context.ts\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport * as React from \"react\";\nvar Context = React.createContext(void 0);\nvar queryClientContext = React.createContext(void 0);\nfunction WagmiConfig(_ref2) {\n  let {\n    children,\n    config\n  } = _ref2;\n  return React.createElement(Context.Provider, {\n    children: React.createElement(QueryClientProvider, {\n      children,\n      client: config.queryClient,\n      context: queryClientContext\n    }),\n    value: config\n  });\n}\nfunction useConfig() {\n  const config = React.useContext(Context);\n  if (!config) throw new Error([\"`useConfig` must be used within `WagmiConfig`.\\n\", \"Read more: https://wagmi.sh/react/WagmiConfig\"].join(\"\\n\"));\n  return config;\n}\n\n// src/hooks/accounts/useAccount.ts\nimport { getAccount, watchAccount } from \"@wagmi/core\";\nimport * as React9 from \"react\";\n\n// src/hooks/utils/query/useBaseQuery.ts\nimport { notifyManager, useIsRestoring, useQueryClient, useQueryErrorResetBoundary } from \"@tanstack/react-query\";\nimport * as React2 from \"react\";\n\n// src/hooks/utils/useSyncExternalStore.ts\nimport * as pkg from \"use-sync-external-store/shim/index.js\";\nvar useSyncExternalStore2 = pkg.useSyncExternalStore;\n\n// src/hooks/utils/query/utils.ts\nfunction isQueryKey(value) {\n  return Array.isArray(value);\n}\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n  const ctor = o.constructor;\n  if (typeof ctor === \"undefined\") {\n    return true;\n  }\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n    return false;\n  }\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction parseQueryArgs(arg1, arg2, arg3) {\n  if (!isQueryKey(arg1)) {\n    return arg1;\n  }\n  if (typeof arg2 === \"function\") {\n    return {\n      ...arg3,\n      queryKey: arg1,\n      queryFn: arg2\n    };\n  }\n  return {\n    ...arg2,\n    queryKey: arg1\n  };\n}\nfunction queryKeyHashFn(queryKey17) {\n  return JSON.stringify(queryKey17, (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n    result[key] = val[key];\n    return result;\n  }, {}) : typeof val === \"bigint\" ? val.toString() : val);\n}\nfunction shouldThrowError(_useErrorBoundary, params) {\n  if (typeof _useErrorBoundary === \"function\") {\n    return _useErrorBoundary(...params);\n  }\n  return !!_useErrorBoundary;\n}\nfunction trackResult(result, observer) {\n  const trackedResult = {};\n  Object.keys(result).forEach(key => {\n    Object.defineProperty(trackedResult, key, {\n      configurable: false,\n      enumerable: true,\n      get: () => {\n        observer.trackedProps.add(key);\n        return result[key];\n      }\n    });\n  });\n  return trackedResult;\n}\n\n// src/hooks/utils/query/useBaseQuery.ts\nfunction useBaseQuery(options, Observer) {\n  const queryClient = useQueryClient({\n    context: options.context\n  });\n  const isRestoring = useIsRestoring();\n  const errorResetBoundary = useQueryErrorResetBoundary();\n  const defaultedOptions = queryClient.defaultQueryOptions({\n    ...options,\n    queryKeyHashFn\n  });\n  defaultedOptions._optimisticResults = isRestoring ? \"isRestoring\" : \"optimistic\";\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(defaultedOptions.onError);\n  }\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(defaultedOptions.onSuccess);\n  }\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(defaultedOptions.onSettled);\n  }\n  if (defaultedOptions.suspense) {\n    if (typeof defaultedOptions.staleTime !== \"number\") {\n      defaultedOptions.staleTime = 1e3;\n    }\n  }\n  if (defaultedOptions.suspense || defaultedOptions.useErrorBoundary) {\n    if (!errorResetBoundary.isReset()) {\n      defaultedOptions.retryOnMount = false;\n    }\n  }\n  const [observer] = React2.useState(() => new Observer(queryClient, defaultedOptions));\n  const result = observer.getOptimisticResult(defaultedOptions);\n  useSyncExternalStore2(React2.useCallback(onStoreChange => isRestoring ? () => void 0 : observer.subscribe(notifyManager.batchCalls(onStoreChange)), [observer, isRestoring]), () => observer.getCurrentResult(), () => observer.getCurrentResult());\n  React2.useEffect(() => {\n    errorResetBoundary.clearReset();\n  }, [errorResetBoundary]);\n  React2.useEffect(() => {\n    observer.setOptions(defaultedOptions, {\n      listeners: false\n    });\n  }, [defaultedOptions, observer]);\n  if (defaultedOptions.suspense && result.isLoading && result.isFetching && !isRestoring) {\n    throw observer.fetchOptimistic(defaultedOptions).then(_ref3 => {\n      let {\n        data\n      } = _ref3;\n      defaultedOptions.onSuccess?.(data);\n      defaultedOptions.onSettled?.(data, null);\n    }).catch(error => {\n      errorResetBoundary.clearReset();\n      defaultedOptions.onError?.(error);\n      defaultedOptions.onSettled?.(void 0, error);\n    });\n  }\n  if (result.isError && !errorResetBoundary.isReset() && !result.isFetching && shouldThrowError(defaultedOptions.useErrorBoundary, [result.error, observer.getCurrentQuery()])) {\n    throw result.error;\n  }\n  const status = result.status === \"loading\" && result.fetchStatus === \"idle\" ? \"idle\" : result.status;\n  const isIdle = status === \"idle\";\n  const isLoading = status === \"loading\" && result.fetchStatus === \"fetching\";\n  return {\n    ...result,\n    defaultedOptions,\n    isIdle,\n    isLoading,\n    observer,\n    status\n  };\n}\n\n// src/hooks/utils/query/useInfiniteQuery.ts\nimport { InfiniteQueryObserver } from \"@tanstack/react-query\";\nfunction useInfiniteQuery(arg1, arg2, arg3) {\n  const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  const baseQuery = useBaseQuery({\n    context: queryClientContext,\n    ...parsedOptions\n  }, InfiniteQueryObserver);\n  const result = {\n    data: baseQuery.data,\n    error: baseQuery.error,\n    fetchNextPage: baseQuery.fetchNextPage,\n    fetchStatus: baseQuery.fetchStatus,\n    hasNextPage: baseQuery.hasNextPage,\n    isError: baseQuery.isError,\n    isFetched: baseQuery.isFetched,\n    isFetchedAfterMount: baseQuery.isFetchedAfterMount,\n    isFetching: baseQuery.isFetching,\n    isFetchingNextPage: baseQuery.isFetchingNextPage,\n    isIdle: baseQuery.isIdle,\n    isLoading: baseQuery.isLoading,\n    isRefetching: baseQuery.isRefetching,\n    isSuccess: baseQuery.isSuccess,\n    refetch: baseQuery.refetch,\n    status: baseQuery.status,\n    internal: {\n      dataUpdatedAt: baseQuery.dataUpdatedAt,\n      errorUpdatedAt: baseQuery.errorUpdatedAt,\n      failureCount: baseQuery.failureCount,\n      isFetchedAfterMount: baseQuery.isFetchedAfterMount,\n      isLoadingError: baseQuery.isLoadingError,\n      isPaused: baseQuery.isPaused,\n      isPlaceholderData: baseQuery.isPlaceholderData,\n      isPreviousData: baseQuery.isPreviousData,\n      isRefetchError: baseQuery.isRefetchError,\n      isStale: baseQuery.isStale,\n      remove: baseQuery.remove\n    }\n  };\n  return !baseQuery.defaultedOptions.notifyOnChangeProps ? trackResult(result, baseQuery.observer) : result;\n}\n\n// src/hooks/utils/query/useMutation.ts\nimport { parseMutationArgs, useMutation as useMutation_ } from \"@tanstack/react-query\";\nfunction useMutation(arg1, arg2, arg3) {\n  const options = parseMutationArgs(arg1, arg2, arg3);\n  return useMutation_({\n    context: queryClientContext,\n    ...options\n  });\n}\n\n// src/hooks/utils/query/useQuery.ts\nimport { QueryObserver } from \"@tanstack/react-query\";\nfunction useQuery(arg1, arg2, arg3) {\n  const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  const baseQuery = useBaseQuery({\n    context: queryClientContext,\n    ...parsedOptions\n  }, QueryObserver);\n  const result = {\n    data: baseQuery.data,\n    error: baseQuery.error,\n    fetchStatus: baseQuery.fetchStatus,\n    isError: baseQuery.isError,\n    isFetched: baseQuery.isFetched,\n    isFetchedAfterMount: baseQuery.isFetchedAfterMount,\n    isFetching: baseQuery.isFetching,\n    isIdle: baseQuery.isIdle,\n    isLoading: baseQuery.isLoading,\n    isRefetching: baseQuery.isRefetching,\n    isSuccess: baseQuery.isSuccess,\n    refetch: baseQuery.refetch,\n    status: baseQuery.status,\n    internal: {\n      dataUpdatedAt: baseQuery.dataUpdatedAt,\n      errorUpdatedAt: baseQuery.errorUpdatedAt,\n      failureCount: baseQuery.failureCount,\n      isFetchedAfterMount: baseQuery.isFetchedAfterMount,\n      isLoadingError: baseQuery.isLoadingError,\n      isPaused: baseQuery.isPaused,\n      isPlaceholderData: baseQuery.isPlaceholderData,\n      isPreviousData: baseQuery.isPreviousData,\n      isRefetchError: baseQuery.isRefetchError,\n      isStale: baseQuery.isStale,\n      remove: baseQuery.remove\n    }\n  };\n  return !baseQuery.defaultedOptions.notifyOnChangeProps ? trackResult(result, baseQuery.observer) : result;\n}\n\n// src/hooks/utils/query/useQueryClient.ts\nimport { useQueryClient as useQueryClient_ } from \"@tanstack/react-query\";\nvar useQueryClient2 = () => useQueryClient_({\n  context: queryClientContext\n});\n\n// src/hooks/viem/usePublicClient.ts\nimport { getPublicClient, watchPublicClient } from \"@wagmi/core\";\nimport { useSyncExternalStoreWithSelector } from \"use-sync-external-store/shim/with-selector.js\";\nfunction usePublicClient() {\n  let {\n    chainId\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return useSyncExternalStoreWithSelector(cb => watchPublicClient({\n    chainId\n  }, cb), () => getPublicClient({\n    chainId\n  }), () => getPublicClient({\n    chainId\n  }), x => x, (a, b) => a.uid === b.uid);\n}\n\n// src/hooks/viem/useWalletClient.ts\nimport { getWalletClient, watchWalletClient } from \"@wagmi/core\";\nimport * as React3 from \"react\";\nfunction queryKey(_ref4) {\n  let {\n    chainId\n  } = _ref4;\n  return [{\n    entity: \"walletClient\",\n    chainId,\n    persist: false\n  }];\n}\nfunction queryFn(_ref5) {\n  let {\n    queryKey: [{\n      chainId\n    }]\n  } = _ref5;\n  return getWalletClient({\n    chainId\n  });\n}\nfunction useWalletClient() {\n  let {\n    chainId: chainId_,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    connector\n  } = useAccount();\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  const walletClientQuery = useQuery(queryKey({\n    chainId\n  }), queryFn, {\n    cacheTime: 0,\n    enabled: Boolean(connector),\n    staleTime: Infinity,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n  const queryClient = useQueryClient2();\n  React3.useEffect(() => {\n    const unwatch = watchWalletClient({\n      chainId\n    }, walletClient => {\n      if (walletClient) queryClient.invalidateQueries(queryKey({\n        chainId\n      }));else queryClient.removeQueries(queryKey({\n        chainId\n      }));\n    });\n    return unwatch;\n  }, [queryClient, chainId]);\n  return walletClientQuery;\n}\n\n// src/hooks/viem/useWebSocketPublicClient.ts\nimport { getWebSocketPublicClient, watchWebSocketPublicClient } from \"@wagmi/core\";\nimport { useSyncExternalStoreWithSelector as useSyncExternalStoreWithSelector2 } from \"use-sync-external-store/shim/with-selector.js\";\nfunction useWebSocketPublicClient() {\n  let {\n    chainId\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return useSyncExternalStoreWithSelector2(cb => watchWebSocketPublicClient({\n    chainId\n  }, cb), () => getWebSocketPublicClient({\n    chainId\n  }), () => getWebSocketPublicClient({\n    chainId\n  }), x => x, (a, b) => a?.uid === b?.uid);\n}\n\n// src/hooks/utils/useChainId.ts\nfunction useChainId() {\n  let {\n    chainId\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const publicClient = usePublicClient({\n    chainId\n  });\n  return publicClient.chain.id;\n}\n\n// src/hooks/utils/useForceUpdate.ts\nimport * as React4 from \"react\";\nfunction useForceUpdate() {\n  const [, forceUpdate] = React4.useReducer(x => x + 1, 0);\n  return forceUpdate;\n}\n\n// src/hooks/utils/useInvalidateOnBlock.ts\nimport * as React7 from \"react\";\n\n// src/hooks/network-status/useBlockNumber.ts\nimport { fetchBlockNumber } from \"@wagmi/core\";\nimport * as React5 from \"react\";\nfunction queryKey2(_ref6) {\n  let {\n    chainId,\n    scopeKey\n  } = _ref6;\n  return [{\n    entity: \"blockNumber\",\n    chainId,\n    scopeKey\n  }];\n}\nfunction queryFn2(_ref7) {\n  let {\n    queryKey: [{\n      chainId\n    }]\n  } = _ref7;\n  return fetchBlockNumber({\n    chainId\n  });\n}\nfunction useBlockNumber() {\n  let {\n    cacheTime = 0,\n    chainId: chainId_,\n    enabled = true,\n    scopeKey,\n    staleTime,\n    suspense,\n    watch = false,\n    onBlock,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  const publicClient = usePublicClient({\n    chainId\n  });\n  const webSocketPublicClient = useWebSocketPublicClient({\n    chainId\n  });\n  const queryClient = useQueryClient2();\n  React5.useEffect(() => {\n    if (!enabled) return;\n    if (!watch && !onBlock) return;\n    const publicClient_ = webSocketPublicClient ?? publicClient;\n    const unwatch = publicClient_.watchBlockNumber({\n      onBlockNumber: blockNumber => {\n        if (watch) queryClient.setQueryData(queryKey2({\n          chainId,\n          scopeKey\n        }), blockNumber);\n        if (onBlock) onBlock(blockNumber);\n      },\n      emitOnBegin: true\n    });\n    return unwatch;\n  }, [chainId, scopeKey, onBlock, publicClient, queryClient, watch, webSocketPublicClient, enabled]);\n  return useQuery(queryKey2({\n    scopeKey,\n    chainId\n  }), queryFn2, {\n    cacheTime,\n    enabled,\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\n// src/hooks/network-status/useFeeData.ts\nimport { fetchFeeData } from \"@wagmi/core\";\nimport * as React6 from \"react\";\nfunction queryKey3(_ref8) {\n  let {\n    chainId,\n    formatUnits,\n    scopeKey\n  } = _ref8;\n  return [{\n    entity: \"feeData\",\n    chainId,\n    formatUnits,\n    scopeKey\n  }];\n}\nfunction queryFn3(_ref9) {\n  let {\n    queryKey: [{\n      chainId,\n      formatUnits\n    }]\n  } = _ref9;\n  return fetchFeeData({\n    chainId,\n    formatUnits\n  });\n}\nfunction useFeeData() {\n  let {\n    cacheTime,\n    chainId: chainId_,\n    enabled = true,\n    formatUnits = \"gwei\",\n    scopeKey,\n    staleTime,\n    suspense,\n    watch,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  const queryKey_ = React6.useMemo(() => queryKey3({\n    chainId,\n    formatUnits,\n    scopeKey\n  }), [chainId, formatUnits, scopeKey]);\n  const feeDataQuery = useQuery(queryKey_, queryFn3, {\n    cacheTime,\n    enabled,\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n  useInvalidateOnBlock({\n    chainId,\n    enabled: Boolean(enabled && watch),\n    queryKey: queryKey_\n  });\n  return feeDataQuery;\n}\n\n// src/hooks/utils/useInvalidateOnBlock.ts\nfunction useInvalidateOnBlock(_ref10) {\n  let {\n    chainId,\n    enabled,\n    queryKey: queryKey17\n  } = _ref10;\n  const queryClient = useQueryClient2();\n  const onBlock = React7.useCallback(() => queryClient.invalidateQueries({\n    queryKey: queryKey17\n  }, {\n    cancelRefetch: false\n  }), [queryClient, queryKey17]);\n  useBlockNumber({\n    chainId,\n    enabled,\n    onBlock: enabled ? onBlock : void 0,\n    scopeKey: enabled ? void 0 : \"idle\"\n  });\n}\n\n// src/hooks/utils/useSyncExternalStoreWithTracked.ts\nimport { deepEqual } from \"@wagmi/core\";\nimport * as React8 from \"react\";\nimport { useSyncExternalStoreWithSelector as useSyncExternalStoreWithSelector3 } from \"use-sync-external-store/shim/with-selector.js\";\nvar isPlainObject2 = obj => typeof obj === \"object\" && !Array.isArray(obj);\nfunction useSyncExternalStoreWithTracked(subscribe, getSnapshot) {\n  let getServerSnapshot = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : getSnapshot;\n  let isEqual = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : deepEqual;\n  const trackedKeys = React8.useRef([]);\n  const result = useSyncExternalStoreWithSelector3(subscribe, getSnapshot, getServerSnapshot, x => x, (a, b) => {\n    if (isPlainObject2(a) && isPlainObject2(b) && trackedKeys.current.length) {\n      for (const key of trackedKeys.current) {\n        const equal = isEqual(a[key], b[key]);\n        if (!equal) return false;\n      }\n      return true;\n    }\n    return isEqual(a, b);\n  });\n  if (isPlainObject2(result)) {\n    const trackedResult = {\n      ...result\n    };\n    Object.defineProperties(trackedResult, Object.entries(trackedResult).reduce((res, _ref11) => {\n      let [key, value] = _ref11;\n      return {\n        ...res,\n        [key]: {\n          configurable: false,\n          enumerable: true,\n          get: () => {\n            if (!trackedKeys.current.includes(key)) {\n              trackedKeys.current.push(key);\n            }\n            return value;\n          }\n        }\n      };\n    }, {}));\n    return trackedResult;\n  }\n  return result;\n}\n\n// src/hooks/accounts/useAccount.ts\nfunction useAccount() {\n  let {\n    onConnect,\n    onDisconnect\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const config = useConfig();\n  const watchAccount_ = React9.useCallback(callback => watchAccount(callback), [config]);\n  const account = useSyncExternalStoreWithTracked(watchAccount_, getAccount);\n  const previousAccountRef = React9.useRef();\n  const previousAccount = previousAccountRef.current;\n  React9.useEffect(() => {\n    if (previousAccount?.status !== \"connected\" && account.status === \"connected\") {\n      onConnect?.({\n        address: account.address,\n        connector: account.connector,\n        isReconnected: previousAccount?.status === \"reconnecting\" || previousAccount?.status === void 0\n      });\n    }\n    if (previousAccount?.status === \"connected\" && account.status === \"disconnected\") {\n      onDisconnect?.();\n    }\n    previousAccountRef.current = account;\n  }, [onConnect, onDisconnect, previousAccount, account]);\n  return account;\n}\n\n// src/hooks/accounts/useBalance.ts\nimport { fetchBalance } from \"@wagmi/core\";\nimport * as React10 from \"react\";\nfunction queryKey4(_ref12) {\n  let {\n    address,\n    chainId,\n    formatUnits,\n    scopeKey,\n    token\n  } = _ref12;\n  return [{\n    entity: \"balance\",\n    address,\n    chainId,\n    formatUnits,\n    scopeKey,\n    token\n  }];\n}\nfunction queryFn4(_ref13) {\n  let {\n    queryKey: [{\n      address,\n      chainId,\n      formatUnits,\n      token\n    }]\n  } = _ref13;\n  if (!address) throw new Error(\"address is required\");\n  return fetchBalance({\n    address,\n    chainId,\n    formatUnits,\n    token\n  });\n}\nfunction useBalance() {\n  let {\n    address,\n    cacheTime,\n    chainId: chainId_,\n    enabled = true,\n    formatUnits,\n    scopeKey,\n    staleTime,\n    suspense,\n    token,\n    watch,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  const queryKey_ = React10.useMemo(() => queryKey4({\n    address,\n    chainId,\n    formatUnits,\n    scopeKey,\n    token\n  }), [address, chainId, formatUnits, scopeKey, token]);\n  const balanceQuery = useQuery(queryKey_, queryFn4, {\n    cacheTime,\n    enabled: Boolean(enabled && address),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n  useInvalidateOnBlock({\n    chainId,\n    enabled: Boolean(enabled && watch && address),\n    queryKey: queryKey_\n  });\n  return balanceQuery;\n}\n\n// src/hooks/accounts/useConnect.ts\nimport { connect } from \"@wagmi/core\";\nimport * as React11 from \"react\";\nvar mutationKey = args => [{\n  entity: \"connect\",\n  ...args\n}];\nvar mutationFn = args => {\n  const {\n    connector,\n    chainId\n  } = args;\n  if (!connector) throw new Error(\"connector is required\");\n  return connect({\n    connector,\n    chainId\n  });\n};\nfunction useConnect() {\n  let {\n    chainId,\n    connector,\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const config = useConfig();\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey({\n    connector,\n    chainId\n  }), mutationFn, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const connect2 = React11.useCallback(args => {\n    return mutate({\n      chainId: args?.chainId ?? chainId,\n      connector: args?.connector ?? connector\n    });\n  }, [chainId, connector, mutate]);\n  const connectAsync = React11.useCallback(args => {\n    return mutateAsync({\n      chainId: args?.chainId ?? chainId,\n      connector: args?.connector ?? connector\n    });\n  }, [chainId, connector, mutateAsync]);\n  return {\n    connect: connect2,\n    connectAsync,\n    connectors: config.connectors,\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    pendingConnector: variables?.connector,\n    reset,\n    status,\n    variables\n  };\n}\n\n// src/hooks/accounts/useDisconnect.ts\nimport { disconnect } from \"@wagmi/core\";\nvar mutationKey2 = [{\n  entity: \"disconnect\"\n}];\nvar mutationFn2 = () => disconnect();\nfunction useDisconnect() {\n  let {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate: disconnect2,\n    mutateAsync: disconnectAsync,\n    reset,\n    status\n  } = useMutation(mutationKey2, mutationFn2, {\n    ...(onError ? {\n      onError(error2, _variables, context) {\n        onError(error2, context);\n      }\n    } : {}),\n    onMutate,\n    ...(onSettled ? {\n      onSettled(_data, error2, _variables, context) {\n        onSettled(error2, context);\n      }\n    } : {}),\n    ...(onSuccess ? {\n      onSuccess(_data, _variables, context) {\n        onSuccess(context);\n      }\n    } : {})\n  });\n  return {\n    disconnect: disconnect2,\n    disconnectAsync,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    status\n  };\n}\n\n// src/hooks/accounts/useNetwork.ts\nimport { getNetwork, watchNetwork } from \"@wagmi/core\";\nimport { useCallback as useCallback5 } from \"react\";\nfunction useNetwork() {\n  const config = useConfig();\n  const watchNetwork_ = useCallback5(callback => watchNetwork(callback), [config]);\n  return useSyncExternalStoreWithTracked(watchNetwork_, getNetwork);\n}\n\n// src/hooks/accounts/useSignMessage.ts\nimport { signMessage } from \"@wagmi/core\";\nimport * as React12 from \"react\";\nvar mutationKey3 = args => [{\n  entity: \"signMessage\",\n  ...args\n}];\nvar mutationFn3 = args => {\n  const {\n    message\n  } = args;\n  if (!message) throw new Error(\"message is required\");\n  return signMessage({\n    message\n  });\n};\nfunction useSignMessage() {\n  let {\n    message,\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey3({\n    message\n  }), mutationFn3, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const signMessage2 = React12.useCallback(args => mutate(args || {\n    message\n  }), [message, mutate]);\n  const signMessageAsync = React12.useCallback(args => mutateAsync(args || {\n    message\n  }), [message, mutateAsync]);\n  return {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    signMessage: signMessage2,\n    signMessageAsync,\n    status,\n    variables\n  };\n}\n\n// src/hooks/accounts/useSignTypedData.ts\nimport { signTypedData } from \"@wagmi/core\";\nimport * as React13 from \"react\";\nfunction mutationKey4(_ref14) {\n  let {\n    domain,\n    types,\n    message,\n    primaryType\n  } = _ref14;\n  return [{\n    entity: \"signTypedData\",\n    domain,\n    types,\n    message,\n    primaryType\n  }];\n}\nfunction mutationFn4(args) {\n  const {\n    domain,\n    types,\n    primaryType,\n    message\n  } = args;\n  if (!domain) throw new Error(\"domain is required\");\n  if (!types) throw new Error(\"types is required\");\n  if (!primaryType) throw new Error(\"primaryType is required\");\n  if (!message) throw new Error(\"message is required\");\n  return signTypedData({\n    domain,\n    message,\n    primaryType,\n    types\n  });\n}\nfunction useSignTypedData() {\n  let {\n    domain,\n    types,\n    message,\n    primaryType,\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey4({\n    domain,\n    message,\n    primaryType,\n    types\n  }), mutationFn4, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const signTypedData2 = React13.useCallback(args => mutate({\n    domain: args?.domain ?? domain,\n    types: args?.types ?? types,\n    message: args?.message ?? message,\n    primaryType: args?.primaryType ?? primaryType\n  }), [domain, types, primaryType, message, mutate]);\n  const signTypedDataAsync = React13.useCallback(args => mutateAsync({\n    domain: args?.domain ?? domain,\n    types: args?.types ?? types,\n    message: args?.message ?? message,\n    primaryType: args?.primaryType ?? primaryType\n  }), [domain, types, primaryType, message, mutateAsync]);\n  return {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    signTypedData: signTypedData2,\n    signTypedDataAsync,\n    status,\n    variables\n  };\n}\n\n// src/hooks/accounts/useSwitchNetwork.ts\nimport { switchNetwork } from \"@wagmi/core\";\nimport * as React14 from \"react\";\nvar mutationKey5 = args => [{\n  entity: \"switchNetwork\",\n  ...args\n}];\nvar mutationFn5 = args => {\n  const {\n    chainId\n  } = args;\n  if (!chainId) throw new Error(\"chainId is required\");\n  return switchNetwork({\n    chainId\n  });\n};\nfunction useSwitchNetwork() {\n  let {\n    chainId,\n    throwForSwitchChainNotSupported,\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const config = useConfig();\n  const forceUpdate = useForceUpdate();\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey5({\n    chainId\n  }), mutationFn5, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const switchNetwork_ = React14.useCallback(chainId_ => mutate({\n    chainId: chainId_ ?? chainId\n  }), [chainId, mutate]);\n  const switchNetworkAsync_ = React14.useCallback(chainId_ => mutateAsync({\n    chainId: chainId_ ?? chainId\n  }), [chainId, mutateAsync]);\n  React14.useEffect(() => {\n    const unwatch = config.subscribe(_ref15 => {\n      let {\n        chains,\n        connector\n      } = _ref15;\n      return {\n        chains,\n        connector\n      };\n    }, forceUpdate);\n    return unwatch;\n  }, [config, forceUpdate]);\n  let switchNetwork2;\n  let switchNetworkAsync;\n  const supportsSwitchChain = !!config.connector?.switchChain;\n  if (throwForSwitchChainNotSupported || supportsSwitchChain) {\n    switchNetwork2 = switchNetwork_;\n    switchNetworkAsync = switchNetworkAsync_;\n  }\n  return {\n    chains: config.chains ?? [],\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    pendingChainId: variables?.chainId,\n    reset,\n    status,\n    switchNetwork: switchNetwork2,\n    switchNetworkAsync,\n    variables\n  };\n}\n\n// src/hooks/contracts/useContractEvent.ts\nimport * as React15 from \"react\";\nfunction useContractEvent() {\n  let {\n    address,\n    chainId,\n    abi,\n    listener,\n    eventName\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const publicClient = usePublicClient({\n    chainId\n  });\n  const webSocketPublicClient = useWebSocketPublicClient({\n    chainId\n  });\n  const unwatch = React15.useRef();\n  React15.useEffect(() => {\n    if (!abi || !address || !eventName) return;\n    const publicClient_ = webSocketPublicClient || publicClient;\n    unwatch.current = publicClient_.watchContractEvent({\n      abi,\n      address,\n      eventName,\n      onLogs: listener\n    });\n    return unwatch.current;\n  }, [abi, address, eventName, publicClient.uid, webSocketPublicClient?.uid]);\n  return unwatch.current;\n}\n\n// src/hooks/contracts/useContractInfiniteReads.ts\nimport { replaceEqualDeep } from \"@tanstack/react-query\";\nimport { deepEqual as deepEqual2, readContracts } from \"@wagmi/core\";\nimport * as React16 from \"react\";\nfunction queryKey5(_ref16) {\n  let {\n    allowFailure,\n    blockNumber,\n    blockTag,\n    cacheKey,\n    scopeKey\n  } = _ref16;\n  return [{\n    entity: \"readContractsInfinite\",\n    allowFailure,\n    blockNumber,\n    blockTag,\n    cacheKey,\n    scopeKey\n  }];\n}\nfunction queryFn5(_ref17) {\n  let {\n    contracts\n  } = _ref17;\n  return _ref18 => {\n    let {\n      queryKey: [{\n        allowFailure,\n        blockNumber,\n        blockTag\n      }],\n      pageParam\n    } = _ref18;\n    return readContracts({\n      allowFailure,\n      blockNumber,\n      blockTag,\n      contracts: contracts(pageParam || void 0)\n    });\n  };\n}\nfunction useContractInfiniteReads(_ref19) {\n  let {\n    allowFailure,\n    blockNumber,\n    blockTag,\n    cacheKey,\n    cacheTime,\n    contracts,\n    enabled: enabled_ = true,\n    getNextPageParam,\n    isDataEqual,\n    keepPreviousData,\n    onError,\n    onSettled,\n    onSuccess,\n    scopeKey,\n    select,\n    staleTime,\n    structuralSharing = (oldData, newData) => deepEqual2(oldData, newData) ? oldData : replaceEqualDeep(oldData, newData),\n    suspense\n  } = _ref19;\n  const queryKey_ = React16.useMemo(() => queryKey5({\n    allowFailure,\n    blockNumber,\n    blockTag,\n    cacheKey,\n    scopeKey\n  }), [allowFailure, blockNumber, blockTag, cacheKey, scopeKey]);\n  const enabled = React16.useMemo(() => {\n    const enabled2 = Boolean(enabled_ && contracts);\n    return enabled2;\n  }, [contracts, enabled_]);\n  return useInfiniteQuery(queryKey_, queryFn5({\n    contracts\n  }), {\n    cacheTime,\n    enabled,\n    getNextPageParam,\n    isDataEqual,\n    keepPreviousData,\n    select,\n    staleTime,\n    structuralSharing,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\nfunction paginatedIndexesConfig(fn, _ref20) {\n  let {\n    perPage,\n    start,\n    direction\n  } = _ref20;\n  const contracts = function () {\n    let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return [...Array(perPage).keys()].map(index => {\n      return direction === \"increment\" ? start + index + page * perPage : start - index - page * perPage;\n    }).filter(index => index >= 0).flatMap(fn);\n  };\n  return {\n    contracts,\n    getNextPageParam(lastPage, pages) {\n      return lastPage?.length === perPage ? pages.length : void 0;\n    }\n  };\n}\n\n// src/hooks/contracts/useContractRead.ts\nimport { replaceEqualDeep as replaceEqualDeep2 } from \"@tanstack/react-query\";\nimport { deepEqual as deepEqual3, readContract } from \"@wagmi/core\";\nimport * as React17 from \"react\";\nfunction queryKey6(_ref21) {\n  let {\n    account,\n    address,\n    args,\n    blockNumber,\n    blockTag,\n    chainId,\n    functionName,\n    scopeKey\n  } = _ref21;\n  return [{\n    entity: \"readContract\",\n    account,\n    address,\n    args,\n    blockNumber,\n    blockTag,\n    chainId,\n    functionName,\n    scopeKey\n  }];\n}\nfunction queryFn6(_ref22) {\n  let {\n    abi\n  } = _ref22;\n  return async _ref23 => {\n    let {\n      queryKey: [{\n        account,\n        address,\n        args,\n        blockNumber,\n        blockTag,\n        chainId,\n        functionName\n      }]\n    } = _ref23;\n    if (!abi) throw new Error(\"abi is required\");\n    if (!address) throw new Error(\"address is required\");\n    return (await readContract({\n      account,\n      address,\n      args,\n      blockNumber,\n      blockTag,\n      chainId,\n      abi,\n      functionName\n    })) ?? null;\n  };\n}\nfunction useContractRead() {\n  let {\n    abi,\n    address,\n    account,\n    args,\n    blockNumber: blockNumberOverride,\n    blockTag,\n    cacheOnBlock = false,\n    cacheTime,\n    chainId: chainId_,\n    enabled: enabled_ = true,\n    functionName,\n    isDataEqual,\n    keepPreviousData,\n    onError,\n    onSettled,\n    onSuccess,\n    scopeKey,\n    select,\n    staleTime,\n    structuralSharing = (oldData, newData) => deepEqual3(oldData, newData) ? oldData : replaceEqualDeep2(oldData, newData),\n    suspense,\n    watch\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  const {\n    data: blockNumber_\n  } = useBlockNumber({\n    chainId,\n    enabled: watch || cacheOnBlock,\n    scopeKey: watch || cacheOnBlock ? void 0 : \"idle\",\n    watch\n  });\n  const blockNumber = blockNumberOverride ?? blockNumber_;\n  const queryKey_ = React17.useMemo(() => queryKey6({\n    account,\n    address,\n    args,\n    blockNumber: cacheOnBlock ? blockNumber : void 0,\n    blockTag,\n    chainId,\n    functionName,\n    scopeKey\n  }), [account, address, args, blockNumber, blockTag, cacheOnBlock, chainId, functionName, scopeKey]);\n  const enabled = React17.useMemo(() => {\n    let enabled2 = Boolean(enabled_ && abi && address && functionName);\n    if (cacheOnBlock) enabled2 = Boolean(enabled2 && blockNumber);\n    return enabled2;\n  }, [abi, address, blockNumber, cacheOnBlock, enabled_, functionName]);\n  useInvalidateOnBlock({\n    chainId,\n    enabled: Boolean(enabled && watch && !cacheOnBlock),\n    queryKey: queryKey_\n  });\n  return useQuery(queryKey_, queryFn6({\n    abi\n  }), {\n    cacheTime,\n    enabled,\n    isDataEqual,\n    keepPreviousData,\n    select,\n    staleTime,\n    structuralSharing,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\n// src/hooks/contracts/useContractReads.ts\nimport { replaceEqualDeep as replaceEqualDeep3 } from \"@tanstack/react-query\";\nimport { deepEqual as deepEqual4, readContracts as readContracts2 } from \"@wagmi/core\";\nimport * as React18 from \"react\";\nfunction queryKey7(_ref24) {\n  let {\n    allowFailure,\n    blockNumber,\n    blockTag,\n    chainId,\n    contracts,\n    scopeKey\n  } = _ref24;\n  return [{\n    entity: \"readContracts\",\n    allowFailure,\n    blockNumber,\n    blockTag,\n    chainId,\n    scopeKey,\n    contracts: (contracts ?? []).map(_ref25 => {\n      let {\n        address,\n        args,\n        chainId: chainId2,\n        functionName\n      } = _ref25;\n      return {\n        address,\n        args,\n        chainId: chainId2,\n        functionName\n      };\n    })\n  }];\n}\nfunction queryFn7(_ref26) {\n  let {\n    abis\n  } = _ref26;\n  return _ref27 => {\n    let {\n      queryKey: [{\n        allowFailure,\n        blockNumber,\n        blockTag,\n        contracts: contracts_\n      }]\n    } = _ref27;\n    const contracts = contracts_.map((contract, i) => ({\n      ...contract,\n      abi: abis[i]\n    }));\n    return readContracts2({\n      allowFailure,\n      contracts,\n      blockNumber,\n      blockTag\n    });\n  };\n}\nfunction useContractReads() {\n  let {\n    allowFailure: allowFailure_,\n    blockNumber: blockNumberOverride,\n    blockTag,\n    cacheOnBlock = false,\n    cacheTime,\n    contracts,\n    enabled: enabled_ = true,\n    isDataEqual,\n    keepPreviousData,\n    onError,\n    onSettled,\n    onSuccess,\n    scopeKey,\n    select,\n    staleTime,\n    structuralSharing = (oldData, newData) => deepEqual4(oldData, newData) ? oldData : replaceEqualDeep3(oldData, newData),\n    suspense,\n    watch\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const allowFailure = allowFailure_ ?? true;\n  const {\n    data: blockNumber_\n  } = useBlockNumber({\n    enabled: watch || cacheOnBlock,\n    watch\n  });\n  const chainId = useChainId();\n  const blockNumber = blockNumberOverride ?? blockNumber_;\n  const queryKey_ = React18.useMemo(() => queryKey7({\n    allowFailure,\n    blockNumber: cacheOnBlock ? blockNumber : void 0,\n    blockTag,\n    chainId,\n    contracts,\n    scopeKey\n  }), [allowFailure, blockNumber, blockTag, cacheOnBlock, chainId, scopeKey, contracts]);\n  const enabled = React18.useMemo(() => {\n    let enabled2 = Boolean(enabled_ && contracts?.every(x => x.abi && x.address && x.functionName));\n    if (cacheOnBlock) enabled2 = Boolean(enabled2 && blockNumber);\n    return enabled2;\n  }, [blockNumber, cacheOnBlock, contracts, enabled_]);\n  useInvalidateOnBlock({\n    enabled: Boolean(enabled && watch && !cacheOnBlock),\n    queryKey: queryKey_\n  });\n  const abis = (contracts ?? []).map(_ref28 => {\n    let {\n      abi\n    } = _ref28;\n    return abi;\n  });\n  return useQuery(queryKey_, queryFn7({\n    abis\n  }), {\n    cacheTime,\n    enabled,\n    isDataEqual,\n    keepPreviousData,\n    staleTime,\n    select,\n    structuralSharing,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\n// src/hooks/contracts/useContractWrite.ts\nimport { writeContract } from \"@wagmi/core\";\nimport { getSendTransactionParameters } from \"@wagmi/core/internal\";\nimport * as React19 from \"react\";\nfunction mutationKey6(_ref29) {\n  let {\n    address,\n    abi,\n    functionName,\n    ...config\n  } = _ref29;\n  const {\n    args,\n    accessList,\n    account,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    request,\n    value\n  } = config;\n  return [{\n    entity: \"writeContract\",\n    address,\n    args,\n    abi,\n    accessList,\n    account,\n    functionName,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    request,\n    value\n  }];\n}\nfunction mutationFn6(config) {\n  if (config.mode === \"prepared\") {\n    if (!config.request) throw new Error(\"request is required\");\n    return writeContract({\n      mode: \"prepared\",\n      request: config.request\n    });\n  }\n  if (!config.address) throw new Error(\"address is required\");\n  if (!config.abi) throw new Error(\"abi is required\");\n  if (!config.functionName) throw new Error(\"functionName is required\");\n  return writeContract({\n    address: config.address,\n    args: config.args,\n    chainId: config.chainId,\n    abi: config.abi,\n    functionName: config.functionName,\n    accessList: config.accessList,\n    account: config.account,\n    gas: config.gas,\n    gasPrice: config.gasPrice,\n    maxFeePerGas: config.maxFeePerGas,\n    maxPriorityFeePerGas: config.maxPriorityFeePerGas,\n    nonce: config.nonce,\n    value: config.value\n  });\n}\nfunction useContractWrite(config) {\n  const {\n    address,\n    abi,\n    args,\n    chainId,\n    functionName,\n    mode,\n    request\n  } = config;\n  const {\n    accessList,\n    account,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    value\n  } = getSendTransactionParameters(config);\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey6({\n    address,\n    abi,\n    functionName,\n    chainId,\n    mode,\n    args,\n    accessList,\n    account,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    request,\n    value\n  }), mutationFn6, {\n    onError: config.onError,\n    onMutate: config.onMutate,\n    onSettled: config.onSettled,\n    onSuccess: config.onSuccess\n  });\n  const write = React19.useMemo(() => {\n    if (config.mode === \"prepared\") {\n      if (!request) return void 0;\n      return () => mutate({\n        mode: \"prepared\",\n        request: config.request,\n        chainId: config.chainId\n      });\n    }\n    return overrideConfig => mutate({\n      address,\n      args,\n      abi,\n      functionName,\n      chainId,\n      accessList,\n      account,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      value,\n      ...overrideConfig\n    });\n  }, [accessList, account, abi, address, args, chainId, config.chainId, config.mode, config.request, functionName, gas, gasPrice, maxFeePerGas, maxPriorityFeePerGas, mutate, nonce, request, value]);\n  const writeAsync = React19.useMemo(() => {\n    if (config.mode === \"prepared\") {\n      if (!request) return void 0;\n      return () => mutateAsync({\n        mode: \"prepared\",\n        request: config.request\n      });\n    }\n    return overrideConfig => mutateAsync({\n      address,\n      args,\n      abi,\n      chainId,\n      functionName,\n      accessList,\n      account,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      value,\n      ...overrideConfig\n    });\n  }, [accessList, account, abi, address, args, chainId, config.mode, config.request, functionName, gas, gasPrice, maxFeePerGas, maxPriorityFeePerGas, mutateAsync, nonce, request, value]);\n  return {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    status,\n    variables,\n    write,\n    writeAsync\n  };\n}\n\n// src/hooks/contracts/usePrepareContractWrite.ts\nimport { prepareWriteContract } from \"@wagmi/core\";\nimport { getCallParameters } from \"@wagmi/core/internal\";\nfunction queryKey8(_ref30) {\n  let {\n    accessList,\n    account,\n    activeChainId,\n    args,\n    address,\n    blockNumber,\n    blockTag,\n    chainId,\n    functionName,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    scopeKey,\n    walletClientAddress,\n    value\n  } = _ref30;\n  return [{\n    entity: \"prepareContractTransaction\",\n    accessList,\n    account,\n    activeChainId,\n    address,\n    args,\n    blockNumber,\n    blockTag,\n    chainId,\n    functionName,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    scopeKey,\n    walletClientAddress,\n    value\n  }];\n}\nfunction queryFn8(_ref31) {\n  let {\n    abi,\n    walletClient\n  } = _ref31;\n  return _ref32 => {\n    let {\n      queryKey: [{\n        accessList,\n        account,\n        args,\n        address,\n        blockNumber,\n        blockTag,\n        chainId,\n        functionName,\n        gas,\n        gasPrice,\n        maxFeePerGas,\n        maxPriorityFeePerGas,\n        nonce,\n        value\n      }]\n    } = _ref32;\n    if (!abi) throw new Error(\"abi is required\");\n    if (!address) throw new Error(\"address is required\");\n    if (!functionName) throw new Error(\"functionName is required\");\n    return prepareWriteContract({\n      abi,\n      accessList,\n      account,\n      args,\n      address,\n      blockNumber,\n      blockTag,\n      chainId,\n      functionName,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      walletClient,\n      value\n    });\n  };\n}\nfunction usePrepareContractWrite() {\n  let {\n    address,\n    abi,\n    functionName,\n    chainId,\n    args,\n    cacheTime,\n    enabled = true,\n    scopeKey,\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess,\n    ...config\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    chain: activeChain\n  } = useNetwork();\n  const {\n    data: walletClient\n  } = useWalletClient({\n    chainId\n  });\n  const {\n    accessList,\n    account,\n    blockNumber,\n    blockTag,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    value\n  } = getCallParameters(config);\n  const prepareContractWriteQuery = useQuery(queryKey8({\n    accessList,\n    account,\n    activeChainId: activeChain?.id,\n    address,\n    args,\n    blockNumber,\n    blockTag,\n    chainId,\n    functionName,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    scopeKey,\n    walletClientAddress: walletClient?.account.address,\n    value\n  }), queryFn8({\n    abi,\n    walletClient\n  }), {\n    cacheTime,\n    enabled: Boolean(enabled && abi && address && functionName && walletClient),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n  return Object.assign(prepareContractWriteQuery, {\n    config: {\n      chainId,\n      mode: \"prepared\",\n      request: void 0,\n      ...prepareContractWriteQuery.data\n    }\n  });\n}\n\n// src/hooks/contracts/useToken.ts\nimport { fetchToken } from \"@wagmi/core\";\nfunction queryKey9(_ref33) {\n  let {\n    address,\n    chainId,\n    formatUnits,\n    scopeKey\n  } = _ref33;\n  return [{\n    entity: \"token\",\n    address,\n    chainId,\n    formatUnits,\n    scopeKey\n  }];\n}\nfunction queryFn9(_ref34) {\n  let {\n    queryKey: [{\n      address,\n      chainId,\n      formatUnits\n    }]\n  } = _ref34;\n  if (!address) throw new Error(\"address is required\");\n  return fetchToken({\n    address,\n    chainId,\n    formatUnits\n  });\n}\nfunction useToken() {\n  let {\n    address,\n    chainId: chainId_,\n    formatUnits = \"ether\",\n    cacheTime,\n    enabled = true,\n    scopeKey,\n    staleTime = 1e3 * 60 * 60 * 24,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  return useQuery(queryKey9({\n    address,\n    chainId,\n    formatUnits,\n    scopeKey\n  }), queryFn9, {\n    cacheTime,\n    enabled: Boolean(enabled && address),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\n// src/hooks/ens/useEnsAddress.ts\nimport { fetchEnsAddress } from \"@wagmi/core\";\nfunction queryKey10(_ref35) {\n  let {\n    chainId,\n    name,\n    scopeKey\n  } = _ref35;\n  return [{\n    entity: \"ensAddress\",\n    chainId,\n    name,\n    scopeKey\n  }];\n}\nfunction queryFn10(_ref36) {\n  let {\n    queryKey: [{\n      chainId,\n      name\n    }]\n  } = _ref36;\n  if (!name) throw new Error(\"name is required\");\n  return fetchEnsAddress({\n    chainId,\n    name\n  });\n}\nfunction useEnsAddress() {\n  let {\n    cacheTime,\n    chainId: chainId_,\n    enabled = true,\n    name,\n    scopeKey,\n    staleTime = 1e3 * 60 * 60 * 24,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  return useQuery(queryKey10({\n    chainId,\n    name,\n    scopeKey\n  }), queryFn10, {\n    cacheTime,\n    enabled: Boolean(enabled && chainId && name),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\n// src/hooks/ens/useEnsAvatar.ts\nimport { fetchEnsAvatar } from \"@wagmi/core\";\nfunction queryKey11(_ref37) {\n  let {\n    name,\n    chainId,\n    scopeKey\n  } = _ref37;\n  return [{\n    entity: \"ensAvatar\",\n    name,\n    chainId,\n    scopeKey\n  }];\n}\nfunction queryFn11(_ref38) {\n  let {\n    queryKey: [{\n      name,\n      chainId\n    }]\n  } = _ref38;\n  if (!name) throw new Error(\"name is required\");\n  return fetchEnsAvatar({\n    name,\n    chainId\n  });\n}\nfunction useEnsAvatar() {\n  let {\n    cacheTime,\n    chainId: chainId_,\n    enabled = true,\n    name,\n    scopeKey,\n    staleTime = 1e3 * 60 * 60 * 24,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  return useQuery(queryKey11({\n    name,\n    chainId,\n    scopeKey\n  }), queryFn11, {\n    cacheTime,\n    enabled: Boolean(enabled && name && chainId),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\n// src/hooks/ens/useEnsName.ts\nimport { fetchEnsName } from \"@wagmi/core\";\nfunction queryKey12(_ref39) {\n  let {\n    address,\n    chainId,\n    scopeKey\n  } = _ref39;\n  return [{\n    entity: \"ensName\",\n    address,\n    chainId,\n    scopeKey\n  }];\n}\nfunction queryFn12(_ref40) {\n  let {\n    queryKey: [{\n      address,\n      chainId\n    }]\n  } = _ref40;\n  if (!address) throw new Error(\"address is required\");\n  return fetchEnsName({\n    address,\n    chainId\n  });\n}\nfunction useEnsName() {\n  let {\n    address,\n    cacheTime,\n    chainId: chainId_,\n    enabled = true,\n    scopeKey,\n    staleTime = 1e3 * 60 * 60 * 24,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  return useQuery(queryKey12({\n    address,\n    chainId,\n    scopeKey\n  }), queryFn12, {\n    cacheTime,\n    enabled: Boolean(enabled && address && chainId),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\n// src/hooks/ens/useEnsResolver.ts\nimport { fetchEnsResolver } from \"@wagmi/core\";\nfunction queryKey13(_ref41) {\n  let {\n    chainId,\n    name,\n    scopeKey\n  } = _ref41;\n  return [{\n    entity: \"ensResolver\",\n    chainId,\n    name,\n    scopeKey,\n    persist: false\n  }];\n}\nfunction queryFn13(_ref42) {\n  let {\n    queryKey: [{\n      chainId,\n      name\n    }]\n  } = _ref42;\n  if (!name) throw new Error(\"name is required\");\n  return fetchEnsResolver({\n    chainId,\n    name\n  });\n}\nfunction useEnsResolver() {\n  let {\n    chainId: chainId_,\n    name,\n    enabled = true,\n    scopeKey,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  return useQuery(queryKey13({\n    chainId,\n    name,\n    scopeKey\n  }), queryFn13, {\n    cacheTime: 0,\n    enabled: Boolean(enabled && chainId && name),\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\n// src/hooks/transactions/usePrepareSendTransaction.ts\nimport { prepareSendTransaction } from \"@wagmi/core\";\nfunction queryKey14(_ref43) {\n  let {\n    accessList,\n    account,\n    activeChainId,\n    chainId,\n    data,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    to,\n    value,\n    scopeKey,\n    walletClientAddress\n  } = _ref43;\n  return [{\n    entity: \"prepareSendTransaction\",\n    activeChainId,\n    accessList,\n    account,\n    chainId,\n    data,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    to,\n    value,\n    scopeKey,\n    walletClientAddress\n  }];\n}\nfunction queryFn14(_ref44) {\n  let {\n    walletClient\n  } = _ref44;\n  return _ref45 => {\n    let {\n      queryKey: [{\n        accessList,\n        account,\n        chainId,\n        data,\n        gas,\n        gasPrice,\n        maxFeePerGas,\n        maxPriorityFeePerGas,\n        nonce,\n        to,\n        value\n      }]\n    } = _ref45;\n    if (!to) throw new Error(\"to is required\");\n    return prepareSendTransaction({\n      accessList,\n      account,\n      chainId,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n      walletClient\n    });\n  };\n}\nfunction usePrepareSendTransaction() {\n  let {\n    accessList,\n    account,\n    chainId,\n    cacheTime,\n    data,\n    enabled = true,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    scopeKey,\n    staleTime,\n    suspense,\n    to,\n    value,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    chain: activeChain\n  } = useNetwork();\n  const {\n    data: walletClient\n  } = useWalletClient({\n    chainId\n  });\n  const prepareSendTransactionQuery = useQuery(queryKey14({\n    accessList,\n    activeChainId: activeChain?.id,\n    account,\n    chainId,\n    data,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    scopeKey,\n    to,\n    value,\n    walletClientAddress: walletClient?.account.address\n  }), queryFn14({\n    walletClient\n  }), {\n    cacheTime,\n    enabled: Boolean(enabled && walletClient && to),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n  return Object.assign(prepareSendTransactionQuery, {\n    config: {\n      mode: \"prepared\",\n      ...(prepareSendTransactionQuery.isSuccess ? prepareSendTransactionQuery.data : void 0)\n    }\n  });\n}\n\n// src/hooks/transactions/useSendTransaction.ts\nimport { sendTransaction } from \"@wagmi/core\";\nimport * as React20 from \"react\";\nvar mutationKey7 = args => [{\n  entity: \"sendTransaction\",\n  ...args\n}];\nvar mutationFn7 = _ref46 => {\n  let {\n    accessList,\n    account,\n    chainId,\n    data,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    mode,\n    nonce,\n    to,\n    value\n  } = _ref46;\n  if (!to) throw new Error(\"to is required.\");\n  return sendTransaction({\n    accessList,\n    account,\n    chainId,\n    data,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    mode,\n    nonce,\n    to,\n    value\n  });\n};\nfunction useSendTransaction() {\n  let {\n    accessList,\n    account,\n    chainId,\n    data: data_,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    mode,\n    nonce,\n    to,\n    value,\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey7({\n    accessList,\n    account,\n    chainId,\n    data: data_,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    mode,\n    nonce,\n    to,\n    value\n  }), mutationFn7, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const sendTransaction2 = React20.useCallback(args => mutate({\n    chainId,\n    mode,\n    ...(args || {\n      accessList,\n      account,\n      chainId,\n      data: data_,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      mode,\n      nonce,\n      value,\n      to\n    })\n  }), [accessList, account, chainId, data_, gas, gasPrice, maxFeePerGas, maxPriorityFeePerGas, mode, mutate, nonce, to, value]);\n  const sendTransactionAsync = React20.useCallback(args => mutateAsync({\n    chainId,\n    mode,\n    ...(args || {\n      accessList,\n      account,\n      chainId,\n      data: data_,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      mode,\n      nonce,\n      value,\n      to\n    })\n  }), [accessList, account, chainId, data_, gas, gasPrice, maxFeePerGas, maxPriorityFeePerGas, mode, mutateAsync, nonce, to, value]);\n  return {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    sendTransaction: mode === \"prepared\" && !to ? void 0 : sendTransaction2,\n    sendTransactionAsync: mode === \"prepared\" && !to ? void 0 : sendTransactionAsync,\n    status,\n    variables\n  };\n}\n\n// src/hooks/transactions/useTransaction.ts\nimport { fetchTransaction } from \"@wagmi/core\";\nfunction queryKey15(_ref47) {\n  let {\n    chainId,\n    hash,\n    scopeKey\n  } = _ref47;\n  return [{\n    entity: \"transaction\",\n    chainId,\n    hash,\n    scopeKey\n  }];\n}\nfunction queryFn15(_ref48) {\n  let {\n    queryKey: [{\n      chainId,\n      hash\n    }]\n  } = _ref48;\n  if (!hash) throw new Error(\"hash is required\");\n  return fetchTransaction({\n    chainId,\n    hash\n  });\n}\nfunction useTransaction() {\n  let {\n    cacheTime = 0,\n    chainId: chainId_,\n    enabled = true,\n    hash,\n    scopeKey,\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  return useQuery(queryKey15({\n    chainId,\n    hash,\n    scopeKey\n  }), queryFn15, {\n    cacheTime,\n    enabled: Boolean(enabled && hash),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\n// src/hooks/transactions/useWaitForTransaction.ts\nimport { waitForTransaction } from \"@wagmi/core\";\nfunction queryKey16(_ref49) {\n  let {\n    confirmations,\n    chainId,\n    hash,\n    scopeKey,\n    timeout\n  } = _ref49;\n  return [{\n    entity: \"waitForTransaction\",\n    confirmations,\n    chainId,\n    hash,\n    scopeKey,\n    timeout\n  }];\n}\nfunction queryFn16(_ref50) {\n  let {\n    onReplaced\n  } = _ref50;\n  return _ref51 => {\n    let {\n      queryKey: [{\n        chainId,\n        confirmations,\n        hash,\n        timeout\n      }]\n    } = _ref51;\n    if (!hash) throw new Error(\"hash is required\");\n    return waitForTransaction({\n      chainId,\n      confirmations,\n      hash,\n      onReplaced,\n      timeout\n    });\n  };\n}\nfunction useWaitForTransaction() {\n  let {\n    chainId: chainId_,\n    confirmations,\n    hash,\n    timeout,\n    cacheTime,\n    enabled = true,\n    scopeKey,\n    staleTime,\n    suspense,\n    onError,\n    onReplaced,\n    onSettled,\n    onSuccess\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  return useQuery(queryKey16({\n    chainId,\n    confirmations,\n    hash,\n    scopeKey,\n    timeout\n  }), queryFn16({\n    onReplaced\n  }), {\n    cacheTime,\n    enabled: Boolean(enabled && hash),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\n// src/hooks/transactions/useWatchPendingTransactions.ts\nimport * as React21 from \"react\";\nfunction useWatchPendingTransactions(_ref52) {\n  let {\n    chainId: chainId_,\n    enabled = true,\n    listener\n  } = _ref52;\n  const chainId = useChainId({\n    chainId: chainId_\n  });\n  const publicClient = usePublicClient({\n    chainId\n  });\n  const webSocketPublicClient = useWebSocketPublicClient({\n    chainId\n  });\n  React21.useEffect(() => {\n    if (!enabled) return;\n    const publicClient_ = webSocketPublicClient ?? publicClient;\n    return publicClient_.watchPendingTransactions({\n      onTransactions: listener\n    });\n  }, [enabled, listener, publicClient, webSocketPublicClient]);\n}\n\n// src/index.ts\nimport { ChainMismatchError, ChainNotConfiguredError, Connector, ConnectorAlreadyConnectedError, ConnectorNotFoundError, ConfigChainsNotFound, SwitchChainNotSupportedError, configureChains, createStorage as createStorage2, deepEqual as deepEqual5, deserialize, erc20ABI, erc721ABI, erc4626ABI, mainnet, readContracts as readContracts3, sepolia, serialize } from \"@wagmi/core\";\nexport { ChainMismatchError, ChainNotConfiguredError, ConfigChainsNotFound, Connector, ConnectorAlreadyConnectedError, ConnectorNotFoundError, Context, SwitchChainNotSupportedError, WagmiConfig, configureChains, createConfig, createStorage2 as createStorage, deepEqual5 as deepEqual, deserialize, erc20ABI, erc4626ABI, erc721ABI, mainnet, paginatedIndexesConfig, readContracts3 as readContracts, sepolia, serialize, useAccount, useBalance, useBlockNumber, useChainId, useConfig, useConnect, useContractEvent, useContractInfiniteReads, useContractRead, useContractReads, useContractWrite, useDisconnect, useEnsAddress, useEnsAvatar, useEnsName, useEnsResolver, useFeeData, useInfiniteQuery, useMutation, useNetwork, usePrepareContractWrite, usePrepareSendTransaction, usePublicClient, useQuery, useQueryClient2 as useQueryClient, useSendTransaction, useSignMessage, useSignTypedData, useSwitchNetwork, useToken, useTransaction, useWaitForTransaction, useWalletClient, useWatchPendingTransactions, useWebSocketPublicClient };","map":{"version":3,"names":["createSyncStoragePersister","QueryClient","persistQueryClient","createConfig","createCoreConfig","createStorage","noopStorage","_ref","queryClient","defaultOptions","queries","cacheTime","networkMode","refetchOnWindowFocus","retry","mutations","storage","window","localStorage","persister","key","serialize","x","deserialize","args","config","dehydrateOptions","shouldDehydrateQuery","query","queryKey","persist","Object","assign","QueryClientProvider","React","Context","createContext","queryClientContext","WagmiConfig","_ref2","children","createElement","Provider","client","context","value","useConfig","useContext","Error","join","getAccount","watchAccount","React9","notifyManager","useIsRestoring","useQueryClient","useQueryErrorResetBoundary","React2","pkg","useSyncExternalStore2","useSyncExternalStore","isQueryKey","Array","isArray","isPlainObject","o","hasObjectPrototype","ctor","constructor","prot","prototype","hasOwnProperty","toString","call","parseQueryArgs","arg1","arg2","arg3","queryFn","queryKeyHashFn","queryKey17","JSON","stringify","_","val","keys","sort","reduce","result","shouldThrowError","_useErrorBoundary","params","trackResult","observer","trackedResult","forEach","defineProperty","configurable","enumerable","get","trackedProps","add","useBaseQuery","options","Observer","isRestoring","errorResetBoundary","defaultedOptions","defaultQueryOptions","_optimisticResults","onError","batchCalls","onSuccess","onSettled","suspense","staleTime","useErrorBoundary","isReset","retryOnMount","useState","getOptimisticResult","useCallback","onStoreChange","subscribe","getCurrentResult","useEffect","clearReset","setOptions","listeners","isLoading","isFetching","fetchOptimistic","then","_ref3","data","catch","error","isError","getCurrentQuery","status","fetchStatus","isIdle","InfiniteQueryObserver","useInfiniteQuery","parsedOptions","baseQuery","fetchNextPage","hasNextPage","isFetched","isFetchedAfterMount","isFetchingNextPage","isRefetching","isSuccess","refetch","internal","dataUpdatedAt","errorUpdatedAt","failureCount","isLoadingError","isPaused","isPlaceholderData","isPreviousData","isRefetchError","isStale","remove","notifyOnChangeProps","parseMutationArgs","useMutation","useMutation_","QueryObserver","useQuery","useQueryClient_","useQueryClient2","getPublicClient","watchPublicClient","useSyncExternalStoreWithSelector","usePublicClient","chainId","arguments","length","undefined","cb","a","b","uid","getWalletClient","watchWalletClient","React3","_ref4","entity","_ref5","useWalletClient","chainId_","connector","useAccount","useChainId","walletClientQuery","enabled","Boolean","Infinity","unwatch","walletClient","invalidateQueries","removeQueries","getWebSocketPublicClient","watchWebSocketPublicClient","useSyncExternalStoreWithSelector2","useWebSocketPublicClient","publicClient","chain","id","React4","useForceUpdate","forceUpdate","useReducer","React7","fetchBlockNumber","React5","queryKey2","_ref6","scopeKey","queryFn2","_ref7","useBlockNumber","watch","onBlock","webSocketPublicClient","publicClient_","watchBlockNumber","onBlockNumber","blockNumber","setQueryData","emitOnBegin","fetchFeeData","React6","queryKey3","_ref8","formatUnits","queryFn3","_ref9","useFeeData","queryKey_","useMemo","feeDataQuery","useInvalidateOnBlock","_ref10","cancelRefetch","deepEqual","React8","useSyncExternalStoreWithSelector3","isPlainObject2","obj","useSyncExternalStoreWithTracked","getSnapshot","getServerSnapshot","isEqual","trackedKeys","useRef","current","equal","defineProperties","entries","res","_ref11","includes","push","onConnect","onDisconnect","watchAccount_","callback","account","previousAccountRef","previousAccount","address","isReconnected","fetchBalance","React10","queryKey4","_ref12","token","queryFn4","_ref13","useBalance","balanceQuery","connect","React11","mutationKey","mutationFn","useConnect","onMutate","mutate","mutateAsync","reset","variables","connect2","connectAsync","connectors","pendingConnector","disconnect","mutationKey2","mutationFn2","useDisconnect","disconnect2","disconnectAsync","error2","_variables","_data","getNetwork","watchNetwork","useCallback5","useNetwork","watchNetwork_","signMessage","React12","mutationKey3","mutationFn3","message","useSignMessage","signMessage2","signMessageAsync","signTypedData","React13","mutationKey4","_ref14","domain","types","primaryType","mutationFn4","useSignTypedData","signTypedData2","signTypedDataAsync","switchNetwork","React14","mutationKey5","mutationFn5","useSwitchNetwork","throwForSwitchChainNotSupported","switchNetwork_","switchNetworkAsync_","_ref15","chains","switchNetwork2","switchNetworkAsync","supportsSwitchChain","switchChain","pendingChainId","React15","useContractEvent","abi","listener","eventName","watchContractEvent","onLogs","replaceEqualDeep","deepEqual2","readContracts","React16","queryKey5","_ref16","allowFailure","blockTag","cacheKey","queryFn5","_ref17","contracts","_ref18","pageParam","useContractInfiniteReads","_ref19","enabled_","getNextPageParam","isDataEqual","keepPreviousData","select","structuralSharing","oldData","newData","enabled2","paginatedIndexesConfig","fn","_ref20","perPage","start","direction","page","map","index","filter","flatMap","lastPage","pages","replaceEqualDeep2","deepEqual3","readContract","React17","queryKey6","_ref21","functionName","queryFn6","_ref22","_ref23","useContractRead","blockNumberOverride","cacheOnBlock","blockNumber_","replaceEqualDeep3","deepEqual4","readContracts2","React18","queryKey7","_ref24","_ref25","chainId2","queryFn7","_ref26","abis","_ref27","contracts_","contract","i","useContractReads","allowFailure_","every","_ref28","writeContract","getSendTransactionParameters","React19","mutationKey6","_ref29","accessList","gas","gasPrice","maxFeePerGas","maxPriorityFeePerGas","nonce","request","mutationFn6","mode","useContractWrite","write","overrideConfig","writeAsync","prepareWriteContract","getCallParameters","queryKey8","_ref30","activeChainId","walletClientAddress","queryFn8","_ref31","_ref32","usePrepareContractWrite","activeChain","prepareContractWriteQuery","fetchToken","queryKey9","_ref33","queryFn9","_ref34","useToken","fetchEnsAddress","queryKey10","_ref35","name","queryFn10","_ref36","useEnsAddress","fetchEnsAvatar","queryKey11","_ref37","queryFn11","_ref38","useEnsAvatar","fetchEnsName","queryKey12","_ref39","queryFn12","_ref40","useEnsName","fetchEnsResolver","queryKey13","_ref41","queryFn13","_ref42","useEnsResolver","prepareSendTransaction","queryKey14","_ref43","to","queryFn14","_ref44","_ref45","usePrepareSendTransaction","prepareSendTransactionQuery","sendTransaction","React20","mutationKey7","mutationFn7","_ref46","useSendTransaction","data_","sendTransaction2","sendTransactionAsync","fetchTransaction","queryKey15","_ref47","hash","queryFn15","_ref48","useTransaction","waitForTransaction","queryKey16","_ref49","confirmations","timeout","queryFn16","_ref50","onReplaced","_ref51","useWaitForTransaction","React21","useWatchPendingTransactions","_ref52","watchPendingTransactions","onTransactions","ChainMismatchError","ChainNotConfiguredError","Connector","ConnectorAlreadyConnectedError","ConnectorNotFoundError","ConfigChainsNotFound","SwitchChainNotSupportedError","configureChains","createStorage2","deepEqual5","erc20ABI","erc721ABI","erc4626ABI","mainnet","readContracts3","sepolia"],"sources":["/home/amarjeet/Amarjeet/realwareWeb3/metamask_sign/Dapp-Starter code/node_modules/wagmi/dist/index.js"],"sourcesContent":["\"use client\";\n\n// src/config.ts\nimport { createSyncStoragePersister } from \"@tanstack/query-sync-storage-persister\";\nimport { QueryClient } from \"@tanstack/react-query\";\nimport { persistQueryClient } from \"@tanstack/react-query-persist-client\";\nimport {\n  createConfig as createCoreConfig,\n  createStorage,\n  noopStorage\n} from \"@wagmi/core\";\nfunction createConfig({\n  queryClient = new QueryClient({\n    defaultOptions: {\n      queries: {\n        cacheTime: 1e3 * 60 * 60 * 24,\n        networkMode: \"offlineFirst\",\n        refetchOnWindowFocus: false,\n        retry: 0\n      },\n      mutations: {\n        networkMode: \"offlineFirst\"\n      }\n    }\n  }),\n  storage = createStorage({\n    storage: typeof window !== \"undefined\" && window.localStorage ? window.localStorage : noopStorage\n  }),\n  persister = typeof window !== \"undefined\" ? createSyncStoragePersister({\n    key: \"cache\",\n    storage,\n    serialize: (x) => x,\n    deserialize: (x) => x\n  }) : void 0,\n  ...args\n}) {\n  const config = createCoreConfig({\n    ...args,\n    storage\n  });\n  if (persister)\n    persistQueryClient({\n      queryClient,\n      persister,\n      dehydrateOptions: {\n        shouldDehydrateQuery: (query) => query.cacheTime !== 0 && query.queryKey[0].persist !== false\n      }\n    });\n  return Object.assign(config, { queryClient });\n}\n\n// src/context.ts\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport * as React from \"react\";\nvar Context = React.createContext(void 0);\nvar queryClientContext = React.createContext(\n  void 0\n);\nfunction WagmiConfig({\n  children,\n  config\n}) {\n  return React.createElement(Context.Provider, {\n    children: React.createElement(QueryClientProvider, {\n      children,\n      client: config.queryClient,\n      context: queryClientContext\n    }),\n    value: config\n  });\n}\nfunction useConfig() {\n  const config = React.useContext(Context);\n  if (!config)\n    throw new Error(\n      [\n        \"`useConfig` must be used within `WagmiConfig`.\\n\",\n        \"Read more: https://wagmi.sh/react/WagmiConfig\"\n      ].join(\"\\n\")\n    );\n  return config;\n}\n\n// src/hooks/accounts/useAccount.ts\nimport { getAccount, watchAccount } from \"@wagmi/core\";\nimport * as React9 from \"react\";\n\n// src/hooks/utils/query/useBaseQuery.ts\nimport {\n  notifyManager,\n  useIsRestoring,\n  useQueryClient,\n  useQueryErrorResetBoundary\n} from \"@tanstack/react-query\";\nimport * as React2 from \"react\";\n\n// src/hooks/utils/useSyncExternalStore.ts\nimport * as pkg from \"use-sync-external-store/shim/index.js\";\nvar useSyncExternalStore2 = pkg.useSyncExternalStore;\n\n// src/hooks/utils/query/utils.ts\nfunction isQueryKey(value) {\n  return Array.isArray(value);\n}\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n  const ctor = o.constructor;\n  if (typeof ctor === \"undefined\") {\n    return true;\n  }\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n    return false;\n  }\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction parseQueryArgs(arg1, arg2, arg3) {\n  if (!isQueryKey(arg1)) {\n    return arg1;\n  }\n  if (typeof arg2 === \"function\") {\n    return { ...arg3, queryKey: arg1, queryFn: arg2 };\n  }\n  return { ...arg2, queryKey: arg1 };\n}\nfunction queryKeyHashFn(queryKey17) {\n  return JSON.stringify(\n    queryKey17,\n    (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n      result[key] = val[key];\n      return result;\n    }, {}) : typeof val === \"bigint\" ? val.toString() : val\n  );\n}\nfunction shouldThrowError(_useErrorBoundary, params) {\n  if (typeof _useErrorBoundary === \"function\") {\n    return _useErrorBoundary(...params);\n  }\n  return !!_useErrorBoundary;\n}\nfunction trackResult(result, observer) {\n  const trackedResult = {};\n  Object.keys(result).forEach((key) => {\n    Object.defineProperty(trackedResult, key, {\n      configurable: false,\n      enumerable: true,\n      get: () => {\n        observer.trackedProps.add(key);\n        return result[key];\n      }\n    });\n  });\n  return trackedResult;\n}\n\n// src/hooks/utils/query/useBaseQuery.ts\nfunction useBaseQuery(options, Observer) {\n  const queryClient = useQueryClient({ context: options.context });\n  const isRestoring = useIsRestoring();\n  const errorResetBoundary = useQueryErrorResetBoundary();\n  const defaultedOptions = queryClient.defaultQueryOptions({\n    ...options,\n    queryKeyHashFn\n  });\n  defaultedOptions._optimisticResults = isRestoring ? \"isRestoring\" : \"optimistic\";\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(\n      defaultedOptions.onError\n    );\n  }\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(\n      defaultedOptions.onSuccess\n    );\n  }\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(\n      defaultedOptions.onSettled\n    );\n  }\n  if (defaultedOptions.suspense) {\n    if (typeof defaultedOptions.staleTime !== \"number\") {\n      defaultedOptions.staleTime = 1e3;\n    }\n  }\n  if (defaultedOptions.suspense || defaultedOptions.useErrorBoundary) {\n    if (!errorResetBoundary.isReset()) {\n      defaultedOptions.retryOnMount = false;\n    }\n  }\n  const [observer] = React2.useState(\n    () => new Observer(\n      queryClient,\n      defaultedOptions\n    )\n  );\n  const result = observer.getOptimisticResult(defaultedOptions);\n  useSyncExternalStore2(\n    React2.useCallback(\n      (onStoreChange) => isRestoring ? () => void 0 : observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer, isRestoring]\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult()\n  );\n  React2.useEffect(() => {\n    errorResetBoundary.clearReset();\n  }, [errorResetBoundary]);\n  React2.useEffect(() => {\n    observer.setOptions(defaultedOptions, { listeners: false });\n  }, [defaultedOptions, observer]);\n  if (defaultedOptions.suspense && result.isLoading && result.isFetching && !isRestoring) {\n    throw observer.fetchOptimistic(defaultedOptions).then(({ data }) => {\n      defaultedOptions.onSuccess?.(data);\n      defaultedOptions.onSettled?.(data, null);\n    }).catch((error) => {\n      errorResetBoundary.clearReset();\n      defaultedOptions.onError?.(error);\n      defaultedOptions.onSettled?.(void 0, error);\n    });\n  }\n  if (result.isError && !errorResetBoundary.isReset() && !result.isFetching && shouldThrowError(defaultedOptions.useErrorBoundary, [\n    result.error,\n    observer.getCurrentQuery()\n  ])) {\n    throw result.error;\n  }\n  const status = result.status === \"loading\" && result.fetchStatus === \"idle\" ? \"idle\" : result.status;\n  const isIdle = status === \"idle\";\n  const isLoading = status === \"loading\" && result.fetchStatus === \"fetching\";\n  return {\n    ...result,\n    defaultedOptions,\n    isIdle,\n    isLoading,\n    observer,\n    status\n  };\n}\n\n// src/hooks/utils/query/useInfiniteQuery.ts\nimport { InfiniteQueryObserver } from \"@tanstack/react-query\";\nfunction useInfiniteQuery(arg1, arg2, arg3) {\n  const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  const baseQuery = useBaseQuery(\n    { context: queryClientContext, ...parsedOptions },\n    InfiniteQueryObserver\n  );\n  const result = {\n    data: baseQuery.data,\n    error: baseQuery.error,\n    fetchNextPage: baseQuery.fetchNextPage,\n    fetchStatus: baseQuery.fetchStatus,\n    hasNextPage: baseQuery.hasNextPage,\n    isError: baseQuery.isError,\n    isFetched: baseQuery.isFetched,\n    isFetchedAfterMount: baseQuery.isFetchedAfterMount,\n    isFetching: baseQuery.isFetching,\n    isFetchingNextPage: baseQuery.isFetchingNextPage,\n    isIdle: baseQuery.isIdle,\n    isLoading: baseQuery.isLoading,\n    isRefetching: baseQuery.isRefetching,\n    isSuccess: baseQuery.isSuccess,\n    refetch: baseQuery.refetch,\n    status: baseQuery.status,\n    internal: {\n      dataUpdatedAt: baseQuery.dataUpdatedAt,\n      errorUpdatedAt: baseQuery.errorUpdatedAt,\n      failureCount: baseQuery.failureCount,\n      isFetchedAfterMount: baseQuery.isFetchedAfterMount,\n      isLoadingError: baseQuery.isLoadingError,\n      isPaused: baseQuery.isPaused,\n      isPlaceholderData: baseQuery.isPlaceholderData,\n      isPreviousData: baseQuery.isPreviousData,\n      isRefetchError: baseQuery.isRefetchError,\n      isStale: baseQuery.isStale,\n      remove: baseQuery.remove\n    }\n  };\n  return !baseQuery.defaultedOptions.notifyOnChangeProps ? trackResult(result, baseQuery.observer) : result;\n}\n\n// src/hooks/utils/query/useMutation.ts\nimport {\n  parseMutationArgs,\n  useMutation as useMutation_\n} from \"@tanstack/react-query\";\nfunction useMutation(arg1, arg2, arg3) {\n  const options = parseMutationArgs(arg1, arg2, arg3);\n  return useMutation_({ context: queryClientContext, ...options });\n}\n\n// src/hooks/utils/query/useQuery.ts\nimport { QueryObserver } from \"@tanstack/react-query\";\nfunction useQuery(arg1, arg2, arg3) {\n  const parsedOptions = parseQueryArgs(arg1, arg2, arg3);\n  const baseQuery = useBaseQuery({ context: queryClientContext, ...parsedOptions }, QueryObserver);\n  const result = {\n    data: baseQuery.data,\n    error: baseQuery.error,\n    fetchStatus: baseQuery.fetchStatus,\n    isError: baseQuery.isError,\n    isFetched: baseQuery.isFetched,\n    isFetchedAfterMount: baseQuery.isFetchedAfterMount,\n    isFetching: baseQuery.isFetching,\n    isIdle: baseQuery.isIdle,\n    isLoading: baseQuery.isLoading,\n    isRefetching: baseQuery.isRefetching,\n    isSuccess: baseQuery.isSuccess,\n    refetch: baseQuery.refetch,\n    status: baseQuery.status,\n    internal: {\n      dataUpdatedAt: baseQuery.dataUpdatedAt,\n      errorUpdatedAt: baseQuery.errorUpdatedAt,\n      failureCount: baseQuery.failureCount,\n      isFetchedAfterMount: baseQuery.isFetchedAfterMount,\n      isLoadingError: baseQuery.isLoadingError,\n      isPaused: baseQuery.isPaused,\n      isPlaceholderData: baseQuery.isPlaceholderData,\n      isPreviousData: baseQuery.isPreviousData,\n      isRefetchError: baseQuery.isRefetchError,\n      isStale: baseQuery.isStale,\n      remove: baseQuery.remove\n    }\n  };\n  return !baseQuery.defaultedOptions.notifyOnChangeProps ? trackResult(result, baseQuery.observer) : result;\n}\n\n// src/hooks/utils/query/useQueryClient.ts\nimport { useQueryClient as useQueryClient_ } from \"@tanstack/react-query\";\nvar useQueryClient2 = () => useQueryClient_({ context: queryClientContext });\n\n// src/hooks/viem/usePublicClient.ts\nimport { getPublicClient, watchPublicClient } from \"@wagmi/core\";\nimport { useSyncExternalStoreWithSelector } from \"use-sync-external-store/shim/with-selector.js\";\nfunction usePublicClient({\n  chainId\n} = {}) {\n  return useSyncExternalStoreWithSelector(\n    (cb) => watchPublicClient({ chainId }, cb),\n    () => getPublicClient({ chainId }),\n    () => getPublicClient({ chainId }),\n    (x) => x,\n    (a, b) => a.uid === b.uid\n  );\n}\n\n// src/hooks/viem/useWalletClient.ts\nimport { getWalletClient, watchWalletClient } from \"@wagmi/core\";\nimport * as React3 from \"react\";\nfunction queryKey({ chainId }) {\n  return [{ entity: \"walletClient\", chainId, persist: false }];\n}\nfunction queryFn({\n  queryKey: [{ chainId }]\n}) {\n  return getWalletClient({ chainId });\n}\nfunction useWalletClient({\n  chainId: chainId_,\n  suspense,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const { connector } = useAccount();\n  const chainId = useChainId({ chainId: chainId_ });\n  const walletClientQuery = useQuery(queryKey({ chainId }), queryFn, {\n    cacheTime: 0,\n    enabled: Boolean(connector),\n    staleTime: Infinity,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n  const queryClient = useQueryClient2();\n  React3.useEffect(() => {\n    const unwatch = watchWalletClient({ chainId }, (walletClient) => {\n      if (walletClient)\n        queryClient.invalidateQueries(queryKey({ chainId }));\n      else\n        queryClient.removeQueries(queryKey({ chainId }));\n    });\n    return unwatch;\n  }, [queryClient, chainId]);\n  return walletClientQuery;\n}\n\n// src/hooks/viem/useWebSocketPublicClient.ts\nimport {\n  getWebSocketPublicClient,\n  watchWebSocketPublicClient\n} from \"@wagmi/core\";\nimport { useSyncExternalStoreWithSelector as useSyncExternalStoreWithSelector2 } from \"use-sync-external-store/shim/with-selector.js\";\nfunction useWebSocketPublicClient({ chainId } = {}) {\n  return useSyncExternalStoreWithSelector2(\n    (cb) => watchWebSocketPublicClient({ chainId }, cb),\n    () => getWebSocketPublicClient({ chainId }),\n    () => getWebSocketPublicClient({ chainId }),\n    (x) => x,\n    (a, b) => a?.uid === b?.uid\n  );\n}\n\n// src/hooks/utils/useChainId.ts\nfunction useChainId({ chainId } = {}) {\n  const publicClient = usePublicClient({ chainId });\n  return publicClient.chain.id;\n}\n\n// src/hooks/utils/useForceUpdate.ts\nimport * as React4 from \"react\";\nfunction useForceUpdate() {\n  const [, forceUpdate] = React4.useReducer((x) => x + 1, 0);\n  return forceUpdate;\n}\n\n// src/hooks/utils/useInvalidateOnBlock.ts\nimport * as React7 from \"react\";\n\n// src/hooks/network-status/useBlockNumber.ts\nimport { fetchBlockNumber } from \"@wagmi/core\";\nimport * as React5 from \"react\";\nfunction queryKey2({ chainId, scopeKey }) {\n  return [{ entity: \"blockNumber\", chainId, scopeKey }];\n}\nfunction queryFn2({\n  queryKey: [{ chainId }]\n}) {\n  return fetchBlockNumber({ chainId });\n}\nfunction useBlockNumber({\n  cacheTime = 0,\n  chainId: chainId_,\n  enabled = true,\n  scopeKey,\n  staleTime,\n  suspense,\n  watch = false,\n  onBlock,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  const publicClient = usePublicClient({ chainId });\n  const webSocketPublicClient = useWebSocketPublicClient({ chainId });\n  const queryClient = useQueryClient2();\n  React5.useEffect(() => {\n    if (!enabled)\n      return;\n    if (!watch && !onBlock)\n      return;\n    const publicClient_ = webSocketPublicClient ?? publicClient;\n    const unwatch = publicClient_.watchBlockNumber({\n      onBlockNumber: (blockNumber) => {\n        if (watch)\n          queryClient.setQueryData(queryKey2({ chainId, scopeKey }), blockNumber);\n        if (onBlock)\n          onBlock(blockNumber);\n      },\n      emitOnBegin: true\n    });\n    return unwatch;\n  }, [\n    chainId,\n    scopeKey,\n    onBlock,\n    publicClient,\n    queryClient,\n    watch,\n    webSocketPublicClient,\n    enabled\n  ]);\n  return useQuery(queryKey2({ scopeKey, chainId }), queryFn2, {\n    cacheTime,\n    enabled,\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\n// src/hooks/network-status/useFeeData.ts\nimport { fetchFeeData } from \"@wagmi/core\";\nimport * as React6 from \"react\";\nfunction queryKey3({\n  chainId,\n  formatUnits,\n  scopeKey\n}) {\n  return [{ entity: \"feeData\", chainId, formatUnits, scopeKey }];\n}\nfunction queryFn3({\n  queryKey: [{ chainId, formatUnits }]\n}) {\n  return fetchFeeData({ chainId, formatUnits });\n}\nfunction useFeeData({\n  cacheTime,\n  chainId: chainId_,\n  enabled = true,\n  formatUnits = \"gwei\",\n  scopeKey,\n  staleTime,\n  suspense,\n  watch,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  const queryKey_ = React6.useMemo(\n    () => queryKey3({\n      chainId,\n      formatUnits,\n      scopeKey\n    }),\n    [chainId, formatUnits, scopeKey]\n  );\n  const feeDataQuery = useQuery(queryKey_, queryFn3, {\n    cacheTime,\n    enabled,\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n  useInvalidateOnBlock({\n    chainId,\n    enabled: Boolean(enabled && watch),\n    queryKey: queryKey_\n  });\n  return feeDataQuery;\n}\n\n// src/hooks/utils/useInvalidateOnBlock.ts\nfunction useInvalidateOnBlock({\n  chainId,\n  enabled,\n  queryKey: queryKey17\n}) {\n  const queryClient = useQueryClient2();\n  const onBlock = React7.useCallback(\n    () => queryClient.invalidateQueries({ queryKey: queryKey17 }, { cancelRefetch: false }),\n    [queryClient, queryKey17]\n  );\n  useBlockNumber({\n    chainId,\n    enabled,\n    onBlock: enabled ? onBlock : void 0,\n    scopeKey: enabled ? void 0 : \"idle\"\n  });\n}\n\n// src/hooks/utils/useSyncExternalStoreWithTracked.ts\nimport { deepEqual } from \"@wagmi/core\";\nimport * as React8 from \"react\";\nimport { useSyncExternalStoreWithSelector as useSyncExternalStoreWithSelector3 } from \"use-sync-external-store/shim/with-selector.js\";\nvar isPlainObject2 = (obj) => typeof obj === \"object\" && !Array.isArray(obj);\nfunction useSyncExternalStoreWithTracked(subscribe, getSnapshot, getServerSnapshot = getSnapshot, isEqual = deepEqual) {\n  const trackedKeys = React8.useRef([]);\n  const result = useSyncExternalStoreWithSelector3(\n    subscribe,\n    getSnapshot,\n    getServerSnapshot,\n    (x) => x,\n    (a, b) => {\n      if (isPlainObject2(a) && isPlainObject2(b) && trackedKeys.current.length) {\n        for (const key of trackedKeys.current) {\n          const equal = isEqual(\n            a[key],\n            b[key]\n          );\n          if (!equal)\n            return false;\n        }\n        return true;\n      }\n      return isEqual(a, b);\n    }\n  );\n  if (isPlainObject2(result)) {\n    const trackedResult = { ...result };\n    Object.defineProperties(\n      trackedResult,\n      Object.entries(trackedResult).reduce(\n        (res, [key, value]) => {\n          return {\n            ...res,\n            [key]: {\n              configurable: false,\n              enumerable: true,\n              get: () => {\n                if (!trackedKeys.current.includes(key)) {\n                  trackedKeys.current.push(key);\n                }\n                return value;\n              }\n            }\n          };\n        },\n        {}\n      )\n    );\n    return trackedResult;\n  }\n  return result;\n}\n\n// src/hooks/accounts/useAccount.ts\nfunction useAccount({ onConnect, onDisconnect } = {}) {\n  const config = useConfig();\n  const watchAccount_ = React9.useCallback(\n    (callback) => watchAccount(callback),\n    [config]\n  );\n  const account = useSyncExternalStoreWithTracked(watchAccount_, getAccount);\n  const previousAccountRef = React9.useRef();\n  const previousAccount = previousAccountRef.current;\n  React9.useEffect(() => {\n    if (previousAccount?.status !== \"connected\" && account.status === \"connected\") {\n      onConnect?.({\n        address: account.address,\n        connector: account.connector,\n        isReconnected: previousAccount?.status === \"reconnecting\" || previousAccount?.status === void 0\n      });\n    }\n    if (previousAccount?.status === \"connected\" && account.status === \"disconnected\") {\n      onDisconnect?.();\n    }\n    previousAccountRef.current = account;\n  }, [onConnect, onDisconnect, previousAccount, account]);\n  return account;\n}\n\n// src/hooks/accounts/useBalance.ts\nimport { fetchBalance } from \"@wagmi/core\";\nimport * as React10 from \"react\";\nfunction queryKey4({\n  address,\n  chainId,\n  formatUnits,\n  scopeKey,\n  token\n}) {\n  return [\n    {\n      entity: \"balance\",\n      address,\n      chainId,\n      formatUnits,\n      scopeKey,\n      token\n    }\n  ];\n}\nfunction queryFn4({\n  queryKey: [{ address, chainId, formatUnits, token }]\n}) {\n  if (!address)\n    throw new Error(\"address is required\");\n  return fetchBalance({ address, chainId, formatUnits, token });\n}\nfunction useBalance({\n  address,\n  cacheTime,\n  chainId: chainId_,\n  enabled = true,\n  formatUnits,\n  scopeKey,\n  staleTime,\n  suspense,\n  token,\n  watch,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  const queryKey_ = React10.useMemo(\n    () => queryKey4({ address, chainId, formatUnits, scopeKey, token }),\n    [address, chainId, formatUnits, scopeKey, token]\n  );\n  const balanceQuery = useQuery(queryKey_, queryFn4, {\n    cacheTime,\n    enabled: Boolean(enabled && address),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n  useInvalidateOnBlock({\n    chainId,\n    enabled: Boolean(enabled && watch && address),\n    queryKey: queryKey_\n  });\n  return balanceQuery;\n}\n\n// src/hooks/accounts/useConnect.ts\nimport { connect } from \"@wagmi/core\";\nimport * as React11 from \"react\";\nvar mutationKey = (args) => [{ entity: \"connect\", ...args }];\nvar mutationFn = (args) => {\n  const { connector, chainId } = args;\n  if (!connector)\n    throw new Error(\"connector is required\");\n  return connect({ connector, chainId });\n};\nfunction useConnect({\n  chainId,\n  connector,\n  onError,\n  onMutate,\n  onSettled,\n  onSuccess\n} = {}) {\n  const config = useConfig();\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey({ connector, chainId }), mutationFn, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const connect2 = React11.useCallback(\n    (args) => {\n      return mutate({\n        chainId: args?.chainId ?? chainId,\n        connector: args?.connector ?? connector\n      });\n    },\n    [chainId, connector, mutate]\n  );\n  const connectAsync = React11.useCallback(\n    (args) => {\n      return mutateAsync({\n        chainId: args?.chainId ?? chainId,\n        connector: args?.connector ?? connector\n      });\n    },\n    [chainId, connector, mutateAsync]\n  );\n  return {\n    connect: connect2,\n    connectAsync,\n    connectors: config.connectors,\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    pendingConnector: variables?.connector,\n    reset,\n    status,\n    variables\n  };\n}\n\n// src/hooks/accounts/useDisconnect.ts\nimport { disconnect } from \"@wagmi/core\";\nvar mutationKey2 = [{ entity: \"disconnect\" }];\nvar mutationFn2 = () => disconnect();\nfunction useDisconnect({\n  onError,\n  onMutate,\n  onSettled,\n  onSuccess\n} = {}) {\n  const {\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate: disconnect2,\n    mutateAsync: disconnectAsync,\n    reset,\n    status\n  } = useMutation(mutationKey2, mutationFn2, {\n    ...onError ? {\n      onError(error2, _variables, context) {\n        onError(error2, context);\n      }\n    } : {},\n    onMutate,\n    ...onSettled ? {\n      onSettled(_data, error2, _variables, context) {\n        onSettled(error2, context);\n      }\n    } : {},\n    ...onSuccess ? {\n      onSuccess(_data, _variables, context) {\n        onSuccess(context);\n      }\n    } : {}\n  });\n  return {\n    disconnect: disconnect2,\n    disconnectAsync,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    status\n  };\n}\n\n// src/hooks/accounts/useNetwork.ts\nimport { getNetwork, watchNetwork } from \"@wagmi/core\";\nimport { useCallback as useCallback5 } from \"react\";\nfunction useNetwork() {\n  const config = useConfig();\n  const watchNetwork_ = useCallback5(\n    (callback) => watchNetwork(callback),\n    [config]\n  );\n  return useSyncExternalStoreWithTracked(watchNetwork_, getNetwork);\n}\n\n// src/hooks/accounts/useSignMessage.ts\nimport { signMessage } from \"@wagmi/core\";\nimport * as React12 from \"react\";\nvar mutationKey3 = (args) => [{ entity: \"signMessage\", ...args }];\nvar mutationFn3 = (args) => {\n  const { message } = args;\n  if (!message)\n    throw new Error(\"message is required\");\n  return signMessage({ message });\n};\nfunction useSignMessage({\n  message,\n  onError,\n  onMutate,\n  onSettled,\n  onSuccess\n} = {}) {\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey3({ message }), mutationFn3, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const signMessage2 = React12.useCallback(\n    (args) => mutate(args || { message }),\n    [message, mutate]\n  );\n  const signMessageAsync = React12.useCallback(\n    (args) => mutateAsync(args || { message }),\n    [message, mutateAsync]\n  );\n  return {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    signMessage: signMessage2,\n    signMessageAsync,\n    status,\n    variables\n  };\n}\n\n// src/hooks/accounts/useSignTypedData.ts\nimport { signTypedData } from \"@wagmi/core\";\nimport * as React13 from \"react\";\nfunction mutationKey4({ domain, types, message, primaryType }) {\n  return [\n    { entity: \"signTypedData\", domain, types, message, primaryType }\n  ];\n}\nfunction mutationFn4(args) {\n  const { domain, types, primaryType, message } = args;\n  if (!domain)\n    throw new Error(\"domain is required\");\n  if (!types)\n    throw new Error(\"types is required\");\n  if (!primaryType)\n    throw new Error(\"primaryType is required\");\n  if (!message)\n    throw new Error(\"message is required\");\n  return signTypedData({\n    domain,\n    message,\n    primaryType,\n    types\n  });\n}\nfunction useSignTypedData({\n  domain,\n  types,\n  message,\n  primaryType,\n  onError,\n  onMutate,\n  onSettled,\n  onSuccess\n} = {}) {\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(\n    mutationKey4({\n      domain,\n      message,\n      primaryType,\n      types\n    }),\n    mutationFn4,\n    {\n      onError,\n      onMutate,\n      onSettled,\n      onSuccess\n    }\n  );\n  const signTypedData2 = React13.useCallback(\n    (args) => mutate({\n      domain: args?.domain ?? domain,\n      types: args?.types ?? types,\n      message: args?.message ?? message,\n      primaryType: args?.primaryType ?? primaryType\n    }),\n    [domain, types, primaryType, message, mutate]\n  );\n  const signTypedDataAsync = React13.useCallback(\n    (args) => mutateAsync({\n      domain: args?.domain ?? domain,\n      types: args?.types ?? types,\n      message: args?.message ?? message,\n      primaryType: args?.primaryType ?? primaryType\n    }),\n    [domain, types, primaryType, message, mutateAsync]\n  );\n  return {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    signTypedData: signTypedData2,\n    signTypedDataAsync,\n    status,\n    variables\n  };\n}\n\n// src/hooks/accounts/useSwitchNetwork.ts\nimport { switchNetwork } from \"@wagmi/core\";\nimport * as React14 from \"react\";\nvar mutationKey5 = (args) => [{ entity: \"switchNetwork\", ...args }];\nvar mutationFn5 = (args) => {\n  const { chainId } = args;\n  if (!chainId)\n    throw new Error(\"chainId is required\");\n  return switchNetwork({ chainId });\n};\nfunction useSwitchNetwork({\n  chainId,\n  throwForSwitchChainNotSupported,\n  onError,\n  onMutate,\n  onSettled,\n  onSuccess\n} = {}) {\n  const config = useConfig();\n  const forceUpdate = useForceUpdate();\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(mutationKey5({ chainId }), mutationFn5, {\n    onError,\n    onMutate,\n    onSettled,\n    onSuccess\n  });\n  const switchNetwork_ = React14.useCallback(\n    (chainId_) => mutate({ chainId: chainId_ ?? chainId }),\n    [chainId, mutate]\n  );\n  const switchNetworkAsync_ = React14.useCallback(\n    (chainId_) => mutateAsync({ chainId: chainId_ ?? chainId }),\n    [chainId, mutateAsync]\n  );\n  React14.useEffect(() => {\n    const unwatch = config.subscribe(\n      ({ chains, connector }) => ({\n        chains,\n        connector\n      }),\n      forceUpdate\n    );\n    return unwatch;\n  }, [config, forceUpdate]);\n  let switchNetwork2;\n  let switchNetworkAsync;\n  const supportsSwitchChain = !!config.connector?.switchChain;\n  if (throwForSwitchChainNotSupported || supportsSwitchChain) {\n    switchNetwork2 = switchNetwork_;\n    switchNetworkAsync = switchNetworkAsync_;\n  }\n  return {\n    chains: config.chains ?? [],\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    pendingChainId: variables?.chainId,\n    reset,\n    status,\n    switchNetwork: switchNetwork2,\n    switchNetworkAsync,\n    variables\n  };\n}\n\n// src/hooks/contracts/useContractEvent.ts\nimport * as React15 from \"react\";\nfunction useContractEvent({\n  address,\n  chainId,\n  abi,\n  listener,\n  eventName\n} = {}) {\n  const publicClient = usePublicClient({ chainId });\n  const webSocketPublicClient = useWebSocketPublicClient({ chainId });\n  const unwatch = React15.useRef();\n  React15.useEffect(() => {\n    if (!abi || !address || !eventName)\n      return;\n    const publicClient_ = webSocketPublicClient || publicClient;\n    unwatch.current = publicClient_.watchContractEvent({\n      abi,\n      address,\n      eventName,\n      onLogs: listener\n    });\n    return unwatch.current;\n  }, [abi, address, eventName, publicClient.uid, webSocketPublicClient?.uid]);\n  return unwatch.current;\n}\n\n// src/hooks/contracts/useContractInfiniteReads.ts\nimport { replaceEqualDeep } from \"@tanstack/react-query\";\nimport { deepEqual as deepEqual2, readContracts } from \"@wagmi/core\";\nimport * as React16 from \"react\";\nfunction queryKey5({\n  allowFailure,\n  blockNumber,\n  blockTag,\n  cacheKey,\n  scopeKey\n}) {\n  return [\n    {\n      entity: \"readContractsInfinite\",\n      allowFailure,\n      blockNumber,\n      blockTag,\n      cacheKey,\n      scopeKey\n    }\n  ];\n}\nfunction queryFn5({\n  contracts\n}) {\n  return ({\n    queryKey: [{ allowFailure, blockNumber, blockTag }],\n    pageParam\n  }) => {\n    return readContracts({\n      allowFailure,\n      blockNumber,\n      blockTag,\n      contracts: contracts(pageParam || void 0)\n    });\n  };\n}\nfunction useContractInfiniteReads({\n  allowFailure,\n  blockNumber,\n  blockTag,\n  cacheKey,\n  cacheTime,\n  contracts,\n  enabled: enabled_ = true,\n  getNextPageParam,\n  isDataEqual,\n  keepPreviousData,\n  onError,\n  onSettled,\n  onSuccess,\n  scopeKey,\n  select,\n  staleTime,\n  structuralSharing = (oldData, newData) => deepEqual2(oldData, newData) ? oldData : replaceEqualDeep(oldData, newData),\n  suspense\n}) {\n  const queryKey_ = React16.useMemo(\n    () => queryKey5({ allowFailure, blockNumber, blockTag, cacheKey, scopeKey }),\n    [allowFailure, blockNumber, blockTag, cacheKey, scopeKey]\n  );\n  const enabled = React16.useMemo(() => {\n    const enabled2 = Boolean(enabled_ && contracts);\n    return enabled2;\n  }, [contracts, enabled_]);\n  return useInfiniteQuery(queryKey_, queryFn5({ contracts }), {\n    cacheTime,\n    enabled,\n    getNextPageParam,\n    isDataEqual,\n    keepPreviousData,\n    select,\n    staleTime,\n    structuralSharing,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\nfunction paginatedIndexesConfig(fn, {\n  perPage,\n  start,\n  direction\n}) {\n  const contracts = (page = 0) => [...Array(perPage).keys()].map((index) => {\n    return direction === \"increment\" ? start + index + page * perPage : start - index - page * perPage;\n  }).filter((index) => index >= 0).flatMap(fn);\n  return {\n    contracts,\n    getNextPageParam(lastPage, pages) {\n      return lastPage?.length === perPage ? pages.length : void 0;\n    }\n  };\n}\n\n// src/hooks/contracts/useContractRead.ts\nimport { replaceEqualDeep as replaceEqualDeep2 } from \"@tanstack/react-query\";\nimport { deepEqual as deepEqual3, readContract } from \"@wagmi/core\";\nimport * as React17 from \"react\";\nfunction queryKey6({\n  account,\n  address,\n  args,\n  blockNumber,\n  blockTag,\n  chainId,\n  functionName,\n  scopeKey\n}) {\n  return [\n    {\n      entity: \"readContract\",\n      account,\n      address,\n      args,\n      blockNumber,\n      blockTag,\n      chainId,\n      functionName,\n      scopeKey\n    }\n  ];\n}\nfunction queryFn6({ abi }) {\n  return async ({\n    queryKey: [\n      { account, address, args, blockNumber, blockTag, chainId, functionName }\n    ]\n  }) => {\n    if (!abi)\n      throw new Error(\"abi is required\");\n    if (!address)\n      throw new Error(\"address is required\");\n    return await readContract({\n      account,\n      address,\n      args,\n      blockNumber,\n      blockTag,\n      chainId,\n      abi,\n      functionName\n    }) ?? null;\n  };\n}\nfunction useContractRead({\n  abi,\n  address,\n  account,\n  args,\n  blockNumber: blockNumberOverride,\n  blockTag,\n  cacheOnBlock = false,\n  cacheTime,\n  chainId: chainId_,\n  enabled: enabled_ = true,\n  functionName,\n  isDataEqual,\n  keepPreviousData,\n  onError,\n  onSettled,\n  onSuccess,\n  scopeKey,\n  select,\n  staleTime,\n  structuralSharing = (oldData, newData) => deepEqual3(oldData, newData) ? oldData : replaceEqualDeep2(oldData, newData),\n  suspense,\n  watch\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  const { data: blockNumber_ } = useBlockNumber({\n    chainId,\n    enabled: watch || cacheOnBlock,\n    scopeKey: watch || cacheOnBlock ? void 0 : \"idle\",\n    watch\n  });\n  const blockNumber = blockNumberOverride ?? blockNumber_;\n  const queryKey_ = React17.useMemo(\n    () => queryKey6({\n      account,\n      address,\n      args,\n      blockNumber: cacheOnBlock ? blockNumber : void 0,\n      blockTag,\n      chainId,\n      functionName,\n      scopeKey\n    }),\n    [\n      account,\n      address,\n      args,\n      blockNumber,\n      blockTag,\n      cacheOnBlock,\n      chainId,\n      functionName,\n      scopeKey\n    ]\n  );\n  const enabled = React17.useMemo(() => {\n    let enabled2 = Boolean(enabled_ && abi && address && functionName);\n    if (cacheOnBlock)\n      enabled2 = Boolean(enabled2 && blockNumber);\n    return enabled2;\n  }, [abi, address, blockNumber, cacheOnBlock, enabled_, functionName]);\n  useInvalidateOnBlock({\n    chainId,\n    enabled: Boolean(enabled && watch && !cacheOnBlock),\n    queryKey: queryKey_\n  });\n  return useQuery(\n    queryKey_,\n    queryFn6({\n      abi\n    }),\n    {\n      cacheTime,\n      enabled,\n      isDataEqual,\n      keepPreviousData,\n      select,\n      staleTime,\n      structuralSharing,\n      suspense,\n      onError,\n      onSettled,\n      onSuccess\n    }\n  );\n}\n\n// src/hooks/contracts/useContractReads.ts\nimport { replaceEqualDeep as replaceEqualDeep3 } from \"@tanstack/react-query\";\nimport { deepEqual as deepEqual4, readContracts as readContracts2 } from \"@wagmi/core\";\nimport * as React18 from \"react\";\nfunction queryKey7({\n  allowFailure,\n  blockNumber,\n  blockTag,\n  chainId,\n  contracts,\n  scopeKey\n}) {\n  return [\n    {\n      entity: \"readContracts\",\n      allowFailure,\n      blockNumber,\n      blockTag,\n      chainId,\n      scopeKey,\n      contracts: (contracts ?? []).map(({ address, args, chainId: chainId2, functionName }) => ({\n        address,\n        args,\n        chainId: chainId2,\n        functionName\n      }))\n    }\n  ];\n}\nfunction queryFn7({ abis }) {\n  return ({\n    queryKey: [{ allowFailure, blockNumber, blockTag, contracts: contracts_ }]\n  }) => {\n    const contracts = contracts_.map((contract, i) => ({\n      ...contract,\n      abi: abis[i]\n    }));\n    return readContracts2({\n      allowFailure,\n      contracts,\n      blockNumber,\n      blockTag\n    });\n  };\n}\nfunction useContractReads({\n  allowFailure: allowFailure_,\n  blockNumber: blockNumberOverride,\n  blockTag,\n  cacheOnBlock = false,\n  cacheTime,\n  contracts,\n  enabled: enabled_ = true,\n  isDataEqual,\n  keepPreviousData,\n  onError,\n  onSettled,\n  onSuccess,\n  scopeKey,\n  select,\n  staleTime,\n  structuralSharing = (oldData, newData) => deepEqual4(oldData, newData) ? oldData : replaceEqualDeep3(oldData, newData),\n  suspense,\n  watch\n} = {}) {\n  const allowFailure = allowFailure_ ?? true;\n  const { data: blockNumber_ } = useBlockNumber({\n    enabled: watch || cacheOnBlock,\n    watch\n  });\n  const chainId = useChainId();\n  const blockNumber = blockNumberOverride ?? blockNumber_;\n  const queryKey_ = React18.useMemo(\n    () => queryKey7({\n      allowFailure,\n      blockNumber: cacheOnBlock ? blockNumber : void 0,\n      blockTag,\n      chainId,\n      contracts,\n      scopeKey\n    }),\n    [\n      allowFailure,\n      blockNumber,\n      blockTag,\n      cacheOnBlock,\n      chainId,\n      scopeKey,\n      contracts\n    ]\n  );\n  const enabled = React18.useMemo(() => {\n    let enabled2 = Boolean(\n      enabled_ && contracts?.every(\n        (x) => x.abi && x.address && x.functionName\n      )\n    );\n    if (cacheOnBlock)\n      enabled2 = Boolean(enabled2 && blockNumber);\n    return enabled2;\n  }, [blockNumber, cacheOnBlock, contracts, enabled_]);\n  useInvalidateOnBlock({\n    enabled: Boolean(enabled && watch && !cacheOnBlock),\n    queryKey: queryKey_\n  });\n  const abis = (contracts ?? []).map(\n    ({ abi }) => abi\n  );\n  return useQuery(queryKey_, queryFn7({ abis }), {\n    cacheTime,\n    enabled,\n    isDataEqual,\n    keepPreviousData,\n    staleTime,\n    select,\n    structuralSharing,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\n// src/hooks/contracts/useContractWrite.ts\nimport { writeContract } from \"@wagmi/core\";\nimport { getSendTransactionParameters } from \"@wagmi/core/internal\";\nimport * as React19 from \"react\";\nfunction mutationKey6({\n  address,\n  abi,\n  functionName,\n  ...config\n}) {\n  const {\n    args,\n    accessList,\n    account,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    request,\n    value\n  } = config;\n  return [\n    {\n      entity: \"writeContract\",\n      address,\n      args,\n      abi,\n      accessList,\n      account,\n      functionName,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      request,\n      value\n    }\n  ];\n}\nfunction mutationFn6(config) {\n  if (config.mode === \"prepared\") {\n    if (!config.request)\n      throw new Error(\"request is required\");\n    return writeContract({\n      mode: \"prepared\",\n      request: config.request\n    });\n  }\n  if (!config.address)\n    throw new Error(\"address is required\");\n  if (!config.abi)\n    throw new Error(\"abi is required\");\n  if (!config.functionName)\n    throw new Error(\"functionName is required\");\n  return writeContract({\n    address: config.address,\n    args: config.args,\n    chainId: config.chainId,\n    abi: config.abi,\n    functionName: config.functionName,\n    accessList: config.accessList,\n    account: config.account,\n    gas: config.gas,\n    gasPrice: config.gasPrice,\n    maxFeePerGas: config.maxFeePerGas,\n    maxPriorityFeePerGas: config.maxPriorityFeePerGas,\n    nonce: config.nonce,\n    value: config.value\n  });\n}\nfunction useContractWrite(config) {\n  const { address, abi, args, chainId, functionName, mode, request } = config;\n  const {\n    accessList,\n    account,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    value\n  } = getSendTransactionParameters(config);\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(\n    mutationKey6({\n      address,\n      abi,\n      functionName,\n      chainId,\n      mode,\n      args,\n      accessList,\n      account,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      request,\n      value\n    }),\n    mutationFn6,\n    {\n      onError: config.onError,\n      onMutate: config.onMutate,\n      onSettled: config.onSettled,\n      onSuccess: config.onSuccess\n    }\n  );\n  const write = React19.useMemo(() => {\n    if (config.mode === \"prepared\") {\n      if (!request)\n        return void 0;\n      return () => mutate({\n        mode: \"prepared\",\n        request: config.request,\n        chainId: config.chainId\n      });\n    }\n    return (overrideConfig) => mutate({\n      address,\n      args,\n      abi,\n      functionName,\n      chainId,\n      accessList,\n      account,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      value,\n      ...overrideConfig\n    });\n  }, [\n    accessList,\n    account,\n    abi,\n    address,\n    args,\n    chainId,\n    config.chainId,\n    config.mode,\n    config.request,\n    functionName,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    mutate,\n    nonce,\n    request,\n    value\n  ]);\n  const writeAsync = React19.useMemo(() => {\n    if (config.mode === \"prepared\") {\n      if (!request)\n        return void 0;\n      return () => mutateAsync({\n        mode: \"prepared\",\n        request: config.request\n      });\n    }\n    return (overrideConfig) => mutateAsync({\n      address,\n      args,\n      abi,\n      chainId,\n      functionName,\n      accessList,\n      account,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      value,\n      ...overrideConfig\n    });\n  }, [\n    accessList,\n    account,\n    abi,\n    address,\n    args,\n    chainId,\n    config.mode,\n    config.request,\n    functionName,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    mutateAsync,\n    nonce,\n    request,\n    value\n  ]);\n  return {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    status,\n    variables,\n    write,\n    writeAsync\n  };\n}\n\n// src/hooks/contracts/usePrepareContractWrite.ts\nimport { prepareWriteContract } from \"@wagmi/core\";\nimport { getCallParameters } from \"@wagmi/core/internal\";\nfunction queryKey8({\n  accessList,\n  account,\n  activeChainId,\n  args,\n  address,\n  blockNumber,\n  blockTag,\n  chainId,\n  functionName,\n  gas,\n  gasPrice,\n  maxFeePerGas,\n  maxPriorityFeePerGas,\n  nonce,\n  scopeKey,\n  walletClientAddress,\n  value\n}) {\n  return [\n    {\n      entity: \"prepareContractTransaction\",\n      accessList,\n      account,\n      activeChainId,\n      address,\n      args,\n      blockNumber,\n      blockTag,\n      chainId,\n      functionName,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      scopeKey,\n      walletClientAddress,\n      value\n    }\n  ];\n}\nfunction queryFn8({\n  abi,\n  walletClient\n}) {\n  return ({\n    queryKey: [\n      {\n        accessList,\n        account,\n        args,\n        address,\n        blockNumber,\n        blockTag,\n        chainId,\n        functionName,\n        gas,\n        gasPrice,\n        maxFeePerGas,\n        maxPriorityFeePerGas,\n        nonce,\n        value\n      }\n    ]\n  }) => {\n    if (!abi)\n      throw new Error(\"abi is required\");\n    if (!address)\n      throw new Error(\"address is required\");\n    if (!functionName)\n      throw new Error(\"functionName is required\");\n    return prepareWriteContract({\n      abi,\n      accessList,\n      account,\n      args,\n      address,\n      blockNumber,\n      blockTag,\n      chainId,\n      functionName,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      walletClient,\n      value\n    });\n  };\n}\nfunction usePrepareContractWrite({\n  address,\n  abi,\n  functionName,\n  chainId,\n  args,\n  cacheTime,\n  enabled = true,\n  scopeKey,\n  staleTime,\n  suspense,\n  onError,\n  onSettled,\n  onSuccess,\n  ...config\n} = {}) {\n  const { chain: activeChain } = useNetwork();\n  const { data: walletClient } = useWalletClient({ chainId });\n  const {\n    accessList,\n    account,\n    blockNumber,\n    blockTag,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    nonce,\n    value\n  } = getCallParameters(config);\n  const prepareContractWriteQuery = useQuery(\n    queryKey8({\n      accessList,\n      account,\n      activeChainId: activeChain?.id,\n      address,\n      args,\n      blockNumber,\n      blockTag,\n      chainId,\n      functionName,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      scopeKey,\n      walletClientAddress: walletClient?.account.address,\n      value\n    }),\n    queryFn8({\n      abi,\n      walletClient\n    }),\n    {\n      cacheTime,\n      enabled: Boolean(\n        enabled && abi && address && functionName && walletClient\n      ),\n      staleTime,\n      suspense,\n      onError,\n      onSettled,\n      onSuccess\n    }\n  );\n  return Object.assign(prepareContractWriteQuery, {\n    config: {\n      chainId,\n      mode: \"prepared\",\n      request: void 0,\n      ...prepareContractWriteQuery.data\n    }\n  });\n}\n\n// src/hooks/contracts/useToken.ts\nimport { fetchToken } from \"@wagmi/core\";\nfunction queryKey9({\n  address,\n  chainId,\n  formatUnits,\n  scopeKey\n}) {\n  return [{ entity: \"token\", address, chainId, formatUnits, scopeKey }];\n}\nfunction queryFn9({\n  queryKey: [{ address, chainId, formatUnits }]\n}) {\n  if (!address)\n    throw new Error(\"address is required\");\n  return fetchToken({ address, chainId, formatUnits });\n}\nfunction useToken({\n  address,\n  chainId: chainId_,\n  formatUnits = \"ether\",\n  cacheTime,\n  enabled = true,\n  scopeKey,\n  staleTime = 1e3 * 60 * 60 * 24,\n  suspense,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  return useQuery(\n    queryKey9({ address, chainId, formatUnits, scopeKey }),\n    queryFn9,\n    {\n      cacheTime,\n      enabled: Boolean(enabled && address),\n      staleTime,\n      suspense,\n      onError,\n      onSettled,\n      onSuccess\n    }\n  );\n}\n\n// src/hooks/ens/useEnsAddress.ts\nimport { fetchEnsAddress } from \"@wagmi/core\";\nfunction queryKey10({ chainId, name, scopeKey }) {\n  return [{ entity: \"ensAddress\", chainId, name, scopeKey }];\n}\nfunction queryFn10({\n  queryKey: [{ chainId, name }]\n}) {\n  if (!name)\n    throw new Error(\"name is required\");\n  return fetchEnsAddress({ chainId, name });\n}\nfunction useEnsAddress({\n  cacheTime,\n  chainId: chainId_,\n  enabled = true,\n  name,\n  scopeKey,\n  staleTime = 1e3 * 60 * 60 * 24,\n  suspense,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  return useQuery(queryKey10({ chainId, name, scopeKey }), queryFn10, {\n    cacheTime,\n    enabled: Boolean(enabled && chainId && name),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\n// src/hooks/ens/useEnsAvatar.ts\nimport { fetchEnsAvatar } from \"@wagmi/core\";\nfunction queryKey11({ name, chainId, scopeKey }) {\n  return [{ entity: \"ensAvatar\", name, chainId, scopeKey }];\n}\nfunction queryFn11({\n  queryKey: [{ name, chainId }]\n}) {\n  if (!name)\n    throw new Error(\"name is required\");\n  return fetchEnsAvatar({ name, chainId });\n}\nfunction useEnsAvatar({\n  cacheTime,\n  chainId: chainId_,\n  enabled = true,\n  name,\n  scopeKey,\n  staleTime = 1e3 * 60 * 60 * 24,\n  suspense,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  return useQuery(queryKey11({ name, chainId, scopeKey }), queryFn11, {\n    cacheTime,\n    enabled: Boolean(enabled && name && chainId),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\n// src/hooks/ens/useEnsName.ts\nimport { fetchEnsName } from \"@wagmi/core\";\nfunction queryKey12({\n  address,\n  chainId,\n  scopeKey\n}) {\n  return [{ entity: \"ensName\", address, chainId, scopeKey }];\n}\nfunction queryFn12({\n  queryKey: [{ address, chainId }]\n}) {\n  if (!address)\n    throw new Error(\"address is required\");\n  return fetchEnsName({ address, chainId });\n}\nfunction useEnsName({\n  address,\n  cacheTime,\n  chainId: chainId_,\n  enabled = true,\n  scopeKey,\n  staleTime = 1e3 * 60 * 60 * 24,\n  suspense,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  return useQuery(queryKey12({ address, chainId, scopeKey }), queryFn12, {\n    cacheTime,\n    enabled: Boolean(enabled && address && chainId),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\n// src/hooks/ens/useEnsResolver.ts\nimport { fetchEnsResolver } from \"@wagmi/core\";\nfunction queryKey13({ chainId, name, scopeKey }) {\n  return [\n    { entity: \"ensResolver\", chainId, name, scopeKey, persist: false }\n  ];\n}\nfunction queryFn13({\n  queryKey: [{ chainId, name }]\n}) {\n  if (!name)\n    throw new Error(\"name is required\");\n  return fetchEnsResolver({ chainId, name });\n}\nfunction useEnsResolver({\n  chainId: chainId_,\n  name,\n  enabled = true,\n  scopeKey,\n  suspense,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  return useQuery(queryKey13({ chainId, name, scopeKey }), queryFn13, {\n    cacheTime: 0,\n    enabled: Boolean(enabled && chainId && name),\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\n// src/hooks/transactions/usePrepareSendTransaction.ts\nimport { prepareSendTransaction } from \"@wagmi/core\";\nfunction queryKey14({\n  accessList,\n  account,\n  activeChainId,\n  chainId,\n  data,\n  gas,\n  gasPrice,\n  maxFeePerGas,\n  maxPriorityFeePerGas,\n  nonce,\n  to,\n  value,\n  scopeKey,\n  walletClientAddress\n}) {\n  return [\n    {\n      entity: \"prepareSendTransaction\",\n      activeChainId,\n      accessList,\n      account,\n      chainId,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n      scopeKey,\n      walletClientAddress\n    }\n  ];\n}\nfunction queryFn14({ walletClient }) {\n  return ({\n    queryKey: [\n      {\n        accessList,\n        account,\n        chainId,\n        data,\n        gas,\n        gasPrice,\n        maxFeePerGas,\n        maxPriorityFeePerGas,\n        nonce,\n        to,\n        value\n      }\n    ]\n  }) => {\n    if (!to)\n      throw new Error(\"to is required\");\n    return prepareSendTransaction({\n      accessList,\n      account,\n      chainId,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      to,\n      value,\n      walletClient\n    });\n  };\n}\nfunction usePrepareSendTransaction({\n  accessList,\n  account,\n  chainId,\n  cacheTime,\n  data,\n  enabled = true,\n  gas,\n  gasPrice,\n  maxFeePerGas,\n  maxPriorityFeePerGas,\n  nonce,\n  scopeKey,\n  staleTime,\n  suspense,\n  to,\n  value,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const { chain: activeChain } = useNetwork();\n  const { data: walletClient } = useWalletClient({ chainId });\n  const prepareSendTransactionQuery = useQuery(\n    queryKey14({\n      accessList,\n      activeChainId: activeChain?.id,\n      account,\n      chainId,\n      data,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      nonce,\n      scopeKey,\n      to,\n      value,\n      walletClientAddress: walletClient?.account.address\n    }),\n    queryFn14({ walletClient }),\n    {\n      cacheTime,\n      enabled: Boolean(enabled && walletClient && to),\n      staleTime,\n      suspense,\n      onError,\n      onSettled,\n      onSuccess\n    }\n  );\n  return Object.assign(prepareSendTransactionQuery, {\n    config: {\n      mode: \"prepared\",\n      ...prepareSendTransactionQuery.isSuccess ? prepareSendTransactionQuery.data : void 0\n    }\n  });\n}\n\n// src/hooks/transactions/useSendTransaction.ts\nimport { sendTransaction } from \"@wagmi/core\";\nimport * as React20 from \"react\";\nvar mutationKey7 = (args) => [{ entity: \"sendTransaction\", ...args }];\nvar mutationFn7 = ({\n  accessList,\n  account,\n  chainId,\n  data,\n  gas,\n  gasPrice,\n  maxFeePerGas,\n  maxPriorityFeePerGas,\n  mode,\n  nonce,\n  to,\n  value\n}) => {\n  if (!to)\n    throw new Error(\"to is required.\");\n  return sendTransaction({\n    accessList,\n    account,\n    chainId,\n    data,\n    gas,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    mode,\n    nonce,\n    to,\n    value\n  });\n};\nfunction useSendTransaction({\n  accessList,\n  account,\n  chainId,\n  data: data_,\n  gas,\n  gasPrice,\n  maxFeePerGas,\n  maxPriorityFeePerGas,\n  mode,\n  nonce,\n  to,\n  value,\n  onError,\n  onMutate,\n  onSettled,\n  onSuccess\n} = {}) {\n  const {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    mutate,\n    mutateAsync,\n    reset,\n    status,\n    variables\n  } = useMutation(\n    mutationKey7({\n      accessList,\n      account,\n      chainId,\n      data: data_,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      mode,\n      nonce,\n      to,\n      value\n    }),\n    mutationFn7,\n    {\n      onError,\n      onMutate,\n      onSettled,\n      onSuccess\n    }\n  );\n  const sendTransaction2 = React20.useCallback(\n    (args) => mutate({\n      chainId,\n      mode,\n      ...args || {\n        accessList,\n        account,\n        chainId,\n        data: data_,\n        gas,\n        gasPrice,\n        maxFeePerGas,\n        maxPriorityFeePerGas,\n        mode,\n        nonce,\n        value,\n        to\n      }\n    }),\n    [\n      accessList,\n      account,\n      chainId,\n      data_,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      mode,\n      mutate,\n      nonce,\n      to,\n      value\n    ]\n  );\n  const sendTransactionAsync = React20.useCallback(\n    (args) => mutateAsync({\n      chainId,\n      mode,\n      ...args || {\n        accessList,\n        account,\n        chainId,\n        data: data_,\n        gas,\n        gasPrice,\n        maxFeePerGas,\n        maxPriorityFeePerGas,\n        mode,\n        nonce,\n        value,\n        to\n      }\n    }),\n    [\n      accessList,\n      account,\n      chainId,\n      data_,\n      gas,\n      gasPrice,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      mode,\n      mutateAsync,\n      nonce,\n      to,\n      value\n    ]\n  );\n  return {\n    data,\n    error,\n    isError,\n    isIdle,\n    isLoading,\n    isSuccess,\n    reset,\n    sendTransaction: mode === \"prepared\" && !to ? void 0 : sendTransaction2,\n    sendTransactionAsync: mode === \"prepared\" && !to ? void 0 : sendTransactionAsync,\n    status,\n    variables\n  };\n}\n\n// src/hooks/transactions/useTransaction.ts\nimport { fetchTransaction } from \"@wagmi/core\";\nfunction queryKey15({ chainId, hash, scopeKey }) {\n  return [{ entity: \"transaction\", chainId, hash, scopeKey }];\n}\nfunction queryFn15({\n  queryKey: [{ chainId, hash }]\n}) {\n  if (!hash)\n    throw new Error(\"hash is required\");\n  return fetchTransaction({ chainId, hash });\n}\nfunction useTransaction({\n  cacheTime = 0,\n  chainId: chainId_,\n  enabled = true,\n  hash,\n  scopeKey,\n  staleTime,\n  suspense,\n  onError,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  return useQuery(queryKey15({ chainId, hash, scopeKey }), queryFn15, {\n    cacheTime,\n    enabled: Boolean(enabled && hash),\n    staleTime,\n    suspense,\n    onError,\n    onSettled,\n    onSuccess\n  });\n}\n\n// src/hooks/transactions/useWaitForTransaction.ts\nimport { waitForTransaction } from \"@wagmi/core\";\nfunction queryKey16({\n  confirmations,\n  chainId,\n  hash,\n  scopeKey,\n  timeout\n}) {\n  return [\n    {\n      entity: \"waitForTransaction\",\n      confirmations,\n      chainId,\n      hash,\n      scopeKey,\n      timeout\n    }\n  ];\n}\nfunction queryFn16({\n  onReplaced\n}) {\n  return ({\n    queryKey: [{ chainId, confirmations, hash, timeout }]\n  }) => {\n    if (!hash)\n      throw new Error(\"hash is required\");\n    return waitForTransaction({\n      chainId,\n      confirmations,\n      hash,\n      onReplaced,\n      timeout\n    });\n  };\n}\nfunction useWaitForTransaction({\n  chainId: chainId_,\n  confirmations,\n  hash,\n  timeout,\n  cacheTime,\n  enabled = true,\n  scopeKey,\n  staleTime,\n  suspense,\n  onError,\n  onReplaced,\n  onSettled,\n  onSuccess\n} = {}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  return useQuery(\n    queryKey16({ chainId, confirmations, hash, scopeKey, timeout }),\n    queryFn16({ onReplaced }),\n    {\n      cacheTime,\n      enabled: Boolean(enabled && hash),\n      staleTime,\n      suspense,\n      onError,\n      onSettled,\n      onSuccess\n    }\n  );\n}\n\n// src/hooks/transactions/useWatchPendingTransactions.ts\nimport * as React21 from \"react\";\nfunction useWatchPendingTransactions({\n  chainId: chainId_,\n  enabled = true,\n  listener\n}) {\n  const chainId = useChainId({ chainId: chainId_ });\n  const publicClient = usePublicClient({ chainId });\n  const webSocketPublicClient = useWebSocketPublicClient({ chainId });\n  React21.useEffect(() => {\n    if (!enabled)\n      return;\n    const publicClient_ = webSocketPublicClient ?? publicClient;\n    return publicClient_.watchPendingTransactions({\n      onTransactions: listener\n    });\n  }, [enabled, listener, publicClient, webSocketPublicClient]);\n}\n\n// src/index.ts\nimport {\n  ChainMismatchError,\n  ChainNotConfiguredError,\n  Connector,\n  ConnectorAlreadyConnectedError,\n  ConnectorNotFoundError,\n  ConfigChainsNotFound,\n  SwitchChainNotSupportedError,\n  configureChains,\n  createStorage as createStorage2,\n  deepEqual as deepEqual5,\n  deserialize,\n  erc20ABI,\n  erc721ABI,\n  erc4626ABI,\n  mainnet,\n  readContracts as readContracts3,\n  sepolia,\n  serialize\n} from \"@wagmi/core\";\nexport {\n  ChainMismatchError,\n  ChainNotConfiguredError,\n  ConfigChainsNotFound,\n  Connector,\n  ConnectorAlreadyConnectedError,\n  ConnectorNotFoundError,\n  Context,\n  SwitchChainNotSupportedError,\n  WagmiConfig,\n  configureChains,\n  createConfig,\n  createStorage2 as createStorage,\n  deepEqual5 as deepEqual,\n  deserialize,\n  erc20ABI,\n  erc4626ABI,\n  erc721ABI,\n  mainnet,\n  paginatedIndexesConfig,\n  readContracts3 as readContracts,\n  sepolia,\n  serialize,\n  useAccount,\n  useBalance,\n  useBlockNumber,\n  useChainId,\n  useConfig,\n  useConnect,\n  useContractEvent,\n  useContractInfiniteReads,\n  useContractRead,\n  useContractReads,\n  useContractWrite,\n  useDisconnect,\n  useEnsAddress,\n  useEnsAvatar,\n  useEnsName,\n  useEnsResolver,\n  useFeeData,\n  useInfiniteQuery,\n  useMutation,\n  useNetwork,\n  usePrepareContractWrite,\n  usePrepareSendTransaction,\n  usePublicClient,\n  useQuery,\n  useQueryClient2 as useQueryClient,\n  useSendTransaction,\n  useSignMessage,\n  useSignTypedData,\n  useSwitchNetwork,\n  useToken,\n  useTransaction,\n  useWaitForTransaction,\n  useWalletClient,\n  useWatchPendingTransactions,\n  useWebSocketPublicClient\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}